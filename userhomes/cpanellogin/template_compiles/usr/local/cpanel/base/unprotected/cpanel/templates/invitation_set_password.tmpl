Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/base/unprotected/cpanel/templates/invitation_set_password.tmpl',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set('application_dir','cpanel');$stash->set('file','invitation');$output .= '

';$output .= $context->process('_assets/cjt2_header_include.tt');$output .= '

<div id="content" ng-controller="setPasswordController">
    <div id="forms">
        <form id="reset_form" name="reset_form" action="/invitation" method="post" novalidate ng-cloak autocomplete="off" ng-submit="inProgress = true;">
            <input type="hidden" name="action" value="password">
            <input type="hidden" name="user" value="';$output .= $stash->get('user');$output .= '">
            <input type="hidden" name="account_type" value="';$output .= $stash->get(['CPANEL',0,'get_account_type',0]);$output .= '">
            <input type="hidden" name="debug" value="';$output .= $stash->get(['CPANEL',0,'is_debug_mode_enabled',0])? '1' : '';$output .= '">

            <!-- Password Input -->
            <div class="reset-input-group">
                <div class="input-req-login">
                    <label for="password">';$output .= $stash->get(['locale',0,'maketext',['New Password' ]]);$output .= '</label>
                </div>
                <password name="password"
                          class="std_textbox"
                          tabindex="1"
                          auto-focus
                          autocomplete="off"
                          title="';$output .= $stash->get(['locale',0,'maketext',['Your new password.' ]]);$output .= '"
                          minimum-strength="';$output .= $stash->get(['get_required_password_strength',['virtual' ]]);$output .= '"
                          placeholder="';$output .= $stash->get(['locale',0,'maketext',['Enter your new password' ]]);$output .= '"
                          password="password"
                          show-meter="true"
                          show-strength="true"
                          show-generator="true"
                          minimum-length="5"
                          required
                          generate-button-tab-index="-1"
                          toggle-view-button-tab-index="-1"
                          generate-settings-tab-index="-1"
                          strength-meets-template="';$output .= $stash->get(['locale',0,'lextext',['This password has a strength of [numf,_1], which meets or exceeds the system requirement of [numf,_2].' ]]);$output .= '"
                          strength-does-not-meet-template="';$output .= $stash->get(['locale',0,'lextext',['The password has a strength of [numf,_1], but your system requires a strength of [numf,_2].' ]]);$output .= '"
                          password-strength="passwordStrength">
                </password>

                <ul validation-container field-name="password" ng-cloak>
                   <li validation-item field-name="password" validation-name="required" id="val-password-required">
                       ';$output .= $stash->get(['locale',0,'maketext',['You must complete this field.' ]]);$output .= '
                   </li>
                   <li validation-item field-name="password" validation-name="minlength" id="val-password-minlength">
                       ';$output .= $stash->get(['locale',0,'maketext',['You must provide a password with at least 5 characters.' ]]);$output .= '
                   </li>
                   <li validation-item field-name="password" validation-name="minimumPasswordStrength" id="val-password-minimum-strength">
                       ';$output .= $stash->get(['locale',0,'maketext',['You must provide a stronger password.' ]]);$output .= '
                   </li>
               </ul>
           </div>

            <!-- Password Confirmation -->
            <div class="reset-input-group">
                <div class="input-req-login">
                    <label for="confirm">';$output .= $stash->get(['locale',0,'maketext',['Confirm Password' ]]);$output .= '</label>
                </div>
                <div class="input-field-login icon password-confirm-container">
                    <input name="confirm"
                           id="confirm"
                           type="password"
                           ng-model="passwordConfirm"
                           class="std_textbox"
                           tabindex="2"
                           placeholder="';$output .= $stash->get(['locale',0,'maketext',['Enter your new password, again.' ]]);$output .= '"
                           validate-equals="reset_form.password"
                           required>
                </div>

                <ul validation-container field-name="confirm" ng-cloak>
                    <li validation-item field-name="confirm" validation-name="required" id="puzzle-guess-input-required">
                       ';$output .= $stash->get(['locale',0,'maketext',['You must complete this field.' ]]);$output .= '
                   </li>
                   <li validation-item field-name="confirm" validation-name="validateEquals" id="val-password-confirm-match">
                           ';$output .= $stash->get(['locale',0,'maketext',['The passwords do not match.' ]]);$output .= '
                       </li>
                </ul>
            </div>

            <div class="controls">
                <div class="login-btn">
                    <input name="login"
                           type="submit"
                           id="login"
                           value="';$output .= $stash->get(['locale',0,'maketext',['Set Password' ]]);$output .= "\"\n                           ng-disabled=\"!reset_form.\$valid || reset_form.\$pending || inProgress\">\n                </div>\n            </div>\n        </form>\n        <span id=\"invitation-set-password\">";$output .= '</span>
    </div>
</div>
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});