#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 3.100
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => '/var/cpanel/templates/dovecotSNI/main.default',
        'modtime' => '1729506215',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;

    eval { BLOCK: {
$output .=  '
# DO NOT MODIFY THE NEXT LINE:
# This version of dovecot supports: wildcards, multi local_name, explict maincert local_name.

# Main cert for SNI
';
#line 11 "/var/cpanel/templates/dovecotSNI/main.default"
if ($stash->get('main_cert_domains') && $stash->get(['main_cert_domains', 0, 'size', 0])) {
$output .=  '
local_name "';
#line 7 "/var/cpanel/templates/dovecotSNI/main.default"
$output .=  $stash->get(['main_cert_domains', 0, 'join', [ ' ' ]]);
$output .=  '" {
    ssl_cert = <';
#line 8 "/var/cpanel/templates/dovecotSNI/main.default"
$output .=  $stash->get('ssl_cert_file');
$output .=  '
    ssl_key = <';
#line 9 "/var/cpanel/templates/dovecotSNI/main.default"
$output .=  $stash->get('ssl_key_file');
$output .=  '
}
';
}

$output .=  '
# END - Main cert for SNI

# Domain TLS
';
#line 21 "/var/cpanel/templates/dovecotSNI/main.default"

# FOREACH
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('mail_sni_domains');

    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n";
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'domain_info'} = $_tt_value;
$output .=  'local_name "';
#line 16 "/var/cpanel/templates/dovecotSNI/main.default"
$output .=  $stash->get(['domain_info', 0, 'cert_domains', 0, 'join', [ ' ' ]]);
$output .=  '" {';
#line 17 "/var/cpanel/templates/dovecotSNI/main.default"
$stash->set('cert_path', $stash->get(['get_domain_path', [ $stash->get(['domain_info', 0, 'domain_tls', 0]) ]]));
$output .=  '
    ssl_cert = <';
#line 18 "/var/cpanel/templates/dovecotSNI/main.default"
$output .=  $stash->get('cert_path');
$output .=  '
    ssl_key = <';
#line 19 "/var/cpanel/templates/dovecotSNI/main.default"
$output .=  $stash->get('cert_path');
$output .=  '
}
';;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  '# End Domain TLS
';
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
