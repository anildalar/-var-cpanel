Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/whostmgr/docroot/templates/downlog.tmpl',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set('CPList',$context->plugin('CPList'));$output .= '
';$output .= do {my$output='';$output .= '
<div id="content">
  ';if ($stash->get(['data',0,'filesize',0])){$output .= '
    <div>
      ';$output .= do {my$output='';my$_tt_filter=$context->filter('html')|| $context->throw($context->error);$output .= $stash->get(['locale',0,'maketext',['The system is processing the raw “[_1]” log for the domain “[_2]”.',$stash->get(['data',0,'logtype',0]),$stash->get(['data',0,'domain',0])]]);&$_tt_filter($output)};$output .= '
      ';$output .= do {my$output='';my$_tt_filter=$context->filter('html')|| $context->throw($context->error);$output .= $stash->get(['locale',0,'maketext',['The size of the uncompressed file is “[format_bytes,_1]”.',$stash->get(['data',0,'filesize',0])]]);&$_tt_filter($output)};$output .= '
    </div>
    <div>
      ';$output .= $stash->get(['locale',0,'maketext',['[output,url,_1,Click this link] to download the log file.',$stash->get(['data',0,'newuri',0])]]);$output .= '
    </div>
  '}else {$output .= '
    ';$output .= $context->include('_raw_log_warnings.tmpl');$output .= '
    <div>
      <strong>';$output .= do {my$output='';my$_tt_filter=$context->filter('html')|| $context->throw($context->error);$output .= $stash->get(['locale',0,'maketext',['The requested log file for the domain “[_1]” is empty.',$stash->get(['data',0,'domain',0])]]);&$_tt_filter($output)};$output .= '</strong>
    </div>
  '}$output .= '
</div>

';$context->include('master_templates/master.tmpl',{'theme'=>'bootstrap','app_key'=>$stash->get(['data',0,'logtype',0])eq 'ftp' ? 'raw_ftp_log_download' : $stash->get(['data',0,'logtype',0])eq 'ea-nginx' ? 'raw_ea_nginx_log_download' : 'raw_apache_log_download','content',$output })}}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});