Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/whostmgr/docroot/templates/_dnsroles_explained.tmpl',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '<style type="text/css">
.warning {
    font-weight: bold;
}
.notes {
    padding-top:5px;
}
h5 {
    font-size:14px;
    font-weight:bold;
    margin:0 !important;
    margin-top:20px !important;
}
.title {
    font-style:italic !important;
    font-weight: bold;
    }
</style>
<h5>';$output .= $stash->get(['locale',0,'maketext',['[asis,DNS] Role Notes:' ]]);$output .= '</h5>
<div class="notes"><span class="title">';$output .= $stash->get(['locale',0,'maketext',['Synchronize Changes:' ]]);$output .= '</span>
';$output .= $stash->get(['locale',0,'maketext',['All changes made on this server will propagate to any server in the cluster that is linked to this server. Synchronization is one-way: changes made on another server will not propagate to this server unless [output,class,Synchronize changes,title] is selected on the other server as well.' ]]);$output .= '
</div>
<div class="notes"><span class="title">';$output .= $stash->get(['locale',0,'maketext',['Standalone:' ]]);$output .= '</span>
';$output .= $stash->get(['locale',0,'maketext',['No changes made on this server will propagate to any other servers.' ]]);$output .= '
</div>
<div class="notes"><span class="title">';$output .= $stash->get(['locale',0,'maketext',['Write-only:' ]]);$output .= '</span>
';$output .= $stash->get(['locale',0,'maketext',['This server will write changes to the remote server. Changes to the remote server will not propagate back to this server.' ]]);$output .= '
';$output .= $stash->get(['locale',0,'maketext',['[output,class,Warning:,warning] Two [output,class,Write-only,title] servers that attempt to write changes to a matching record on the same remote server will cause a conflict and may corrupt data.' ]]);$output .= '
</div>
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});