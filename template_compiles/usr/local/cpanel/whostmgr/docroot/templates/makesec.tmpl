Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/whostmgr/docroot/templates/makesec.tmpl','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '<form action="../scripts/makesec" method="POST">
<div class="error-header">
    ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['data',0,'errors',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'error'}=$_tt_value;$output .= '
    ';if ($stash->get('error')eq 'peers_without_dnssec' &&!$stash->get(['data',0,'has_dnssec',0])){($_tt_value,$_tt_error)=$_tt_list->get_next();next FOR1}$output .= '
    <div role="alert" class="error-container" style="background-color:#fcf8e1; border-color:#f6c342; border-width:.05rem; border-style:solid; border-radius: .1rem;">
        <div class="fas fa-exclamation-circle" style="background-color:#f6c342; color:#fcf8e1; display:table-cell; text-align:center; min-width: 2rem; vertical-align:middle; font-size:1.25rem;"></div>
        <div style="display:table-cell; padding: .5rem; width:100%">
            <span class="float:left">
                ';if ($stash->get('error')eq 'dead_peers'){$output .= '
                    ';$output .= $stash->get(['locale',0,'maketext',['One or more cluster members are configured to receive zones, but their [asis,DNS] server is currently offline. This can cause failed [asis,DNS] queries and failed synchronizations.' ]]);$output .= '
                '}elsif ($stash->get('error')eq 'peer_zonetrap'){$output .= '
                    ';$output .= $stash->get(['locale',0,'maketext',['One or more cluster members are configured to receive zones, but have their [asis,DNS] server disabled. This can cause failed DNS queries.' ]]);$output .= '
                '}elsif ($stash->get('error')eq 'disabled_peers'){$output .= '
                    ';$output .= $stash->get(['locale',0,'maketext',['The system cannot contact one or more cluster members. They may exist in an inconsistent state when they reboot. This can cause failed [asis,DNS] queries.' ]]);$output .= '
                '}elsif ($stash->get('error')eq 'peers_without_dnssec'){$output .= '
                    ';$output .= $stash->get(['locale',0,'maketext',['The system is broadcasting [asis,DNSSEC] zones to cluster. However, some receivers do not support [asis,DNSSEC]. This will result in [asis,SRVFAIL] responses from those cluster members when queried.' ]]);$output .= '
                '}$output .= '
            </span>
            <span style="float:right;">
                <a href="';$output .= $stash->get('cp_security_token');$output .= '/scripts7/clusterstatus">';$output .= $stash->get(['locale',0,'maketext',['Manage' ]]);$output .= '</a>
            </span>
        </div>
    </div>
    <br />
    ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= "\n</div>\n<div class=\"body-content\">\n<p>Synchronizing DNS Zones ensures all servers in the cluster use the latest version of each DNS Zone. This prevents invalid or old data being sent in response to DNS queries.</p>\n<h2>Choose synchronization method</h2>\n<div class=\"sync_dns_container\">\n<div class=\"sdc_container\">\n<input type=\"radio\" name=\"sync_zones\" id=\"one_local\" value=\"one_local\"/>\n<label for=\"one_local\">Synchronize one zone to this server only</label>\n<div class=\"sdc_module\">\n<input type=\"text\" name=\"onezonelocal\" id=\"onezonelocal\" onClick=\"selectRadio('one_local')\" />\n<small>(e.g. example.com)</small>\n</div>\n<p class=\"description\">One zone will be compared with the same zone on all servers in the cluster and the newest one will be copied to this server only.</p>\n</div>\n<hr size=\"1\" color=\"#dddddd\" NOSHADE />\n<div class=\"sdc_container\">\n<input type=\"radio\" name=\"sync_zones\" id=\"all_local\" value=\"all_local\" />\n<label for=\"all_local\">Synchronize all zones to this server only</label><br />\n<input type=\"checkbox\" name=\"all_domains\" id=\"all_local_synchronize_zones\" value=\"1\" onClick=\"verifythis(this);\">\n<label for=\"all_local_synchronize_zones\">Synchronize zones that are not configured on this server</label>\n<p class=\"description\">All zones will be compared with the same zones on all servers in the cluster and the newest ones will be copied to this server only.</p>\n</div>\n<hr size=\"1\" color=\"#dddddd\" NOSHADE />\n<div class=\"sdc_container\">\n<input type=\"radio\" name=\"sync_zones\" id=\"one_zone\" value=\"one_zone\"/>\n<label for=\"one_zone\">Synchronize one zone to all servers</label>\n<div class=\"sdc_module\">\n<input type=\"text\" name=\"onezone\" id=\"onezone\" onClick=\"selectRadio('one_zone')\"/>\n<small>(e.g. example.com)</small>\n</div>\n<p class=\"description\">One zone will be compared with the same zone on all servers in the cluster and the newest one will be copied to all servers in the cluster.</p>\n</div>\n<hr size=\"1\" color=\"#dddddd\" NOSHADE />\n<div class=\"sdc_container\">\n<input type=\"radio\" name=\"sync_zones\" id=\"all_zones\" checked=\"checked\" value=\"all_zones\" />\n<label for=\"all_zones\">Synchronize all zones to all servers</label><br />\n<input type=\"checkbox\" name=\"all_domains\" id=\"all_zones_synchronize_zones\" value=\"1\" onClick=\"verifythis(this);\">\n<label for=\"all_zones_synchronize_zones\">Synchronize zones that are not configured on this server</label>\n<p class=\"description\">All zones will be compared with the same zones on all servers in the cluster and the newest ones will be copied to all servers in the cluster.</p>\n</div>\n</div>\n<input type=\"submit\" class=\"btn-primary\" name=\"action\" value=\"Synchronize\" />\n</form>\n</div>\n<script type=\"text/javascript\">\nfunction verifythis(El) {\n    if (!El.checked) { return; }\n\n    var forsure = confirm(\"Are you sure you wish to pull in all dns zones in the cluster?\");\n    if (!forsure) {\n        El.checked=false;\n    }\n}\n\n/**\n* Input text click handler that will check the radio button id.\n* \@function selectRadio\n* \@param {string} elementId - The id property of the radio to be checked\n*/\nfunction selectRadio(elementId) {\n    document.getElementById(elementId).checked = true;\n}\n</script>\n"}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});