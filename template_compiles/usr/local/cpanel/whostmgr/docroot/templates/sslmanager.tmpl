Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/whostmgr/docroot/templates/sslmanager.tmpl','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= do {my$output='';$stash->set('JSON',$context->plugin('JSON'));$stash->set('CPScalar',$context->plugin('CPScalar'));$output .= '
';$stash->set('deletable_key_links_view',sub {my$output='';my (%_tt_args,$_tt_params);$_tt_args{'key' }=shift;$_tt_params=shift;$_tt_params={}unless ref($_tt_params)eq 'HASH';$_tt_params={%_tt_args,%$_tt_params };my$stash=$context->localise($_tt_params);eval {$output .= '    ';$output .= $stash->get(['undeletable_key_links_view',[$stash->get('key')]]);$output .= '    <a href="delssldata?id=';$output .= $stash->get(['key',0,'id',0,'uri',0]);$output .= '&storage=';$output .= $stash->get('STORAGE');$output .= '&type=key" onclick="return confirm_delete_key(';$output .= $stash->get(['key',0,'id',0,'json',0,'html',0]);$output .= ')"><i class="delete-icon fas fa-times-circle" aria-hidden="true"></i></a>
'};$stash=$context->delocalise();die $@ if $@;return$output});$output .= '
';$stash->set('deletable_cert_links_view',sub {my$output='';my (%_tt_args,$_tt_params);$_tt_args{'cert' }=shift;$_tt_params=shift;$_tt_params={}unless ref($_tt_params)eq 'HASH';$_tt_params={%_tt_args,%$_tt_params };my$stash=$context->localise($_tt_params);eval {$output .= '    ';$output .= $stash->get(['undeletable_cert_links_view',[$stash->get('cert')]]);$output .= '    <a href="delssldata?id=';$output .= $stash->get(['cert',0,'id',0,'uri',0]);$output .= '&storage=';$output .= $stash->get('STORAGE');$output .= '&type=crt" onclick="return confirm_delete_cert(';$output .= $stash->get(['cert',0,'id',0,'json',0,'html',0]);$output .= ')"><i class="delete-icon fas fa-times-circle" aria-hidden="true"></i></a>
'};$stash=$context->delocalise();die $@ if $@;return$output});$output .= '
';$stash->set('undeletable_key_links_view',sub {my$output='';my (%_tt_args,$_tt_params);$_tt_args{'key' }=shift;$_tt_params=shift;$_tt_params={}unless ref($_tt_params)eq 'HASH';$_tt_params={%_tt_args,%$_tt_params };my$stash=$context->localise($_tt_params);eval {$output .= '    <a href="getssldata?id=';$output .= $stash->get(['key',0,'id',0,'uri',0]);$output .= '&storage=';$output .= $stash->get('STORAGE');$output .= '&type=key"><i class="fas fa-search" aria-hidden="true"></i></a>
'};$stash=$context->delocalise();die $@ if $@;return$output});$stash->set('undeletable_cert_links_view',sub {my$output='';my (%_tt_args,$_tt_params);$_tt_args{'cert' }=shift;$_tt_params=shift;$_tt_params={}unless ref($_tt_params)eq 'HASH';$_tt_params={%_tt_args,%$_tt_params };my$stash=$context->localise($_tt_params);eval {$output .= '    <a href="getssldata?id=';$output .= $stash->get(['cert',0,'id',0,'uri',0]);$output .= '&storage=';$output .= $stash->get('STORAGE');$output .= '&type=crt"><i class="fas fa-search" aria-hidden="true"></i></a>
'};$stash=$context->delocalise();die $@ if $@;return$output});$output .= '
';$stash->set('deletable_key_view',sub {my$output='';my (%_tt_args,$_tt_params);$_tt_args{'key' }=shift;$_tt_params=shift;$_tt_params={}unless ref($_tt_params)eq 'HASH';$_tt_params={%_tt_args,%$_tt_params };my$stash=$context->localise($_tt_params);eval {$output .= '    <div class="clear">
        ';if ($stash->get(['key',0,'friendly_name',0])){$output .= '
            <div  class="text" title="';$output .= $stash->get(['key',0,'id',0,'html',0]);$output .= '">';$output .= $stash->get(['key',0,'friendly_name',0,'html',0,'breakOn',['_' ]]);$output .= '</div>
        '}else {$output .= '
            <div class="text">';$output .= $stash->get(['key',0,'id',0,'html',0,'breakOn',['_' ]]);$output .= '</div>
        '}$output .= '
        <div class="links-group">
            ';$output .= $stash->get(['deletable_key_links_view',[$stash->get('key')]]);$output .= '        </div>
    </div>
'};$stash=$context->delocalise();die $@ if $@;return$output});$output .= '
';$stash->set('deletable_cert_list_view',sub {my$output='';my (%_tt_args,$_tt_params);$_tt_args{'certs' }=shift;$_tt_params=shift;$_tt_params={}unless ref($_tt_params)eq 'HASH';$_tt_params={%_tt_args,%$_tt_params };my$stash=$context->localise($_tt_params);eval {$output .= '    ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('certs');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'cert'}=$_tt_value;$output .= '    <div class="clear">
        ';if ($stash->get(['cert',0,'friendly_name',0])){$output .= '
            <div class="text" title="';$output .= $stash->get(['cert',0,'id',0,'html',0]);$output .= '">';$output .= $stash->get(['cert',0,'friendly_name',0,'html',0,'breakOn',['_' ]]);$output .= '</div>
        '}else {$output .= '
            <div class="text">';$output .= $stash->get(['cert',0,'id',0,'html',0,'breakOn',['_' ]]);$output .= '</div>
        '}$output .= '
        <div class="links-group">
            ';$output .= $stash->get(['deletable_cert_links_view',[$stash->get('cert')]]);$output .= '        </div>
    </div>
    ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
'};$stash=$context->delocalise();die $@ if $@;return$output});$output .= '
';$stash->set('undeletable_key_view',sub {my$output='';my (%_tt_args,$_tt_params);$_tt_args{'key' }=shift;$_tt_params=shift;$_tt_params={}unless ref($_tt_params)eq 'HASH';$_tt_params={%_tt_args,%$_tt_params };my$stash=$context->localise($_tt_params);eval {$output .= '    <div class="clear">
        ';if ($stash->get(['key',0,'friendly_name',0])){$output .= '
            <div  class="text" title="';$output .= $stash->get(['key',0,'id',0,'html',0]);$output .= '">';$output .= $stash->get(['key',0,'friendly_name',0,'html',0,'breakOn',['_' ]]);$output .= '</div>
        '}else {$output .= '
            <div class="text">';$output .= $stash->get(['key',0,'id',0,'html',0,'breakOn',['_' ]]);$output .= '</div>
        '}$output .= '
        <div class="links-group">
            ';$output .= $stash->get(['undeletable_key_links_view',[$stash->get('key')]]);$output .= '        </div>
    </div>
'};$stash=$context->delocalise();die $@ if $@;return$output});$output .= '
';$stash->set('undeletable_cert_list_view',sub {my$output='';my (%_tt_args,$_tt_params);$_tt_args{'certs' }=shift;$_tt_params=shift;$_tt_params={}unless ref($_tt_params)eq 'HASH';$_tt_params={%_tt_args,%$_tt_params };my$stash=$context->localise($_tt_params);eval {$output .= '    ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('certs');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'cert'}=$_tt_value;$output .= '    <div class="clear">
        ';if ($stash->get(['cert',0,'friendly_name',0])){$output .= '
            <div class="text" title="';$output .= $stash->get(['cert',0,'id',0,'html',0]);$output .= '">';$output .= $stash->get(['cert',0,'friendly_name',0,'html',0,'breakOn',['_' ]]);$output .= '</div>
        '}else {$output .= '
            <div class="text">';$output .= $stash->get(['cert',0,'id',0,'html',0,'breakOn',['_' ]]);$output .= '</div>
        '}$output .= '
        <div class="links-group">
            ';$output .= $stash->get(['undeletable_cert_links_view',[$stash->get('cert')]]);$output .= '        </div>
    </div>
    ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error}};$stash=$context->delocalise();die $@ if $@;return$output});$output .= '
';$stash->set('csr_list_view',sub {my$output='';my (%_tt_args,$_tt_params);$_tt_args{'csrs' }=shift;$_tt_params=shift;$_tt_params={}unless ref($_tt_params)eq 'HASH';$_tt_params={%_tt_args,%$_tt_params };my$stash=$context->localise($_tt_params);eval {$output .= '    ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('csrs');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'csr'}=$_tt_value;$output .= '    <div class="clear">
        ';if ($stash->get(['csr',0,'friendly_name',0])){$output .= '
            <div class="text" title="';$output .= $stash->get(['csr',0,'id',0,'html',0]);$output .= '">';$output .= $stash->get(['csr',0,'friendly_name',0,'html',0,'breakOn',['_' ]]);$output .= '</div>
        '}else {$output .= '
            <div class="text">';$output .= $stash->get(['csr',0,'id',0,'html',0,'breakOn',['_' ]]);$output .= '</div>
        '}$output .= '
        <div class="links-group">
                <a href="getssldata?id=';$output .= $stash->get(['csr',0,'id',0,'uri',0]);$output .= '&type=csr"><i class="fas fa-search" aria-hidden="true"></i></a>
                <a href="delssldata?id=';$output .= $stash->get(['csr',0,'id',0,'uri',0]);$output .= '&type=csr" onclick="return confirm_delete_csr(';$output .= $stash->get(['csr',0,'id',0,'json',0,'html',0]);$output .= ')"><i class="delete-icon fas fa-times-circle" aria-hidden="true"></i></a>
        </div>
    <div>
    ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error}};$stash=$context->delocalise();die $@ if $@;return$output});$output .= '
';$output .= '
<p class="description">
';$output .= $stash->get(['locale',0,'maketext',['Listed below are all SSL keys, certificates, and [output,acronym,CSRs,Certificate Signing Requests] that you control. Certificates and CSRs are grouped with their associated private key, if any.' ]]);$output .= '
</p>

<div class="page-section">
    ';if (!$stash->get(['data',0,'apache_installs',0,'size',0])){$output .= '        ';if ($stash->get(['data',0,'hasroot',0])){$output .= '
            <h4>';$output .= $stash->get(['locale',0,'maketext',['No SSL certificates are installed in [asis,Apache]’s configuration.' ]]);$output .= '</h4>
        '}else {$output .= '
            <h4>';$output .= $stash->get(['locale',0,'maketext',['No SSL certificates are installed in [asis,Apache]’s configuration for your account.' ]]);$output .= '</h4>
        '}$output .= '
    '}else {$output .= '        <h2>';$output .= $stash->get(['locale',0,'maketext',['[asis,Apache]’s Installed SSL Resources' ]]);$output .= '</h2>
        <p class="description">';$output .= $stash->get(['locale',0,'maketext',['This server hosts the following [asis,SSL]/[asis,TLS] [numerate,_1,website,websites].',$stash->get(['data',0,'apache_installs',0,'size',0])]]);$output .= '</p>
        <table id="installed_resources" class="sortable">
            <tr>
                <th>';$output .= $stash->get(['locale',0,'maketext',['Website' ]]);$output .= '</th>
                <th>';$output .= $stash->get(['locale',0,'maketext',['Owner' ]]);$output .= '</th>
            </tr>

            ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['data',0,'apache_installs',0,'sort',['vhost' ]]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'entry'}=$_tt_value;$output .= '            <tr class="';$output .= $stash->get(['loop',0,'index',0])% 2 ? 'tdshade1' : 'tdshade2';$output .= '">
                <td>';$output .= $stash->get(['entry',0,'vhost',0,'html',0]);$output .= '
                    <a href="view_apache_vhost_tls?vhost=';$output .= $stash->get(['entry',0,'vhost',0,'uri',0]);$output .= '"><i class="fas fa-search" aria-hidden="true"></i></a>
                </td>
                <td>';$output .= $stash->get(['entry',0,'user',0,'html',0]);$output .= '</td>
            </tr>
            ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '        </table>
    '}$output .= '</div>

';$stash->set('STORAGE','user');$output .= '
<div class="page-section">
    <h2>';$output .= $stash->get(['locale',0,'maketext',['User Account SSL Resources' ]]);$output .= '</h2>
    <p class="description">';$output .= $stash->get(['locale',0,'maketext',['The SSL resources below are available to your account.' ]]);$output .= '</p>
    <table id="all_resources" class="sortable">
        <tr>
            <th>';$output .= $stash->get(['locale',0,'maketext',['Key' ]]);$output .= '</th>
            <th>';$output .= $stash->get(['locale',0,'maketext',['Certificates' ]]);$output .= '</th>
            <th>';$output .= $stash->get(['locale',0,'maketext',['Certificate Signing Requests' ]]);$output .= '</th>
        </tr>

        ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['data',0,'ssldata',0,'user',0,'matched',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'entry'}=$_tt_value;$output .= '        <tr class="';$output .= $stash->get(['loop',0,'index',0])% 2 ? 'tdshade1' : 'tdshade2';$output .= '">
            <td>';$output .= $stash->get(['deletable_key_view',[$stash->get(['entry',0,'key',0])]]);$output .= '</td>
            <td>';$output .= $stash->get(['deletable_cert_list_view',[$stash->get(['entry',0,'certificates',0])]]);$output .= '</td>
            <td>';$output .= $stash->get(['csr_list_view',[$stash->get(['entry',0,'csrs',0])]]);$output .= '</td>
        </tr>
        ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
        ';$stash->set('unmatched',$stash->get(['data',0,'ssldata',0,'user',0,'unmatched',0]));$output .= '        ';if ($stash->get(['unmatched',0,'certificates',0,'size',0])|| $stash->get(['unmatched',0,'csrs',0,'size',0])){$output .= '        <tr>
            <td>';$output .= $stash->get(['locale',0,'maketext',['(None)' ]]);$output .= '</td>
            <td>';$output .= $stash->get(['deletable_cert_list_view',[$stash->get(['unmatched',0,'certificates',0])]]);$output .= '</td>
            <td>';$output .= $stash->get(['csr_list_view',[$stash->get(['unmatched',0,'csrs',0])]]);$output .= '</td>
        </tr>
        '}$output .= '    </table>
</div>


<script type="text/javascript">
function confirm_delete_key(name) {
    return confirm( ';$output .= $stash->get(['locale',0,'maketext',['Are you sure you wish to delete the key “[_1]”?','{id}' ],'json',0]);$output .= '.replace("{id}", name) );
}

function confirm_delete_cert(name) {
    return confirm( ';$output .= $stash->get(['locale',0,'maketext',['Are you sure you wish to delete the certificate “[_1]”?','{id}' ],'json',0]);$output .= '.replace("{id}", name) );
}

function confirm_delete_csr(name) {
    return confirm( ';$output .= $stash->get(['locale',0,'maketext',['Are you sure you wish to delete the CSR “[_1]”?','{id}' ],'json',0]);$output .= '.replace("{id}", name) );
}
</script>
';$context->include('master_templates/master.tmpl',{'theme'=>'yui','app_key'=>'ssl_storage_manager','scripts'=>['/js/sorttable.js' ],'extrastyle'=>'
.links-group {
    text-align: right;
    float: right;
    margin-left: 10px;
}

.page-section {
    margin-top: 25px;
}

.clear {
    clear: both;
}

table div.text {
    width: 270px;
    float: left;
    white-space: normal;
}
.description {
    margin: 0;
    font-style: normal;
    width: 600px;
    margin-bottom: 20px;
}

#installed_resources td,
#all_resources td {
    vertical-align: top;
    padding-top: 8px;
    padding-left: 10px;
    padding-right: 10px;
    white-space: nowrap;
}

.delete-icon {
    color: red;
}
','content',$output })}}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});