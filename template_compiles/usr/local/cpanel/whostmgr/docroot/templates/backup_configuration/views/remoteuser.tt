Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/whostmgr/docroot/templates/backup_configuration/views/remoteuser.tt','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '<div class="form-group">
    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
            <label for="';$output .= $stash->get('remoteuser_id');$output .= '">';$output .= $stash->get(['locale',0,'maketext',['Remote Account Username' ]]);$output .= '</label>
            <span class="info-block">';$output .= $stash->get(['locale',0,'maketext',['The remote serverâ€™s account username.' ]]);$output .= '</span>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
            <input ng-model="';$output .= $stash->get('remoteuser_model');$output .= '"
                type="text"
                name="username"
                id="';$output .= $stash->get('remoteuser_id');$output .= '"
                class="form-control"
                ng-minlength="1"
                ng-maxlength="128"
                required />
        </div>
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
            <ul validation-container field-name="username">
                <validation-item
                    field-name="username"
                    validation-name="required">';$output .= $stash->get(['locale',0,'maketext',['You must enter a remote account username.' ]]);$output .= '
                </validation-item>
                <validation-item
                    field-name="username"
                    validation-name="maxlength">';$output .= $stash->get(['locale',0,'maketext',['The username must contain between [numf,1] and [numf,128] characters.' ]]);$output .= '
                </validation-item>
            </ul>
        </div>
    </div>
</div>
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});