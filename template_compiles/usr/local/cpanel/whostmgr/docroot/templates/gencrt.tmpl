Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/whostmgr/docroot/templates/gencrt.tmpl',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set('Geo',$context->plugin('Geo'));$stash->set('Whostmgr',$context->plugin('Whostmgr'));$stash->set('SSL',$context->plugin('SSL'));$stash->set('JSON',$context->plugin('JSON'));$stash->set('key_types_and_labels',$stash->get(['SSL',0,'key_types_and_labels',0]));$stash->set('default_key_type',$stash->get(['SSL',0,'default_key_type',0]));$output .= do {my$output='';$output .= '
<style type="text/css">

/*
    This legacy style rule has a 15px bottom padding in notify.css,
    which causes it to be unbalanced vertically. For this page,
    at least, it makes sense to zero out the bottom padding.
*/
.cjt-pagenotice-container .cjt-notice-content {
    padding-bottom: 0;
}
</style>

<p class="description">
    ';$output .= $stash->get(['locale',0,'maketext',['Use this interface to generate both a self-signed certificate and a certificate signing request for a domain.' ]]);$output .= '
</p>

<form class="layout-medium" action="';$output .= $stash->get('cp_security_token');$output .= '/scripts2/dogencrt" name="mainform" id="mainform" method="POST">

    <fieldset>

        <!-- prevent password autofill -->
        <input type="text" style="display:none">
        <input type="password" autocomplete=\'off\' style="display:none">

        <legend>';$output .= $stash->get(['locale',0,'maketext',['Contact Information' ]]);$output .= '</legend>
        <p>
            ';$output .= $stash->get(['locale',0,'maketext',['When generating a certificate signing request, we can send a copy of the generated self-signed certificate, the private key and the certificate signing request. Depending on your mail service provider, your mail may be sent over an insecure channel. We do not recommend sending private keys if the email service provider you use does not support secure mail via SSL/TLS.' ]]);$output .= '
        </p>

        <div class="form-group">
            <div class="row">
                <div class="col-xs-6">
                    <div class="checkbox">
                        <label>
                            <input type="checkbox" name="sendemail" id="sendemail" value="1" >
                            <span>';$output .= $stash->get(['locale',0,'maketext',['When complete, email me the certificate, key, and [output,acronym,CSR,Certificate Signing Request].' ]]);$output .= '</span>
                        </label>
                   </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-xs-6">
                    <label for="xemail" class="title">';$output .= $stash->get(['locale',0,'maketext',['Email Address:' ]]);$output .= '</label>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6">
                    <input type="text" name="xemail" id="xemail" disabled="disabled" class="form-control" />
                    <span class="help-block">';$output .= $stash->get(['locale',0,'maketext',['Provide your email address to receive a copy of the generated certificate, key, and [output,acronym,CSR,Certificate Signing Request].' ]]);$output .= '</span>
                </div>
                <div class="col-xs-6">
                    <div>
                        <span id="xemail_error"></span>
                    </div>
                </div>
            </div>
        </div>

    </fieldset>
    <fieldset>

        <legend>';$output .= $stash->get(['locale',0,'maketext',['Private Key Options' ]]);$output .= '</legend>
        <p>
            ';$output .= $stash->get(['locale',0,'maketext',['When the system generates a self-signed certificate and [output,acronym,CSR,Certificate Signing Request], the system also generates a new private key for the certificate and CSR. To protect the certificate, this key must be confidential. Do not send the private key through an insecure method.' ]]);$output .= '
        </p>

        <div class="form-group">
            <div class="row">
                <div class="col-xs-6">
                    <label for="keytype" class="title">';$output .= $stash->get(['locale',0,'maketext',['Key Type:' ]]);$output .= '</label>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6">
                    <select name="keytype" id="keysize" class="form-control" >
                        ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('key_types_and_labels');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'type_label'}=$_tt_value;$output .= '
                            ';$stash->set('is_default',$stash->get(['type_label',0,'type',0])eq $stash->get('default_key_type'));$output .= '                            <option value="';$output .= $stash->get(['type_label',0,'type',0]);$output .= '" ';if ($stash->get('is_default')){$output .= 'selected="selected"'}$output .= '>
                                ';$output .= $stash->get(['type_label',0,'label',0]);$output .= '
                                ';if ($stash->get('is_default')){$output .= '
                                    &nbsp;—&nbsp;';$output .= $stash->get(['locale',0,'maketext',['Default' ]]);$output .= '
                                '}$output .= '
                            </option>
                        ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
                    </select>
                </div>
                <div class="col-xs-6">
                    <div>
                        <span id="keysize_error"></span>
                    </div>
                </div>
            </div>
        </div>

    </fieldset>
    <fieldset>

        <legend>';$output .= $stash->get(['locale',0,'maketext',['Certificate Information' ]]);$output .= '</legend>
        <p>
            ';$output .= $stash->get(['locale',0,'maketext',['The information provided below is used to create a self-signed certificate and the corresponding certificate signing request. Since this is the information that users will see when they access a site via SSL, it is important to provide accurate and valid information.' ]]);$output .= '
        </p>

        <div class="form-group">
            <div class="row">
                <div class="col-xs-6">
                    <label for="host" class="title"><span>';$output .= $stash->get(['locale',0,'maketext',['Domains:' ]]);$output .= '</span></label>
                    <span class="extra pull-right">';$output .= $stash->get(['locale',0,'maketext',['Required' ]]);$output .= '</span>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6">
                    <textarea name="domains" id="domains" class="form-control"></textarea>
                    <span class="help-block">';$output .= $stash->get(['locale',0,'maketext',['Provide the [output,acronym,FQDN,Fully Qualified Domain Name]s that you wish to secure, one per line. To create and use a wildcard domain, add an asterisk to the domain name as in the following example: [output,em,_1].','*.example.com' ]]);$output .= ' ';$output .= $stash->get(['locale',0,'maketext',['NOTE: Many [output,acronym,CA,Certificate Authority]s charge a higher price to issue multiple-domain certificates (sometimes called “[output,acronym,UCC,Unified Communications Certificate]s” or “[output,acronym,SAN,subjectAltName] certificates”) and certificates that include wildcard domains.' ]]);$output .= '</span>
                </div>
                <div class="col-xs-6">
                    <span id="domains_error"></span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-xs-6">
                    <label for="city" class="title"><span>';$output .= $stash->get(['locale',0,'maketext',['City:' ]]);$output .= '</span></label>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6">
                    <input type="text" name="localityName" id="city"  class="form-control" />
                    <span class="help-block">';$output .= $stash->get(['locale',0,'maketext',['Provide the complete name for the city or locality. Do not use abbreviations.' ]]);$output .= '</span>
                </div>
                <div class="col-xs-6">
                    <span id="city_error"></span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-xs-6">
                    <label for="state" class="title"><span>';$output .= $stash->get(['locale',0,'maketext',['State:' ]]);$output .= '</span></label>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6">
                    <input type="text" name="stateOrProvinceName" id="state" class="form-control" />
                    <span class="help-block">';$output .= $stash->get(['locale',0,'maketext',['Provide the complete name for the state or province. Do not use abbreviations.' ]]);$output .= '</span>
                </div>
                <div class="col-xs-6">
                    <span id="state_error"></span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-xs-6">
                    <label for="country" class="title"><span>';$output .= $stash->get(['locale',0,'maketext',['Country:' ]]);$output .= '</span></label>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6">
                    <select id="country" name="countryName" class="form-control">
                        <option value="">';$output .= $stash->get(['locale',0,'maketext',['Choose a country.' ]]);$output .= '</option>
                        ';$stash->set('locales_obj',$stash->get(['locale',0,'get_locales_obj',0]));$output .= '                        ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['Geo',0,'COUNTRY_CODES',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'country_code'}=$_tt_value;$output .= '                            ';$stash->set('country_name',$stash->get(['locales_obj',0,'get_territory_from_code',[$stash->get('country_code')]]));$output .= '                            <option value="';$output .= do {my$output='';my$_tt_filter=$context->filter('upper')|| $context->throw($context->error);$output .= $stash->get('country_code');&$_tt_filter($output)};$output .= '">
                                ';$output .= do {my$output='';my$_tt_filter=$context->filter('upper')|| $context->throw($context->error);$output .= $stash->get('country_code');&$_tt_filter($output)};$output .= '
                                ';$output .= $stash->get('country_name')? (' (' .$stash->get('country_name').')'): '';$output .= '
                            </option>
                        ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '                    </select>
                    <span class="help-block">';$output .= $stash->get(['locale',0,'maketext',['Choose the country of origin for the certificate’s company.' ]]);$output .= '</span>
                </div>
                <div class="col-xs-6">
                     <span id="country_error"></span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-xs-6">
                    <label for="co" class="title"><span>';$output .= $stash->get(['locale',0,'maketext',['Company Name:' ]]);$output .= '</span></label>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6">
                    <input type="text" name="organizationName" id="co" class="form-control" />
                    <span class="help-block">';$output .= $stash->get(['locale',0,'maketext',['Provide the legally-registered name for your business. If your company name includes symbols other than a period or comma, check with your certificate authority to confirm that they are acceptable.' ]]);$output .= '</span>
                </div>
                <div class="col-xs-6">
                    <span id="co_error"></span>
                    <div id="co_warning"></div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-xs-6">
                    <label for="cod" class="title">';$output .= $stash->get(['locale',0,'maketext',['Company Division:' ]]);$output .= '</label>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6">
                    <input type="text" name="organizationalUnitName" id="cod" class="form-control" />
                    <span class="help-block">';$output .= $stash->get(['locale',0,'maketext',['Provide the name of the division or group within the above company. If the division includes symbols other than a period or comma, check with your certificate authority to confirm that they are acceptable.' ]]);$output .= '</span>
                </div>
                <div class="col-xs-6">
                    <span id="cod_error"></span>
                    <div id="cod_warning"></div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-xs-6">
                    <label for="email" class="title">';$output .= $stash->get(['locale',0,'maketext',['Email:' ]]);$output .= '</label>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6">
                    <input type="text" name="emailAddress" id="email" class="form-control" />
                    <span class="help-block">';$output .= $stash->get(['locale',0,'maketext',['Email address at which the [output,acronym,CA,Certificate Authority] can contact you to obtain verification of domain ownership.' ]]);$output .= '</span>
                </div>
                <div class="col-xs-6">
                    <span id="email_error"></span>
                </div>
            </div>
        </div>

    </fieldset>
    <fieldset>

        <legend>';$output .= $stash->get(['locale',0,'maketext',['Shared Secrets' ]]);$output .= '</legend>
        <p>
            ';$output .= $stash->get(['locale',0,'maketext',['Some certificate authorities may require CSRs to have a passphrase. The certificate authority can use a CSR passphrase to confirm the identity of the person or organization with whom you wish to communicate. CSR passphrases are stored [output,strong,unencrypted] in the CSR. Because of this, and also because you will share this passphrase with a third party, do not use an important password here.' ]]);$output .= '
        </p>

        <div class="form-group">
            <div class="row">
                <div class="col-xs-6">
                    <label for="pass" class="title">';$output .= $stash->get(['locale',0,'maketext',['Passphrase:' ]]);$output .= '</label>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6">
                    <input type="password" autocomplete=\'off\' name="pass" id="pass" class="form-control" />
                    <span class="help-block"><span class=\'fas fa-exclamation-circle fa-lg\'></span> ';$output .= $stash->get(['locale',0,'maketext',['Do not use an important password. Passphrases stored in CSRs are not encrypted, which means third party attackers can easily read these passphrases.' ]]);$output .= '</span>
                </div>
                <div class="col-xs-6">
                    <span id="pass_error"></span>
                </div>
            </div>
        </div>

    </fieldset>

    <div class="field form-actions">
        <button
            type="submit"
            id="btnCreate"
            title="';$output .= $stash->get(['locale',0,'maketext',['Click to generate a self-signed certificate and the corresponding certificate signing request.' ]]);$output .= '"
            class="btn btn-primary">';$output .= $stash->get(['locale',0,'maketext',['Create' ]]);$output .= "</button>\n    </div>\n\n</form>\n\n<script type=\"text/javascript\">\n\n/* global LOCALE: false, YAHOO: false */\n\n(function() {\n    \"use strict\";\n    /**\n     * This module contains all the page specific constants generated by the server.\n     * \@module PAGE.Properties\n     */\n    var PAGE = {\n        properties : {},\n        lexicon : {\n            \"Private Key\" : \"";$output .= $stash->get(['locale',0,'maketext',['Private Key' ]]);$output .= '",
            "Domain" : "';$output .= $stash->get(['locale',0,'maketext',['Domain' ]]);$output .= '",
            "You can only enter valid domains." : "';$output .= $stash->get(['locale',0,'maketext',['You can only enter valid domains.' ]]);$output .= '",
            "City" : "';$output .= $stash->get(['locale',0,'maketext',['City' ]]);$output .= '",
            "ValidatorCity" : "';$output .= $stash->get(['locale',0,'maketext',['You must enter a city.' ]]);$output .= '",
            "State" : "';$output .= $stash->get(['locale',0,'maketext',['State' ]]);$output .= '",
            "ValidatorState" : "';$output .= $stash->get(['locale',0,'maketext',['You must enter a state.' ]]);$output .= '",
            "Country" : "';$output .= $stash->get(['locale',0,'maketext',['Country' ]]);$output .= '",
            "Choose a country." : "';$output .= $stash->get(['locale',0,'maketext',['Choose a country.' ]]);$output .= '",
            "Company" : "';$output .= $stash->get(['locale',0,'maketext',['Company' ]]);$output .= '",
            "ValidatorCompany" : "';$output .= $stash->get(['locale',0,'maketext',['You must enter a company.' ]]);$output .= '",
            "This field should only contain letters, numbers, and basic punctuation (e.g., period, dash, space, underscore, comma)." : "';$output .= $stash->get(['locale',0,'maketext',['This field should only contain letters, numbers, and basic punctuation (e.g., period, dash, space, underscore, comma).' ]]);$output .= '",
            "Company Division" : "';$output .= $stash->get(['locale',0,'maketext',['Company Division' ]]);$output .= '",
            "Contact Email Address" : "';$output .= $stash->get(['locale',0,'maketext',['Contact Email Address' ]]);$output .= '",
            "Certificate Email Address" : "';$output .= $stash->get(['locale',0,'maketext',['Certificate Email Address' ]]);$output .= '",
            "ForwarderEmailNotEmpty" : "';$output .= $stash->get(['locale',0,'maketext',['You must enter an email address.' ]]);$output .= '",
            "ValidatorEmailFormat" : "';$output .= $stash->get(['locale',0,'maketext',['The email address provided is not valid. This address must start with the mailbox name, then the “@” sign, then the mail domain name.' ]]);$output .= '",
            "PassPhrase" : "';$output .= $stash->get(['locale',0,'maketext',['Passphrase' ]]);$output .= '",
            "You entered an invalid character. The passphrase may contain only letters and numbers." : "';$output .= $stash->get(['locale',0,'maketext',['You entered an invalid character. The passphrase may contain only letters and numbers.' ]]);$output .= '",
            "The passphrase must be at least 4 characters long." : "';$output .= $stash->get(['locale',0,'maketext',['The passphrase must be at least [quant,_1,character,characters] long.',4 ]]);$output .= '",
            "The passphrase must be no longer than 20 characters." : "';$output .= $stash->get(['locale',0,'maketext',['The passphrase must be no longer than [quant,_1,character,characters].',20 ]]);$output .= '",
            "ValidatorCompanyDiv" : "';$output .= $stash->get(['locale',0,'maketext',['The “[_1]” field must be at least [numf,_2] characters long.',$stash->get(['locale',0,'maketext',['Company Division' ]]),2 ]]);$output .= '"
        }
    };


    // Publish the PAGE object;
    window["PAGE"] = PAGE;
}());

YAHOO.lang.augmentObject( LOCALE.LEXICON, {
    "Processing …" : "';$output .= $stash->get(['locale',0,'maketext',['Processing …' ]]);$output .= '"
} );
</script>

';$context->include('master_templates/master.tmpl',{'app_key'=>'generate_an_ssl_certificate_and_signing_request','header'=>$stash->get(['locale',0,'maketext',['Generate an SSL Certificate and Signing Request' ]]),'breadcrumburl'=>'/scripts2/gencrthtml','theme'=>'bootstrap','scripts'=>['/sharedjs/form_submit_handler_optimized.js','/sharedjs/ssl_optimized.js' ],'stylesheets'=>['/css/notify.css' ],'content',$output })}}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});