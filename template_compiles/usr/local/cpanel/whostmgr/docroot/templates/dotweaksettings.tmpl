Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/whostmgr/docroot/templates/dotweaksettings.tmpl',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set('Whostmgr',$context->plugin('Whostmgr'));if ($stash->get('start')){$output .= $context->process('master_templates/_defheader.tmpl',{'breadcrumburl'=>'/scripts2/tweaksettings','theme'=>'yui','extrastyle'=>'.setting_label { font-weight: bold }' });$output .= '<h3 class="simpleheading">Updating tweak settings...</h3>';$output .= '<br />'}elsif ($stash->get('saved')){do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['rejects',0,'keys',0,'sort',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'key'}=$_tt_value;$stash->set('setting_data',$stash->get(['ts_conf',0,$stash->get('key'),0]));$stash->set('value_text',$stash->get(['rejects',0,'defined',[$stash->get('key')]])? ('' .$stash->get(['rejects',0,$stash->get('key'),0])): 'undefined');$stash->set('reason_text',$stash->get(['reject_reasons',0,'defined',[$stash->get('key')]])? $stash->get(['reject_reasons',0,$stash->get('key'),0]): 'unknown reason');$stash->set('value_text',$stash->get(['value_text',0,'html',0]));$stash->set('esc_key',$stash->get(['key',0,'html',0]));$stash->set('reason_text',$stash->get(['reason_text',0,'html',0]));$output .= ('<p>Invalid value for “' .$stash->get('esc_key').'”: “' .$stash->get('value_text').'” - ' .$stash->get('reason_text').'. This setting will not be updated.</p>');;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '<span class="b2">Your changes have been saved.</span><br />';$output .= '<br />';$output .= '<span class="b2">Restarting cPanel daemons...</span>'}elsif ($stash->get('restarted')){$output .= '<span class="b2">done.</span><br />';$output .= '<br />';$output .= '<span class="b2">Updating your system to reflect any changes...</span><br />';$output .= '<pre>'}elsif ($stash->get('updating')){if ($stash->get(['newvalue',0,'defined',0])){if ($stash->get(['setting_data',0,'type',0])eq 'password'){$stash->set('newvalue','**********')}elsif ($stash->get(['setting_data',0,'type',0])eq 'binary'){$stash->set('newvalue',$stash->get('newvalue')? 'On' : 'Off')}elsif ($stash->get(['setting_data',0,'type',0])eq 'inversebinary'){$stash->set('newvalue',$stash->get('newvalue')? 'Off' : 'On')}elsif ($stash->get('optionlabels')&& $stash->get(['optionlabels',0,'defined',[$stash->get('newvalue')]])){$stash->set('newvalue',$stash->get(['optionlabels',0,$stash->get('newvalue'),0]))}else {$stash->set('newvalue',('' .$stash->get('newvalue')))}}else {$stash->set('newvalue',$stash->get('undef_label')|| 'ERROR')}$stash->set('newvalue',$stash->get(['newvalue',0,'html',0]));if ($stash->get('is_new_setting')){$output .= ('Creating new setting for <span class="setting_label">“' .$stash->get('label').'”</span> of “' .$stash->get('newvalue').'”. ')}else {if ($stash->get(['oldvalue',0,'defined',0])){if ($stash->get(['setting_data',0,'type',0])eq 'password'){$stash->set('oldvalue','**********')}elsif ($stash->get(['setting_data',0,'type',0])eq 'binary'){$stash->set('oldvalue',$stash->get('oldvalue')? 'On' : 'Off')}elsif ($stash->get(['setting_data',0,'type',0])eq 'inversebinary'){$stash->set('oldvalue',$stash->get('oldvalue')? 'Off' : 'On')}elsif ($stash->get('optionlabels')&& $stash->get(['optionlabels',0,'defined',[$stash->get('oldvalue')]])){$stash->set('oldvalue',$stash->get(['optionlabels',0,$stash->get('oldvalue'),0]))}else {$stash->set('oldvalue',('' .$stash->get('oldvalue')))}}else {$stash->set('oldvalue',$stash->get('undef_label')|| 'ERROR')}$stash->set('oldvalue',$stash->get(['oldvalue',0,'html',0]));$output .= ('Updating <span class="setting_label">“' .$stash->get('label').'”</span> from “' .$stash->get('oldvalue').'” to “' .$stash->get('newvalue').'”.
')}}elsif ($stash->get(['post_action',0,'defined',0])){$output .= ('Processing post action for <span class="setting_label">' .$stash->get('label').'</span>:
')}elsif ($stash->get(['is_ok',0,'defined',0])){if ($stash->get('is_ok')){$output .= ('<span class="setting_label">“' .$stash->get('label').'”</span> was updated.
')}else {if ($stash->get('changed_value')){$output .= ('There was an error updating “' .$stash->get('label').'”: ' .$stash->get('error').'
')}else {$stash->set('esc_key',$stash->get(['key',0,'html',0]));$output .= ('While trying to rectify your configuration for “' .$stash->get('esc_key').'” an error was encountered: ' .$stash->get('error').'
')}}}elsif ($stash->get('done')){$output .= '</pre>';$output .= '<span class="b2">Done.</span>'}elsif ($stash->get('not_saved')){$output .= ('' .'Error encountered while applying new settings.  Changes were not saved.
')}}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});