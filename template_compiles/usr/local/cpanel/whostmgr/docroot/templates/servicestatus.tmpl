Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/whostmgr/docroot/templates/servicestatus.tmpl','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set('CPScalar',$context->plugin('CPScalar'));$output .= do {my$output='';$output .= '<div id="content">
<div class="row">
<div class="col-xs-12 col-sm-12 col-md-10 col-lg-9">

<section>
<h3>';$output .= $stash->get(['locale',0,'maketext',['Service Information' ]]);$output .= '</h3>
<div class="callout callout-info">
  ';$output .= $stash->get(['locale',0,'maketext',['The Service Information table only reports monitored services. You can enable service monitoring in [output,url,_1,Service Manager].','../scripts/srvmng' ]]);$output .= '
</div>
<table class="table table-striped table-condensed">
<thead>
<tr>
    <th>';$output .= $stash->get(['locale',0,'maketext',['Service' ]]);$output .= '</th>
    <th>';$output .= $stash->get(['locale',0,'maketext',['Version' ]]);$output .= '</th>
    <th>';$output .= $stash->get(['locale',0,'maketext',['Status' ]]);$output .= '</th>
    <th></th>
</tr>
</thead>
<tbody>';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['data',0,'service_data',0,'sort',['service' ]]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();$stash=$context->localise();$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->get(['import',[$_tt_value]])if ref$_tt_value eq 'HASH';$output .= '
    <tr';if (!$stash->get('is_pending')&&!$stash->get('is_up')){$output .= ' class="danger"'}$output .= '>
        <td>';$output .= $stash->get('service');$output .= '</td>
        <td>';$output .= $stash->get('version');$output .= '</td>
        <td>';if ($stash->get('is_pending')){$output .= $stash->get(['locale',0,'maketext',['[comment,lowercase]pending[comment,indicates that status of a service has not been determined]' ]])}elsif ($stash->get('is_up')){$output .= $stash->get(['locale',0,'maketext',['up[comment,indicates that a service is running or operational]' ]])}else {$output .= $stash->get(['locale',0,'maketext',['down[comment,indicates that a service is not running or is non-operational]' ]])}$output .= '        </td>
        <td>';if (!$stash->get('is_pending')){if ($stash->get('is_up')){$output .= '                <i class="fas fa-check" aria-hidden="true"></i>'}else {$output .= '                <i class="fas fa-exclamation-triangle" aria-hidden="true"></i>'}}$output .= '        </td>
    </tr>
';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash=$context->delocalise();die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '</tbody>
</table>
</section>

<section>
<h3>';$output .= $stash->get(['locale',0,'maketext',['System Information' ]]);$output .= '</h3>
<table class="table table-striped table-condensed">
<thead>
    <tr>
        <th>';$output .= $stash->get(['locale',0,'maketext',['System Item' ]]);$output .= '</th>
        <th>';$output .= $stash->get(['locale',0,'maketext',['Details' ]]);$output .= '</th>
        <th>';$output .= $stash->get(['locale',0,'maketext',['Status' ]]);$output .= '</th>
    </tr>
</thead>
<tbody>
<tr';if ($stash->get(['data',0,'load',0])> $stash->get(['data',0,'cpumax',0])){$output .= ' class="danger"'}elsif ($stash->get(['data',0,'load',0])>= ($stash->get(['data',0,'cpumax',0])* 0.8)){$output .= ' class="warning"'}$output .= '>
    <td>';$output .= $stash->get(['locale',0,'maketext',['Server Load' ]]);$output .= '</td>
    <td>';$output .= $stash->get(['locale',0,'maketext',['[numf,_1] ([quant,_2,CPU,CPUs])',$stash->get(['data',0,'load',0]),$stash->get(['data',0,'cpunum',0])]]);$output .= '</td>
    <td>
        ';if ($stash->get(['data',0,'load',0])> $stash->get(['data',0,'cpumax',0])){$output .= '        <i class="fas fa-times" aria-hidden="true"></i>
        '}elsif ($stash->get(['data',0,'load',0])>= ($stash->get(['data',0,'cpumax',0])* 0.8)){$output .= '
        <i class="fas fa-exclamation" aria-hidden="true"></i>'}else {$output .= '        <i class="fas fa-check" aria-hidden="true"></i>'}$output .= '    </td>
</tr>

<tr';if ($stash->get(['data',0,'mempct',0])> 90){$output .= ' class="danger"'}elsif ($stash->get(['data',0,'mempct',0])> 80){$output .= ' class="warning"'}$output .= '>
    <td>';$output .= $stash->get(['locale',0,'maketext',['Memory Used' ]]);$output .= '</td>
    <td>';$output .= $stash->get(['locale',0,'maketext',['[numf,_1]% ([numf,_2] of [numf,_3])',$stash->get(['data',0,'mempct',0]),$stash->get(['data',0,'memused',0]),$stash->get(['data',0,'memtotal',0])]]);$output .= '</td>
    <td>';if ($stash->get(['data',0,'mempct',0])> 90){$output .= '
        <i class="fas fa-times" aria-hidden="true"></i>
        '}elsif ($stash->get(['data',0,'mempct',0])> 80){$output .= '
        <i class="fas fa-exclamation" aria-hidden="true"></i>'}else {$output .= '        <i class="fas fa-check" aria-hidden="true"></i>'}$output .= '    </td>
</tr>

<tr';if ($stash->get(['data',0,'swappct',0])> 90){$output .= ' class="danger"'}elsif ($stash->get(['data',0,'swappct',0])> 80){$output .= ' class="warning"'}$output .= '>
    <td>';$output .= $stash->get(['locale',0,'maketext',['Swap Used' ]]);$output .= '</td>
    <td>';$output .= $stash->get(['locale',0,'maketext',['[numf,_1]% ([numf,_2] of [numf,_3])',$stash->get(['data',0,'swappct',0]),$stash->get(['data',0,'swapused',0]),$stash->get(['data',0,'swaptotal',0])]]);$output .= '</td>
    <td>';if ($stash->get(['data',0,'swappct',0])> 90){$output .= '
        <i class="fas fa-times" aria-hidden="true"></i>
        '}elsif ($stash->get(['data',0,'swappct',0])> 80){$output .= '
        <i class="fas fa-exclamation" aria-hidden="true"></i>'}else {$output .= '        <i class="fas fa-check" aria-hidden="true"></i>'}$output .= '    </td>
</tr>
</tbody>
</table>
</section>

<section>
<h3>';$output .= $stash->get(['locale',0,'maketext',['Disk Information' ]]);$output .= '</h3>
<table class="table table-striped table-condensed">
<thead>
<tr>
    <th>';$output .= $stash->get(['locale',0,'maketext',['Device' ]]);$output .= '</th>
    <th>';$output .= $stash->get(['locale',0,'maketext',['Mount Point' ]]);$output .= '</th>
    <th>';$output .= $stash->get(['locale',0,'maketext',['Usage' ]]);$output .= '</th>
    <th>';$output .= $stash->get(['locale',0,'maketext',['Status' ]]);$output .= '</th>
</tr>
</thead>
<tbody>
';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['data',0,'disk_data',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'disk'}=$_tt_value;$output .= '<tr';if ($stash->get(['disk',0,'percentage',0])> 90){$output .= ' class="danger"'}elsif ($stash->get(['disk',0,'percentage',0])> 80){$output .= ' class="warning"'}$output .= '>
    <td>';$output .= do {my$output='';my$_tt_filter=$context->filter('html')|| $context->throw($context->error);$output .= $stash->get(['disk',0,'filesystem',0]);&$_tt_filter($output)};$output .= '</td>
    <td>';$output .= do {my$output='';my$_tt_filter=$context->filter('html')|| $context->throw($context->error);$output .= $stash->get(['disk',0,'mount',0]);&$_tt_filter($output)};$output .= '</td>
    <td>';$output .= $stash->get(['locale',0,'maketext',['[numf,_1]% ([numf,_2] of [numf,_3])',$stash->get(['disk',0,'percentage',0]),$stash->get(['disk',0,'used',0]),$stash->get(['disk',0,'total',0])]]);$output .= '</td>
    <td>';if ($stash->get(['disk',0,'percentage',0])> 90){$output .= '
        <i class="fas fa-times" aria-hidden="true"></i>
        '}elsif ($stash->get(['disk',0,'percentage',0])> 80){$output .= '
        <i class="fas fa-exclamation" aria-hidden="true"></i>'}else {$output .= '        <i class="fas fa-check" aria-hidden="true"></i>'}$output .= '    </td>
</tr>
';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '</tbody>
</table>
</section>

</div>
</div>
</div>
';$context->include('master_templates/master.tmpl',{'theme'=>'bootstrap','app_key'=>'service_status','content',$output })}}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});