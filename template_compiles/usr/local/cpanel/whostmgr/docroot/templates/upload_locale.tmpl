Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/whostmgr/docroot/templates/upload_locale.tmpl',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set('Encoder',$context->plugin('Encoder'));$output .= '
';$output .= $context->process('master_templates/_defheader.tmpl',{'theme'=>'yui' });$output .= '<p>Importing \'';$output .= $stash->get(['Encoder',0,'safe_html_encode_str',[$stash->get(['data',0,'filename',0])]]);$output .= '\'.</p>
';if (!$stash->get(['data',0,'has_xmlwf',0])){$output .= '<p class="warningmsg">Could not find the \'xmlwf\' to pre-verify that the XML is valid.</p>'}$output .= '

';if ($stash->get(['data',0,'pre_check_errors',0,'size',0])){$output .= '
    ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['data',0,'pre_check_errors',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'error_number'}=$_tt_value;$output .= '
        ';if ($stash->get('error_number')eq 1){$output .= '
           ';if (!$stash->get(['data',0,'filename',0])){$output .= '
             <p class="error">No file given.</p>
           '}else {$output .= '
             <p class="error">The filename uploaded results in an invalid destination filename.</p>
           '}$output .= '
        '}elsif ($stash->get('error_number')eq 2){$output .= '
           ';if (!$stash->get(['data',0,'filename',0])){$output .= '
             <p class="error">No file given.</p>
           '}else {$output .= '
             <p class="error">Could not find uploaded file.</p>
           '}$output .= '
        '}elsif ($stash->get('error_number')eq 3){$output .= '
<p class="error">The file does not contain well formed XML according to \'';$output .= $stash->get(['data',0,'has_xmlwf',0]);$output .= '\'.</p>
        '}$output .= '
    ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
'}else {$output .= '
     <pre>
        ';$stash->set('rc',$stash->get(['data',0,'import_locale_cr',[$stash->get(['data',0,'filepath',0]),$stash->get(['data',0,'upload_type',0])]]));$output .= '
     </pre>
     ';if (!$stash->get('rc')){$output .= '<p class="error">Failed to import \'';$output .= $stash->get(['Encoder',0,'safe_html_encode_str',[$stash->get(['data',0,'filename',0])]]);$output .= '\'.</p>'}$output .= '
'}$output .= '
<p><a href="';$output .= $stash->get('cp_security_token');$output .= '/scripts9/upload_locale_form">Back</a></p>
';$output .= $context->process('master_templates/_deffooter.tmpl',{'theme'=>'yui' })}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});