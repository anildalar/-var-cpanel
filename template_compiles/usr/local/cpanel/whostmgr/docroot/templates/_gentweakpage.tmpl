Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/whostmgr/docroot/templates/_gentweakpage.tmpl',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '
';$stash->set('ServerRoles',$context->plugin('ServerRoles'));$stash->set('JSON',$context->plugin('JSON'));$stash->set('Whostmgr',$context->plugin('Whostmgr'));$stash->set('CPHash',$context->plugin('CPHash'));$stash->set('CPScalar',$context->plugin('CPScalar'));$stash->set('CPSort',$context->plugin('CPSort'));$stash->set('Encoder',$context->plugin('Encoder'));$output .= '
<!-- prevent password autofill -->
<input type="text" style="display:none">
<input type="password" autocomplete=\'off\' style="display:none">
<style type="text/css">
#find_container {
    float: right;
    margin-left: 6px;
    margin-right: 6px;
}

.noradio {
  width: 95%;
}

.yui-navset {
    position: static;  /* override tabview.css */
}
</style>

';$stash->set('this_is_ie6',$stash->get(['CPANEL',0,'ua_is_ie',0,'match',['^6' ]]));$stash->set('bootstrap',$stash->get('bootstrap'));$output .= '

<input type="hidden" name="module" value="';$output .= $stash->get('tweakmodule');$output .= '" />
<!--
<table width="98%" class="datatable tweaksettings">
-->
<script type="text/javascript">
var tweak_controls = [];
</script>
';if (!($stash->get('nocontainers'))){$output .= '<div class="tweaksettings">
<div id="promptBeforeSelect" style="visibility:hidden">
    <div id="promptHd" class="hd"></div>
    <div id="promptBd" class="bd"></div>
    <div id="promptFt" class="ft">
        <button id="promptOk"
            class="btn-primary btn-small"
            type="button">
            ';$output .= $stash->get(['locale',0,'maketext',['Continue' ]]);$output .= '
        </button>
        <button id="promptCancel"
            class="btn-secondary btn-small"
            type="button">
            ';$output .= $stash->get(['locale',0,'maketext',['Cancel' ]]);$output .= '        </button>
    </div>
</div>
<div class="" style="align:left;" >
<div id="tweaktabs" class="yui-navset">

<div id="find_container">
<span class="jumptext">';$output .= $stash->get(['locale',0,'maketext',['Find' ]]);$output .= '&nbsp;</span>
<input type="text" name="find" id="quickjump" onKeyUp="try {searchpage(this);} catch(e) {}" style="width:130px;"';if ($stash->get('bootstrap')){$output .= ' class="form-control"'}$output .= '>
<b style="display:none;" id="clearlnk" class="smalltext"><a onClick="try {clearsearch()} catch(e) {};return false;" href="javascript:void(0)">x</a></b>
<span id="gosearch" class="smalltext';if ($stash->get('bootstrap')){$output .= ' text-danger'}$output .= '" style="display:none; margin: 0 auto">';$output .= $stash->get(['locale',0,'maketext',['No Matches' ]]);$output .= '</span>

</div>
'}$stash->set('extrascript','');if ($stash->get(['tweakcfg',0,'extra_settings',0])){do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['tweakcfg',0,'extra_settings',0,'keys',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'settings_key'}=$_tt_value;$stash->set(['ts_conf',0,$stash->get('settings_key'),0],$stash->get(['tweakcfg',0,'extra_settings',0,$stash->get('settings_key'),0]));;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error}}$stash->set('TS_display',$stash->get('ts_display')|| $stash->get(['ts_texts',0,'TS_display',0]));$stash->set('make_tabs',$stash->get(['TS_display',0,'size',0])> 1);$stash->set('hide_group',{});do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('TS_display');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'group_item'}=$_tt_value;$stash->set('shown',0);do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['group_item',0,1,0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR2: while (!$_tt_error){$stash->{'setting_name'}=$_tt_value;$stash->set('cur_settings',$stash->get(['ts_conf',0,$stash->get('setting_name'),0]));if (!$stash->get('cur_settings')){($_tt_value,$_tt_error)=$_tt_list->get_next();next FOR2}if (!$stash->get(['cur_settings',0,'needs_role',0])|| $stash->get(['ServerRoles',0,'are_roles_enabled',[$stash->get(['cur_settings',0,'needs_role',0])]])){$stash->set('shown',1);last FOR2};($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};if (!$stash->get('shown')){$stash->set(['hide_group',0,$stash->get(['group_item',0,0,0]),0],1)};($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};if ($stash->get('make_tabs')){if (!($stash->get('this_is_ie6'))){$output .= '<div id="left_scroll_button" class="scroll_button inactive"> &lt; </div>';$output .= '<div id="right_scroll_button" class="scroll_button"> &gt; </div>';$output .= '<div id="scrolling_tabs_container" valign="bottom">';$output .= '<div id="scrolling_tabs" class="yui_tabview_scroll_tabs">'}$output .= '<ul id="yui_tabs" class="yui-nav">';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('TS_display');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'group_item'}=$_tt_value;$stash->set('group',$stash->get(['group_item',0,0,0]));if (!$stash->get(['hide_group',0,$stash->get('group'),0])){$stash->set('groupkey',$stash->get(['group',0,'replace',['[^A-Za-z0-9]','' ]]));$stash->set('class_html',$stash->get(['loop',0,'last',0])? ' class="last"' : '');$output .= ('	<li' .$stash->get('class_html').'><a href=\'#tab_' .$stash->get('groupkey').'\'><em>' .$stash->get('group').'</em></a></li>
')};($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '</ul>' .('' .'
');if (!($stash->get('this_is_ie6'))){$output .= '</div>';$output .= '</div>'}}$output .= '<div id="alltweaks" class="yui-content">' .('' .'

');do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('TS_display');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'group_item'}=$_tt_value;$stash->set('group',$stash->get(['group_item',0,0,0]));if ($stash->get(['hide_group',0,$stash->get('group'),0])){($_tt_value,$_tt_error)=$_tt_list->get_next();next FOR1}$stash->set('groupkey',$stash->get(['group',0,'replace',['[^A-Za-z0-9]','' ]]));$stash->set('header_text',$stash->get('ts_headers')? $stash->get(['ts_headers',0,$stash->get('group'),0])? $stash->get(['ts_headers',0,$stash->get('group'),0,'txt',0]): '' : '');$output .= '<div id="' .'tab_' .$stash->get('groupkey').'">';$output .= do {my$output='';$stash->set('row_index',0);$stash->set('sorted_keys',$stash->get(['group_item',0,1,0]));if ($stash->get(['tweakcfg',0,'extra_texts',0])&& $stash->get(['tweakcfg',0,'extra_texts',0,$stash->get('group'),0])){$stash->set('extra_keys',$stash->get(['tweakcfg',0,'extra_texts',0,$stash->get('group'),0,'keys',0,'sort',0]));$stash->set('sorted_keys',$stash->get(['sorted_keys',0,'merge',[$stash->get('extra_keys')]]));do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('extra_keys');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR2: while (!$_tt_error){$stash->{'extra_key'}=$_tt_value;$stash->set(['ts_texts',0,$stash->get('extra_key'),0],$stash->get(['tweakcfg',0,'extra_texts',0,$stash->get('group'),0,$stash->get('extra_key'),0]));;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error}}do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('sorted_keys');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR2: while (!$_tt_error){$stash->{'key'}=$_tt_value;$output .= ('
<!-- |' .$stash->get('group').'| |' .$stash->get('key').'| -->
');$stash->set('cur_settings',$stash->get(['ts_conf',0,$stash->get('key'),0]));if (!$stash->get('cur_settings')){($_tt_value,$_tt_error)=$_tt_list->get_next();next FOR2}$stash->set('cur_texts',$stash->get(['ts_texts',0,$stash->get('key'),0]));$stash->set('cur_label',$stash->get(['cur_texts',0,'label',0])|| $stash->get(['cur_settings',0,'label',0]));if ($stash->get(['cur_settings',0,'exists',['skipif' ]])&& $stash->get(['ref',[$stash->getref(['cur_settings',0,'skipif',0])]])eq 'CODE' && $stash->get(['cur_settings',0,'skipif',[$stash->get('conf')]])){($_tt_value,$_tt_error)=$_tt_list->get_next();next FOR2}$stash->set('row_index',$stash->get('row_index')+ 1);$stash->set('tclass',$stash->get('row_index')% 2 ? 'tdshade1_noborder' : 'tdshade2_noborder');$output .= '<input type="hidden" name="___original_' .$stash->get(['key',0,'cpanel_safe_html_encode_str',0]).'" value="' .$stash->get(['conf',0,$stash->get('key'),0,'cpanel_safe_html_encode_str',0]).'">';if (!$stash->get(['conf',0,$stash->get('key'),0,'defined',0])){$output .= '<input type="hidden" name="___undef_original_' .$stash->get(['key',0,'cpanel_safe_html_encode_str',0]).'" value="1">'}if ($stash->get(['cur_settings',0,'needs_role',0])&&!$stash->get(['ServerRoles',0,'are_roles_enabled',[$stash->get(['cur_settings',0,'needs_role',0])]])){($_tt_value,$_tt_error)=$_tt_list->get_next();next FOR2}$stash->set('this_is_a_button',$stash->get('cur_settings')&& $stash->get(['cur_settings',0,'type',0])eq 'button');if ($stash->get('this_is_a_button')){if ($stash->get('cur_settings')&& $stash->get(['cur_settings',0,'popup',0])){$stash->set('button_html','<a onclick=\'return quick_popup_button(this,' .$stash->get(['cur_label',0,'json',0]).(');\' target="' .$stash->get(['cur_settings',0,'target',0]).'" class="btn-primary" href="' .$stash->get(['cur_settings',0,'action',0]).'">' .$stash->get(['cur_texts',0,'button',0]).'</a>'))}else {$stash->set('button_html',('<a target="' .$stash->get(['cur_settings',0,'target',0]).'" class="btn-primary" href="' .$stash->get(['cur_settings',0,'action',0]).'">' .$stash->get(['cur_texts',0,'button',0]).'</a>'))}if (!$stash->get(['cur_texts',0,'label',0])){$output .= ('<tr class=\'' .$stash->get('tclass').'\'><td class=\'label_and_help\' style=\'text-align:left\'>');$output .= $stash->get('button_html');$output .= '</td><td></td></tr>';($_tt_value,$_tt_error)=$_tt_list->get_next();next FOR2}}$stash->set('newoption_title','');if ($stash->get('changed_settings')&& $stash->get(['changed_settings',0,'exists',[$stash->get('key')]])){$stash->set('newoption',!$stash->get('this_is_a_button'));if ($stash->get('newoption')){$stash->set('newoption_title',$stash->get(['locale',0,'maketext',['The setting, [_1], has changed since the last time you saved this page.',$stash->get('key')]]))}}else {$stash->set('newoption',!$stash->get('this_is_a_button')&&!$stash->get(['conf',0,'exists',[$stash->get('key')]]));if ($stash->get('newoption')){$stash->set('newoption_title',$stash->get(['locale',0,'maketext',['The setting, [_1], was not set in the configuration file, so the default has been used.',$stash->get('key')]]));if ($stash->get(['cur_settings',0,'exists',['default' ]])){$stash->set(['conf',0,$stash->get('key'),0],$stash->get(['cur_settings',0,'default',0]))}}}if ($stash->get(['cur_settings',0,'requires_test',0])){$stash->set('extrascript',$stash->get('extrascript').('register_requires_test( \'' .$stash->get('key').'\', \'').$stash->get(['cur_settings',0,'requires_test',0,'join',['\',\'' ]]).('' .'\')
'))}if ($stash->get(['cur_settings',0,'excludes',0])){$stash->set('excludes',$stash->get(['ref',[$stash->get(['cur_settings',0,'excludes',0])]])eq 'ARRAY' ? $stash->get(['cur_settings',0,'excludes',0]): $stash->get(['cur_settings',0,'excludes',0,'split',[',' ]]));do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('excludes');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR3: while (!$_tt_error){$stash->{'exclusion'}=$_tt_value;if ($stash->get('exclusion')ne $stash->get('key')){$stash->set('extrascript',$stash->get('extrascript').('register_exclude(\'' .$stash->get('key').'\',\'' .$stash->get('exclusion').'\');
'))};($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error}}if ($stash->get(['cur_settings',0,'requires',0])){do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['cur_settings',0,'requires',0,'split',[',' ]]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR3: while (!$_tt_error){$stash->{'requirement'}=$_tt_value;if ($stash->get('requirements')ne $stash->get('key')){$stash->set('extrascript',$stash->get('extrascript').('register_requires(\'' .$stash->get('key').'\',\'' .$stash->get('requirement').'\');
'))};($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error}}if ($stash->get(['cur_settings',0,'depends',0])){do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['cur_settings',0,'depends',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR3: while (!$_tt_error){$stash->{'dep'}=$_tt_value;$stash->set('extrascript',$stash->get('extrascript').('register_depends(\'' .$stash->get('key').'\',\'' .$stash->get('dep').'\');
'));;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error}}if ($stash->get(['cur_settings',0,'exists',['value' ]])){$stash->set(['conf',0,$stash->get('key'),0],$stash->get(['cur_settings',0,'value',[$stash->get('conf')]]))}$stash->set('unformatted_value',$stash->get(['conf',0,$stash->get('key'),0]));$stash->set('formatted_value',$stash->get(['cur_settings',0,'exists',['format' ]])&& $stash->get(['ref',[$stash->getref(['cur_settings',0,'format',0])]])eq 'CODE' ? $stash->get(['cur_settings',0,'format',[$stash->get('unformatted_value')]]): $stash->get('unformatted_value'));$stash->set('formatted_value_enc',$stash->get(['formatted_value',0,'cpanel_safe_html_encode_str',0]));if ($stash->get('newoption')|| $stash->get('this_is_a_button')|| $stash->get(['cur_settings',0,'type',0])eq 'multiselect'){$stash->set('is_invalid',0)}else {if ($stash->get(['cur_settings',0,'type',0])eq 'number' &&!$stash->get(['formatted_value',0,'length',0])){$stash->set('formatted_value',$stash->get('UNDEF'));$stash->set('is_invalid',0)}if ($stash->get(['formatted_value',0,'defined',0])){$output .= do {my$output='';my ($_tt_error,$_tt_handler);eval {$stash->set('is_invalid',$stash->get(['cur_settings',0,'exists',['checkval' ]])&& $stash->get(['ref',[$stash->getref(['cur_settings',0,'checkval',0])]])eq 'CODE' &&!$stash->get(['cur_settings',0,'checkval',[$stash->get('formatted_value')],'defined',0]))};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error if$_tt_error->type =~ /^(return|stop)$/;$stash->set('error',$_tt_error);$stash->set('e',$_tt_error);if (defined ($_tt_handler=$_tt_error->select_handler())){$_tt_error=0}else {$stash->set('is_invalid',1);$_tt_error=''}}die$_tt_error if$_tt_error;$output}}else {$stash->set('is_invalid',!$stash->get(['cur_settings',0,'can_undef',0]))}}if ($stash->get('is_invalid')){$stash->set('tclass',$stash->get('tclass').' invalid')}$stash->set('range_html',[]);if ($stash->get(['cur_settings',0,'exists',['minimum' ]])){$stash->set('minimum',$stash->get(['cur_settings',0,'minimum',0]));if ($stash->get(['cur_settings',0,'exists',['format' ]])&& $stash->get(['ref',[$stash->getref(['cur_settings',0,'format',0])]])eq 'CODE'){$stash->set('minimum',$stash->get(['cur_settings',0,'format',[$stash->get('minimum')]]))}$output .= $stash->get(['range_html',0,'push',[$stash->get(['locale',0,'maketext',['Minimum: [numf,_1]',$stash->get('minimum')]])]])}if ($stash->get(['cur_settings',0,'exists',['maximum' ]])){$stash->set('maximum',$stash->get(['cur_settings',0,'maximum',0]));if ($stash->get(['cur_settings',0,'exists',['format' ]])&& $stash->get(['ref',[$stash->getref(['cur_settings',0,'format',0])]])eq 'CODE'){$stash->set('maximum',$stash->get(['cur_settings',0,'format',[$stash->get('maximum')]]))}$output .= $stash->get(['range_html',0,'push',[$stash->get(['locale',0,'maketext',['Maximum: [numf,_1]',$stash->get('maximum')]])]])}$stash->set('range_html',($stash->get(['range_html',0,'size',0])> 0)? ' <span class="range">(' .$stash->get(['range_html',0,'join',['; ' ]]).')</span>' : $stash->get('UNDEF'));$stash->set('newoption_html','');if ($stash->get('newoption')){$stash->set('newoption_html','<span id="' .$stash->get('key').'_warning" title="' .$stash->get('newoption_title').'" class="changed_setting">&nbsp;</span> ')}$stash->set('cur_help',$stash->get(['cur_texts',0,'help',0])|| $stash->get(['cur_settings',0,'help',0]));if ($stash->get(['tweakcfg',0,'display_label',0])){if (!$stash->get('cur_help')){$stash->set('display_html',('<div id=\'label-' .$stash->get('key').'\'>' .$stash->get('newoption_html').$stash->get('cur_label').$stash->get('range_html').'</div>'))}elsif ($stash->get(['tweakcfg',0,'always_show_help',0])){$stash->set('display_html',('<div id=\'label-' .$stash->get('key').'\'>' .$stash->get('newoption_html').$stash->get('cur_label').$stash->get('range_html').'</div>').'<div>' .('<div class=\'help\' id=\'help-' .$stash->get('key').'\'>' .$stash->get('cur_help').'</div>').'</div>')}else {$stash->set('display_html',('<div id=\'label-' .$stash->get('key').'\'>' .$stash->get('newoption_html').$stash->get('cur_label').$stash->get('range_html')).('&nbsp;<a href=\'javascript:void(0)\' onclick=\'showhelp("' .$stash->get('key').'"); return false;\'>[?]</a>').'</div>' .'<div>' .('<div class=\'help\' id=\'help-' .$stash->get('key').'\' style=\'display:none;\'>' .$stash->get('cur_help').'</div>').'</div>')}}else {if ($stash->get('key')eq 'LOGSTYLE' && $stash->get('formatted_value')eq 'common'){$stash->set('common_setting_warning','<div class=\'alert alert-warning\'>' .$stash->get(['locale',0,'maketext',['Your “[_1]” uses the “[_2]” setting. Your website’s stats may not function.','LOGSTYLE','COMMON' ]]).'</div>');$stash->set('display_html',$stash->get('common_setting_warning').$stash->get('cur_help'))}else {$stash->set('display_html',$stash->get('cur_help').$stash->get('range_html'))}}$output .= ('<tr id=\'' .$stash->get('key').'_container\' class=\'' .$stash->get('tclass').'\'>
');$output .= ('<td class=\'label_and_help\' id=\'labelhelp-' .$stash->get('key').'\'>').($stash->get('debug')? ('<b>' .$stash->get('key').'</b> '): '').$stash->get('display_html').($stash->get('is_invalid')? '<br /><br/><span class="warning">The current value for this field is invalid. You must update it.</span>' : '').('' .'</td>
');$output .= '<td class=\'controls\' valign=\'middle\'>';do {my$_tt_result=$stash->get(['cur_settings',0,'type',0]);my$_tt_match;SWITCH: {$_tt_match=['button' ];$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){$output .= $stash->get('button_html');last SWITCH}$_tt_match=['path','text','number','size','password' ];$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){$stash->set('text_type',$stash->get(['cur_settings',0,'type',0])eq 'password' ? 'password' : 'text');$stash->set('input_maxlength',$stash->get(['cur_settings',0,'exists',['maxlength' ]])? (' maxlength=\'' .$stash->get(['cur_settings',0,'maxlength',0]).'\''): '');if ($stash->get(['cur_settings',0,'exists',['maxlength' ]])&& $stash->get(['cur_settings',0,'maxlength',0])&& $stash->get(['cur_settings',0,'exists',['size' ]])&& $stash->get(['cur_settings',0,'size',0])){$stash->set('input_size',(' size=\'' .$stash->get(['cur_settings',0,'size',0]).'\''))}elsif ($stash->get(['cur_settings',0,'exists',['maxlength' ]])&& $stash->get(['cur_settings',0,'maxlength',0])){$stash->set('input_size',(' size=\'' .$stash->get(['cur_settings',0,'maxlength',0]).'\''))}elsif ($stash->get(['cur_settings',0,'exists',['width' ]])&& $stash->get(['cur_settings',0,'width',0])){$stash->set('input_size',(' size=\'' .$stash->get(['cur_settings',0,'width',0]).'\''))}else {$stash->set('input_size','')}$stash->set('buttons',[]);$stash->set('use_radio_buttons',$stash->get(['cur_settings',0,'options',0])|| $stash->get(['cur_settings',0,'can_undef',0])|| $stash->get(['cur_settings',0,'defined',['default' ]]));$stash->set('cur_radios',$stash->get(['cur_settings',0,'options',0]));if (!$stash->get('cur_radios')&& ($stash->get(['cur_settings',0,'can_undef',0])|| $stash->get(['cur_settings',0,'defined',['default' ]]))){$stash->set('cur_radios',[]);if ($stash->get(['cur_settings',0,'can_undef',0])&& $stash->get(['cur_settings',0,'item',['default' ],'length',0])ne 0){$output .= $stash->get(['cur_radios',0,'push',[$stash->get('UNDEF')]])}if ($stash->get(['cur_settings',0,'defined',['default' ]])){$output .= $stash->get(['cur_radios',0,'push',[$stash->get(['cur_settings',0,'default',0])]])}if ($stash->get(['cur_settings',0,'defined',['pci' ]])){$output .= $stash->get(['cur_radios',0,'push',[$stash->get(['cur_settings',0,'pci',0])]])}}if ($stash->get('cur_radios')){$output .= ('<script type=\'text/javascript\'>tweak_controls.push( \'' .$stash->get('key').'\' )</script>');$stash->set('selected_radio','');do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('cur_radios');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR3: while (!$_tt_error){$stash->{'cur_radio'}=$_tt_value;if (!$stash->get(['cur_radio',0,'defined',0])){$stash->set('undef_is_default',$stash->get(['cur_settings',0,'exists',['default' ]])&&!$stash->get(['cur_settings',0,'defined',['default' ]]));if (($stash->get('undef_is_default'))){$stash->set('extrascript',$stash->get('extrascript').('default_values[\'' .$stash->get('key').'\'] = null;
'))}if ($stash->get('is_invalid')){$stash->set('check_undef',$stash->get('undef_is_default'))}else {$stash->set('check_undef',!$stash->get(['formatted_value',0,'defined',0]))}if ($stash->get('check_undef')){$stash->set('selected_radio','undef')}$output .= $stash->get(['buttons',0,'push',['<label>' .('<input type=\'radio\' name=\'' .$stash->get('key').'_control\' value=\'undef\'').(' id=\'' .$stash->get('key').'_undef\'').($stash->get('check_undef')? ' checked="checked"' : '').' onclick="checktweaks()"' .' />' .($stash->get(['cur_texts',0,'undef',0])|| $stash->get(['cur_settings',0,'can_undef',0])).($stash->get('undef_is_default')? '&nbsp;<span class="' : '').(($stash->get('bootstrap')&& $stash->get('undef_is_default'))? 'label label-' : '').($stash->get('undef_is_default')? 'default">default</span>' : '').'</label>' ]])}elsif ($stash->get('cur_radio')eq $stash->get(['cur_settings',0,'default',0])){$stash->set('js_default',$stash->get(['cur_settings',0,'default',0,'match',['\A\d+(?:\.\d+)\z' ]])? $stash->get(['cur_settings',0,'default',0])+ 0 : ('\'' .$stash->get(['cur_settings',0,'default',0]).'\''));$stash->set('extrascript',$stash->get('extrascript').('default_values[\'' .$stash->get('key').'\'] = ' .$stash->get('js_default').';
'));$stash->set('cur_default',$stash->get(['cur_settings',0,'default',0]));$stash->set('default_text',$stash->get(['cur_settings',0,'default_text',0])|| $stash->get('cur_default'));$stash->set('cur_radio_checked',$stash->get('is_invalid')|| $stash->get('formatted_value')eq $stash->get('cur_default'));if ($stash->get('cur_radio_checked')){$stash->set('selected_radio','default')}$output .= $stash->get(['buttons',0,'push',['<label>' .('<input type=\'radio\' name=\'' .$stash->get('key').'_control\' value=\'default\'').($stash->get('cur_radio_checked')? ' checked="checked"' : '').' onclick="checktweaks()"' .' />&nbsp;' .$stash->get('default_text').($stash->get(['cur_settings',0,'exists',['unit' ]])? ('&nbsp;' .$stash->get(['cur_settings',0,'unit',0])): '').'&nbsp;<span class="' .($stash->get('bootstrap')? 'label label-' : '').'default">default</span>' .'</label>' ]])}elsif ($stash->get('cur_radio')eq $stash->get(['cur_settings',0,'pci',0])){$stash->set('pci_text',$stash->get(['cur_settings',0,'pci_text',0])|| $stash->get(['cur_settings',0,'pci',0]));$stash->set('cur_radio_checked',($stash->get('formatted_value')eq $stash->get(['cur_settings',0,'pci',0])));if ($stash->get('cur_radio_checked')){$stash->set('selected_radio','pci')}$output .= $stash->get(['buttons',0,'push',['<label>' .('<input type=\'radio\' name=\'' .$stash->get('key').'_control\' value=\'pci\'').($stash->get('cur_radio_checked')? ' checked="checked"' : '').' onclick="checktweaks()"' .' />' .($stash->get('pci_text')|| $stash->get(['cur_settings',0,'pci',0])).($stash->get(['cur_settings',0,'exists',['unit' ]])? ('&nbsp;' .$stash->get(['cur_settings',0,'unit',0])): '').'&nbsp;<span class="pci">PCI recommended</span>' .'</label>' ]])}else {$stash->set('text_key',('custom_' .$stash->get('cur_radio')));$stash->set('cur_radio_text',$stash->get(['cur_texts',0,'custom',0,$stash->get('cur_radio'),0]));$stash->set('cur_radio_text',$stash->get(['cur_radio_text',0,'html',0]));if (!$stash->get('cur_radio_text')){$stash->set('cur_radio_text',$stash->get(['cur_radio',0,'html',0]));$stash->set('cur_radio_text',$stash->get('cur_radio').($stash->get(['cur_settings',0,'exists',['unit' ]])? ('&nbsp;' .$stash->get(['cur_settings',0,'unit',0])): ''))}$stash->set('cur_radio_checked',($stash->get('formatted_value')eq $stash->get('cur_radio')));if ($stash->get('cur_radio_checked')){$stash->set('selected_radio',('custom_' .$stash->get('cur_radio')))}$stash->set('cur_radio_html',$stash->get(['cur_radio',0,'html',0]));$output .= $stash->get(['buttons',0,'push',['<label>' .('<input type=\'radio\' name=\'' .$stash->get('key').'_control\' value="custom_' .$stash->get('cur_radio_html').'"').($stash->get('cur_radio_checked')? ' checked="checked"' : '').' onclick="checktweaks()"' .' />' .$stash->get('cur_radio_text').'</label>' ]])};($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$stash->set('custom_selected',!$stash->get('selected_radio'));$stash->set('disabled_html',$stash->get('custom_selected')? '' : ' disabled="disabled"');$stash->set('checked_html',$stash->get('custom_selected')? ' checked="checked"' : '');$stash->set('default_input_value',$stash->get(['formatted_value',0,'defined',0])? $stash->get('formatted_value_enc'): $stash->get(['cur_settings',0,'default',0]));$output .= $stash->get(['buttons',0,'push',[($stash->get('bootstrap')? '<div class=\'input-group\'>' .'<div class=\'input-group-addon\'>' .('<input type=\'radio\' onclick=\'checktweaks()\' name=\'' .$stash->get('key').'_control\' value=\'other\' ' .$stash->get('checked_html').' />').'</div>' .('<input onkeyup=\'checktweaks()\' id=\'' .$stash->get('key').'\' name=\'' .$stash->get('key').'_other\' type=\'' .$stash->get('text_type').'\' ' .$stash->get('input_size').' ' .$stash->get('input_maxlength').' ' .$stash->get('disabled_html').' value="' .$stash->get('default_input_value').'" class=\'form-control\' />').'</div>' : ('<input type=\'radio\' onclick=\'checktweaks()\' name=\'' .$stash->get('key').'_control\' value=\'other\' ' .$stash->get('checked_html').' />').('<input onkeyup=\'checktweaks()\' id=\'' .$stash->get('key').'\' name=\'' .$stash->get('key').'_other\' type=\'' .$stash->get('text_type').'\' autocomplete=\'off\' ' .$stash->get('input_size').' ' .$stash->get('input_maxlength').' ' .$stash->get('disabled_html').' value="' .$stash->get('default_input_value').'" />').($stash->get(['key',0,'match',['TTL$' ]])? '<br><br><i>' .$stash->get(['locale',0,'maketext',['Required' ]]).'</i>' : '')).($stash->get(['cur_settings',0,'exists',['unit' ]])? ('&nbsp;' .$stash->get(['cur_settings',0,'unit',0])): '')]])}else {$stash->set('disabled_html',$stash->get(['cur_settings',0,'can_undef',0])&&!$stash->get(['formatted_value',0,'defined',0])? 'disabled="disabled"' : '');$output .= ('<input class=\'noradio\' onkeyup="checktweaks(\'' .$stash->get('key').'\');" id=\'' .$stash->get('key').'\' type=\'' .$stash->get('text_type').'\' autocomplete=\'off\' ' .$stash->get('disabled_html')).(' name=\'' .$stash->get('key').'\'' .$stash->get('input_size').' ' .$stash->get('input_maxlength').' value="' .$stash->get('formatted_value_enc').'" />').($stash->get(['cur_settings',0,'unit',0,'defined',0])? ('&nbsp;' .$stash->get(['cur_settings',0,'unit',0])): '');if ($stash->get('key')eq 'ADDR'){$output .= '<br><br><i>' .$stash->get(['locale',0,'maketext',['Required' ]]).'</i>'}}$output .= '<div class="brickcontainer">';$output .= ('<ul onclick=\'check_tweak_controls("' .$stash->get('key').'", true)\' style=\'text-align: left; list-style-type: none; padding: 0px; margin: 0 auto\'>');$output .= '<li>' .$stash->get(['buttons',0,'join',['</li><li>' ]]).'</li>';$output .= '</ul></div>';last SWITCH}$_tt_match='textarea';$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){$output .= ('<textarea name=\'' .$stash->get('key').'\'>' .$stash->get('formatted_value_enc').'</textarea>');last SWITCH}$_tt_match='multiselect';$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){$output .= '<div class="brickcontainer" style="text-align: left">';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['cur_settings',0,'options',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR3: while (!$_tt_error){$stash->{'opt'}=$_tt_value;$stash->set('checked_html',$stash->get(['conf',0,$stash->get('key'),0,$stash->get('opt'),0])? 'checked="checked"' : '');if ($stash->get(['cur_settings',0,'hidden',0,'grep',[('' .$stash->get('opt'))],'size',0])){if ($stash->get('checked_html')){$output .= ('<input type=\'hidden\' name=\'' .$stash->get('key').'\' value=\'' .$stash->get('opt').'\' />')}($_tt_value,$_tt_error)=$_tt_list->get_next();next FOR3}else {$stash->set('label',$stash->get(['cur_texts',0,'optionlabels',0,$stash->get('opt'),0])|| $stash->get(['cur_settings',0,'optionlabels',0,$stash->get('opt'),0])|| $stash->get('opt'));if ($stash->get(['cur_settings',0,'default',0,$stash->get('opt'),0])){$stash->set('label',$stash->get('label').' <span class=\'' .($stash->get('bootstrap')? 'label label-' : '').'default\'>default</span>')}if ($stash->get(['cur_settings',0,'pci',0,$stash->get('opt'),0])){$stash->set('label',$stash->get('label').' <span class=\'pci\'>PCI Recommended</span>')}$output .= ('<label><input type=\'checkbox\' name=\'' .$stash->get('key').'\' value=\'' .$stash->get('opt').'\' ' .$stash->get('checked_html').' /> ' .$stash->get('label').'</label><br />')};($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '</div>';last SWITCH}$_tt_match=['select','locale' ];$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){if ($stash->get(['cur_settings',0,'sorter',0])){$stash->set('select_options',$stash->get(['cur_settings',0,'sorter',[$stash->get(['cur_settings',0,'options',0])]]))}else {$stash->set('select_options',$stash->get(['cur_settings',0,'options',0,'sort',0]))}$stash->set('cur_option_in_options',0);$stash->set('select_html',('<select id=\'' .$stash->get('key').'_select\' name=\'' .$stash->get('key').'\' onchange=\'checktweaks()\'').($stash->get('bootstrap')? ' class=\'form-control\'' : '').'>');if ($stash->get(['cur_settings',0,'type',0])eq 'locale'){$stash->set(['data',0,'selected_locale',0],$stash->get(['conf',0,$stash->get('key'),0])|| $stash->get(['cur_settings',0,'default',0])|| 'en');$stash->set('options_html',do {my$output='';$output .= $context->process('_locale_option_tags.tmpl');$output});$stash->set('select_html',$stash->get('select_html').$stash->get('options_html'))}else {do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('select_options');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR3: while (!$_tt_error){$stash->{'opt'}=$_tt_value;if ($stash->get('opt')eq $stash->get(['conf',0,$stash->get('key'),0])){$stash->set('cur_option_in_options',1);$stash->set('selected_html','selected="selected"')}else {$stash->set('selected_html','')}$stash->set('opt_html',$stash->get(['cur_texts',0,'optionlabels',0,$stash->get('opt'),0])|| $stash->get(['cur_settings',0,'optionlabels',0,$stash->get('opt'),0])|| $stash->get('opt'));$stash->set('select_html',$stash->get('select_html').('<option ' .$stash->get('selected_html').' value=\'' .$stash->get('opt').'\'>' .$stash->get('opt_html').'</option>'));;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error}}$stash->set('select_html',$stash->get('select_html').'</select>');$stash->set('select_html',$stash->get('select_html').'<div class="brickcontainer" style="text-align:left">');if ($stash->get(['cur_settings',0,'exists',['default' ]])){if ($stash->get(['cur_settings',0,'type',0])eq 'locale'){$stash->set('cur_default',$stash->get(['locale',0,'get_locale_name',[$stash->get(['cur_settings',0,'default',0])]]))}else {$stash->set('cur_default',$stash->get(['cur_settings',0,'default',0]))}$stash->set('select_html',$stash->get('select_html').'<br />' .$stash->get(['locale',0,'maketext',['System Default: [_1]',$stash->get('cur_default')]]))}if ($stash->get(['cur_settings',0,'exists',['pci' ]])){$stash->set('select_html',$stash->get('select_html').'<br />' .$stash->get(['locale',0,'maketext',['PCI Recommendation: [_1]',$stash->get(['cur_settings',0,'pci',0])]]))}$stash->set('select_html',$stash->get('select_html').'</div>');$stash->set('use_radio_buttons',$stash->get(['cur_settings',0,'allow_other',0]));if ($stash->get('use_radio_buttons')){$output .= ('<script type=\'text/javascript\'>tweak_controls.push( \'' .$stash->get('key').'\' )</script>');$output .= '<div class="brickcontainer">';$output .= ('<ul class=\'tweak_settings\' onclick=\'check_tweak_controls("' .$stash->get('key').'", true)\'>');$output .= '<li>' .('<input type=\'radio\' name=\'' .$stash->get('key').'_control\' value=\'\'').($stash->get('cur_option_in_options')? ' checked="checked"' : '').' />' .$stash->get('select_html').'</li>';if ($stash->get(['cur_settings',0,'exists',['maxlength' ]])&& $stash->get(['cur_settings',0,'maxlength',0])){$stash->set('input_size',(' size=\'' .$stash->get(['cur_settings',0,'maxlength',0]).'\''))}elsif ($stash->get(['cur_settings',0,'exists',['width' ]])&& $stash->get(['cur_settings',0,'width',0])){$stash->set('input_size',(' size=\'' .$stash->get(['cur_settings',0,'width',0]).'\''))}else {$stash->set('input_size','')}$output .= '<li>' .'<label>' .('<input type=\'radio\' name=\'' .$stash->get('key').'_control\' value=\'other\'').(!$stash->get('cur_option_in_options')? ' checked="checked"' : '').' />' .'Other:' .'</label>' .'&nbsp;' .('<input type=\'text\' ' .$stash->get('input_size').' id=\'' .$stash->get('key').'_other\' name=\'' .$stash->get('key').'_other\' value=\'' .$stash->get('formatted_value_enc').'\'').($stash->get('bootstrap')? ' class=\'form-control\'' : '').' />' .'</li>' .($stash->get('key')eq 'ETHDEV' ? '<br><i>' .$stash->get(['locale',0,'maketext',['Required' ]]).'</i>' : '');$output .= '</ul></div>'}else {$output .= $stash->get('select_html')}last SWITCH}$_tt_match=['radio','binary','inversebinary' ];$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){$stash->set('is_binary',$stash->get(['cur_settings',0,'type',0])eq 'binary' || $stash->get(['cur_settings',0,'type',0])eq 'inversebinary');$output .= '<div class="brickcontainer">';$output .= '<ul class="tweak_settings' .($stash->get('is_binary')? ' binary' : '').'">';$stash->set('cur_optionlabels',$stash->get(['cur_texts',0,'optionlabels',0])|| $stash->get(['cur_settings',0,'optionlabels',0]));if ($stash->get(['cur_settings',0,'exists',['options' ]])&& $stash->get('cur_optionlabels')){do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['cur_settings',0,'options',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR3: while (!$_tt_error){$stash->{'cur_option'}=$_tt_value;if ($stash->get(['ref',[$stash->get('cur_option')]])ne 'ARRAY' && $stash->get(['CPHash',0,'vmethod',['exists',$stash->get('cur_optionlabels'),$stash->get('cur_option')]])){$stash->set(['cur_settings',0,'options',0,$stash->get(['loop',0,'index',0]),0],[$stash->get(['cur_optionlabels',0,$stash->get('cur_option'),0]),$stash->get('cur_option')])};($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error}}$stash->set('radio_options',$stash->get(['cur_settings',0,'options',0])|| ($stash->get(['cur_settings',0,'type',0])eq 'inversebinary' ? [['On',0 ],['Off',1 ]]: [['On',1 ],['Off',0 ]]));do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('radio_options');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR3: while (!$_tt_error){$stash->{'cur_option'}=$_tt_value;if ($stash->get(['ref',[$stash->get('cur_option')]])eq 'ARRAY'){$stash->set('real_option',$stash->get(['cur_option',0,1,0]));$stash->set('disp_option',$stash->get(['cur_option',0,0,0]))}else {$stash->set('real_option',$stash->get('cur_option'));$stash->set('disp_option',$stash->get('cur_option'))}if ($stash->get(['cur_settings',0,'exists',['default' ]])&& $stash->get('real_option')eq $stash->get(['cur_settings',0,'default',0])){if ($stash->get('bootstrap')){$stash->set('spacer','&nbsp;')}else {$stash->set('spacer',$stash->get('is_binary')? '<br />' : '&nbsp;')}$stash->set('disp_option',$stash->get('disp_option').($stash->get('spacer').'<span class=\'').($stash->get('bootstrap')? 'label label-' : '').'default\'>default</span>')}if ($stash->get(['cur_settings',0,'exists',['pci' ]])&& $stash->get('real_option')eq $stash->get(['cur_settings',0,'pci',0])){$stash->set('spacer',$stash->get('is_binary')? '<br />' : '&nbsp;');$stash->set('disp_option',$stash->get('disp_option').($stash->get('spacer').'<span class=\'pci\'>PCI recommended</span>'))}$stash->set('radio_onclick_fn','checktweaks()');if (($stash->get('key')eq 'LOGSTYLE' && $stash->get('real_option')eq 'common')){$stash->set('radio_onclick_fn','promptBeforeSelection(\'' .$stash->get('key').'\', \'' .$stash->get('formatted_value').'\')')}$output .= ('<li><label><input type=\'radio\' id=\'' .$stash->get('key').'_' .$stash->get('real_option').'\' name=\'' .$stash->get('key').'\' value=\'' .$stash->get('real_option').'\'').($stash->get('real_option')eq $stash->get('formatted_value')? ' checked="checked"' : '').' onclick="' .$stash->get('radio_onclick_fn').';" />&nbsp;' .$stash->get('disp_option').'</label>' .'</li>';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '</ul></div>';last SWITCH}}};$output .= '</td>';$output .= ('' .'</tr>
');;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$context->include('_brick.tmpl',{'bootstrap'=>$stash->get('bootstrap'),'norow'=>1,'bricktitle'=>$stash->get('group').($stash->get('header_text')? (' ' .$stash->get('header_text')): ''),'brickid'=>'group_' .$stash->get('groupkey'),'brickclass'=>'settingsgroup','content',$output })};$output .= '</div>';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};if ($stash->get('make_tabs')){$output .= '<div id="tab_All"></div>'}$output .= '</div>';$output .= '


';if (!($stash->get('nocontainers'))){$output .= '</div>
</div>
</div>

<br />
<div class="clearit" style="clear:both; height: 1px; width: auto;">&nbsp;</div>

'}$output .= '
<script type="text/javascript">
function getQueryParamByName(name) {
    var query = window.location.search.substring(1);
    var parms = query.split(\'&\');
    for (var i = 0; i < parms.length; i++) {
        var pos = parms[i].indexOf(\'=\');
        if (pos > 0) {
            var key = parms[i].substring(0, pos);
            var val = parms[i].substring(pos + 1);
            if(key === name) {
                return val;
            }
        }
    }
    return "";
}
var _TSForm = ( typeof TweakForm == \'undefined\' )  //test if this is set
    ? document.forms[0]
    : TweakForm
;

function quick_popup_button(thisEl,thisTitle) {
    do_quick_popupbox({
                title:thisTitle,
                url:thisEl.href,
                iframe:true,
                buttons: { \'close\':1, \'save-iframe\':1 },
                showloading:1
            });

    return false;
}

//https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array/filter
function array_first( theArray, fun /* thisp*/) {
    var len = theArray.length >>> 0;
    if (typeof fun != "function")
        throw new TypeError();

    var res = new Array();
    var thisp = arguments[2];
    for (var i = 0; i < len; i++) {
        if (i in theArray) {
            var val = theArray[i];
            if (fun.call(thisp, val, i, theArray)) {
                return val;
            }
        }
    }

    return;
};


var requires = {};
var excludes = {};
var requires_tests = {};
var depends = {};
var default_values = {};
var current_config = ';$output .= $stash->get(['conf',0,'json',0]);$output .= ";\nvar _help_opened = {};\nvar _help_animating = {};\nfunction showhelp(tid) {\n    if ( _help_animating[tid] ) return;\n\n    _help_animating[tid] = true;\n\n    var help_el = document.getElementById('help-' + tid);\n    var is_displayed = YAHOO.util.Dom.getRegion( help_el );\n\n    var label_el = document.getElementById('label-' + tid);\n\n    var slide;\n    if ( is_displayed ) {\n        slide = CPANEL.animate.slide_up(help_el);\n    }\n    else {\n        if ( !(tid in _help_opened) ) {\n            var td = document.getElementById('labelhelp-' + tid);\n            DOM.setStyle(td, 'padding-top', label_el.offsetTop + 'px');\n            DOM.setStyle(td, 'vertical-align', 'top');\n\n            var parent_width = CPANEL.dom.get_content_width( help_el.parentNode.offsetParent );\n            var extra_left = parseFloat( DOM.getStyle( help_el, \"margin-left\" ) ) || 0\n                + parseFloat( DOM.getStyle( help_el, \"border-left-width\" ) ) || 0\n                + parseFloat( DOM.getStyle( help_el, \"padding-left\" ) ) || 0\n            ;\n            var extra_right = parseFloat( DOM.getStyle( help_el, \"margin-right\" ) ) || 0\n                + parseFloat( DOM.getStyle( help_el, \"border-right-width\" ) ) || 0\n                + parseFloat( DOM.getStyle( help_el, \"padding-right\" ) ) || 0\n            ;\n            help_el.style.width = ( parent_width - extra_left - extra_right ) + \"px\";\n            _help_opened[tid] = 1;\n        }\n\n        slide = CPANEL.animate.slide_down(help_el);\n    }\n\n    slide.onComplete.subscribe( function() { delete _help_animating[tid] } );\n}\nfunction getoptval(tid) {\n    var El = DOM.get(tid);\n\n    if ( _TSForm[ tid + '_control' ] ) {  //control radio buttons\n        var inputs = _TSForm[ tid + '_control' ];\n        var checked = array_first( inputs, function(i) { return i.checked } );\n\n        if ( checked === undefined || checked.value == 'undef' ) {\n            return false;\n        }\n        else if ( ( ! checked.value ) || checked.value == '0' ) {\n            return 0;\n        }\n        else if ( checked.value == 'default' ) {\n            return default_values[ tid ];\n        }\n        else if ( checked.value == 'other' ) {\n            return _TSForm[ tid + '_other' ].value;\n        }\n        else {\n            return 1;\n        }\n    }\n    else if ( El ) {\n        if (El.getAttribute('type') == 'text') { return El.value }\n    }\n    else {  //radio buttons\n        var inputs = _TSForm[ tid ];\n        if (inputs) {\n            var checked = array_first( inputs, function(i) { return i.checked } );\n\n            return ( ( ! checked ) || ( ! checked.value ) || ( checked.value == '0' ) )\n                ? false\n                : checked.value\n            ;\n        }\n    }\n\n    if (current_config.hasOwnProperty(tid)) {\n      return current_config[tid];\n    }\n    return undefined;\n}\n\nfunction enable_control( key ) {\n    var control_buttons = _TSForm[ key + '_control' ];\n    var control_value;\n    if ( control_buttons ) {\n        for ( var c=0, ctl; ctl = control_buttons[c]; c++ ) {\n            ctl.disabled = false;\n\n            if ( ctl.checked ) {\n                control_value = ctl.value;\n            }\n        }\n    }\n\n    var controls = _TSForm[key];\n    if ( controls[0] ) {\n        for ( var c=0, ctl; ctl = controls[c]; c++ ) {\n            ctl.disabled = false;\n        }\n    }\n    else if ( ! control_value ) {  //undefined, or empty string\n        controls.disabled = false;\n    }\n\n    var container = document.getElementById( key + '_container' );\n    var revert = document.getElementById( key + '_revert' );\n\n    var container_class = container.className.split(/\\s+/);\n    var new_class = [];\n    for ( var c=0, cl; cl = container_class[c]; c++ ) {\n        if ( cl != 'disabled' ) {\n            new_class.push( cl );\n        }\n    }\n    container.className = new_class.join(' ');\n\n    if ( revert ) {\n        revert.disabled = false;\n    }\n}\n\nfunction disable_control( key ) {\n    var controls = _TSForm[key];\n    if ( controls[0] ) {\n        for ( var c=0, ctl; ctl = controls[c]; c++ ) {\n            ctl.disabled = true;\n        }\n    }\n    else {\n        controls.disabled = true;\n    }\n\n    var control_buttons = _TSForm[ key + '_control' ];\n    if ( control_buttons ) {\n        for ( var c=0, ctl; ctl = control_buttons[c]; c++ ) {\n            ctl.disabled = true;\n        }\n    }\n\n    var container = document.getElementById(key + '_container');\n    var revert = document.getElementById( key + '_revert' );\n\n    if ( ! container.className.match( /(?:^|\\s)disabled(?:\$|\\s)/ ) ) {\n        container.className = container.className.split(/\\s+/).concat('disabled').join(' ');\n    }\n\n    if ( revert ) {\n        revert.disabled = true;\n    }\n}\n\n//disables a control explicitly, not because something else is set\nfunction set_disable( checkbox, key ) {\n    var control = document.getElementById( key );\n    control.disabled = checkbox.checked;\n}\n\nfunction set_value( key, value ) {\n    var control = document.getElementById( key );\n    var disabler = document.getElementById( key + '_undef' );\n\n    if ( value !== false ) {\n        control.value = value;\n    }\n\n    if ( disabler ) {\n        disabler.checked = ( value === false );\n        control.disabled = ( value === false );\n    }\n}\n\nfunction checktweaks() {\n    var showdb = {};\n    for (var requirer in requires) {\n        var showcol=1;\n        for(var requiree in requires[requirer]) {\n            var optval = getoptval( requiree );\n            if ( optval || optval === '' ) {\n                showcol=1;\n            } else {\n                showcol=0;\n                break;\n            }\n        }\n        showdb[requirer]=showcol;\n    }\n    for(var key in requires_tests) {\n        var req = requires_tests[key].req;\n        var testop = requires_tests[key].testop;\n        var op = requires_tests[key].op;\n        if (req.match(/^\\\$/)) {\n            req = getoptval(req.replace(/^\\\$/,''));\n        }\n        if (op.match(/^\\\$/)) {\n            op = getoptval(op.replace(/^\\\$/,''));\n        }\n        var result = eval('\"' + req + '\" ' + testop + ' \"' + op + '\"');\n        if (result && showdb[key] != 0) { /*from above*/\n            showdb[key]=1;\n        } else {\n            showdb[key]=0;\n        }\n    }\n    for(var excludee in excludes) {\n        var showcol=1;\n        for(var excluder in excludes[excludee]) {\n            var optval = getoptval( excluder );\n            if ( ( optval && optval !== '0' ) || optval === '' ) {\n                showcol=0;\n                break;\n            } else {\n                showcol=1;\n            }\n        }\n        if (showdb[excludee] != 0) {\n            showdb[excludee]=showcol;\n        }\n    }\n    for (var key in depends ) {\n        for ( var dep in depends[key] ) {\n            check_depends(dep);\n        }\n    }\n\n    for (var key in showdb) {\n      if (showdb[key] == 1) {\n          enable_control( key );\n      } else if (showdb[key] == 0) {\n          disable_control( key );\n      }\n    }\n    return false;\n}\n\n/* Check for dependencies declared in the tweaksetting's YAML entry/iContact schema module */\nfunction check_depends(thing) {\n    if(!thing) return false;\n    var elem = document.getElementById(thing);\n    var deps = Object.keys(depends[thing]);\n\n    /*XXX what if it is a radio, etc.? not sure what to do there, as there's no 'value'. */\n    var invalid = 0;\n    for( var i = 0; i < deps.length; i++ ) {\n        var chainedElem = document.getElementById(deps[i]);\n\n        /* If the dependent element doesn't exist, just ignore it, the developer probably did something silly */\n        if( !chainedElem ) continue;\n        var submitBtn = document.querySelector('input[type=\"submit\"]');\n        if( !submitBtn ) {\n            /* Give it a second to figure it out */\n            window.setTimeout(function() { check_depends(thing); }, 1000 );\n        } else {\n            if( !chainedElem.value && elem.value ) {\n                submitBtn.disabled = true;\n                document.getElementById( deps[i] + \"_container\").classList.add(\"invalid\");\n            } else if( chainedElem.value && !elem.value ) {\n                submitBtn.disabled = true;\n                document.getElementById( thing + \"_container\").classList.add(\"invalid\");\n            } else {\n                submitBtn.disabled = false;\n                document.getElementById( deps[i] + \"_container\").classList.remove(\"invalid\");\n                document.getElementById( thing + \"_container\").classList.remove(\"invalid\");\n            }\n        }\n    }\n\n    return false;\n}\n\nvar confirm_panel;\nfunction promptBeforeSelection(tweakKey, lastValue){\n    var promptMessage = \"\";\n    var promptHeaderText = \"\";\n    // Add messages\n    if(tweakKey === \"LOGSTYLE\"){\n        promptMessage = LOCALE.maketext(\"If you select the “[_1]” log style, your website’s stats may no longer function. Are you sure that you wish to continue?\", \"COMMON\");\n        promptHeaderText = LOCALE.maketext(\"[_1][comment,proper name] selection\", \"Apache LOGSTYLE\");\n    }\n\n    if (!confirm_panel) {\n        var panel_options = {\n            width: \"500px\",\n            fixedcenter: true,\n            close: true,\n            draggable: false,\n            modal: true,\n            visible: true\n        };\n        confirm_panel = new YAHOO.widget.Panel(\"promptBeforeSelect\", panel_options);\n        confirm_panel.render();\n        YAHOO.util.Event.addListener(\"promptCancel\", \"click\", function () {\n            var previousEl = DOM.get(tweakKey + \"_\" + lastValue);\n            if(previousEl.type === \"radio\" || previousEl.type === \"checkbox\"){\n                previousEl.checked = true;\n            }\n            confirm_panel.hide();\n        }, tweakKey, lastValue);\n    }\n    document.getElementById(\"promptHd\").innerHTML = promptHeaderText;\n    document.getElementById(\"promptBd\").innerHTML = promptMessage;\n    YAHOO.util.Event.removeListener(\"promptOk\", \"click\");\n    YAHOO.util.Event.addListener(\"promptOk\", \"click\", function () {\n        confirm_panel.hide();\n        checktweaks();\n    });\n    confirm_panel.show();\n}\n\nfunction register_requires_test(key,req,testop,op) {\n    requires_tests[key] = {\n                    req: req,\n                    testop: testop,\n                    op: op\n                };\n}\nfunction register_exclude(key,exclude) {\n    if (!excludes[key]) { excludes[key] = {}; }\n    excludes[key][exclude]=1;\n}\n\nfunction register_requires(key,req) {\n    if (!requires[key]) { requires[key] = {}; }\n    requires[key][req]=1;\n}\n\nfunction register_depends(key,dep) {\n    if (!depends[key]) { depends[key] = {}; }\n    depends[key][dep] = 1;\n    return false;\n}\n\nvar selected_input;\nfunction check_tweak_controls( var_name, to_focus ) {\n    var radio_buttons = _TSForm[ var_name + '_control' ];\n\n    for (var r=0, rb; rb = radio_buttons[r]; r++) {\n        var to_disable = ! rb.checked;\n\n        var li_parent = YAHOO.util.Dom.getAncestorByTagName( rb, 'li' );\n        var inputs = li_parent.getElementsByTagName('input');\n        var selects = li_parent.getElementsByTagName('select');\n\n        for ( var i=0, cur_input; cur_input = inputs[i]; i++ ) {\n            if ( cur_input != rb ) {\n                cur_input.disabled = to_disable;\n                if ( to_focus && !to_disable && cur_input != selected_input ) {\n                    var cur_type = cur_input.type.toLowerCase();\n                    if ( cur_type == 'text' || cur_type == 'password' ) {\n                        cur_input.focus();\n                        cur_input.select();\n                        selected_input = cur_input;\n                    }\n                }\n            }\n        }\n\n        for ( var s=0, cur_select; cur_select = selects[s]; s++ ) {\n            cur_select.disabled = to_disable;\n            if ( to_focus && !to_disable && cur_select != selected_input ) {\n                cur_select.focus();\n                selected_input = cur_select;\n            }\n        }\n    }\n}\n\nfor ( var tc=0; tc < tweak_controls.length; tc++ ) {\n    check_tweak_controls( tweak_controls[tc], false );  //disable auto-focusing\n}\n\nfunction setAllTabVisibility (tabView,setting) {\n    var len;\n    var tabs = tabView.get('tabs');\n    for (var i = 0, len = tabs.length; i < len; i++) {\n        tabs[i].set('contentVisible',setting,true);\n        var thead = tabs[i].get('contentEl').getElementsByTagName('thead');\n        if (thead && thead[0]) {\n            (thead[0].getElementsByTagName('tr'))[0].style.display=(setting ? '' : 'none');\n        }\n    }\n}\n\nvar tweakTabs;\n\n/* Search Code Starts Here */\n\nvar insearch = 0;\nvar idgen = 0;\nvar ElementTextCache = {};\nvar tblParentCache = {};\nvar searchCells = [];\n\nfunction searchpage(searchBoxEl) {\n    var searchText = searchBoxEl.value.toLowerCase();\n\n    if (searchText) {\n        document.getElementById('clearlnk').style.display='';\n    } else {\n        insearch=0;\n        document.getElementById('clearlnk').style.display='none';\n    }\n\n    var matchCount = 0;\n    var cur_tbl_match_count = 0;\n    var allParentHeaders = {};\n    var matchedParentUls = {};\n\n";if ($stash->get('make_tabs')){$output .= '    if (!insearch) {
        if (tweakTabs.get(\'activeTab\').get(\'label\') != "All") {
            var tabs = tweakTabs.get(\'tabs\');
            tweakTabs.set(\'activeIndex\', 0);
        }
        insearch=1;
    }
'}$output .= "\n    var last_tbl_parent = null;\n    for(var i = 0;i < searchableElements.length;i++) {\n        var cur_elem = searchableElements[i];\n        var innerText;\n        if (!ElementTextCache[cur_elem.id] || ElementTextCache[cur_elem.id] == \"\") {\n            var AddedsearchText = cur_elem.getAttribute('searchtext');\n            innerText = cur_elem.innerHTML.replace(/\\<[^\\>]+\\>/g,'');\n            if (AddedsearchText) { innerText += \" \" + AddedsearchText; }\n            innerText += \" \" + cur_elem.id.replace(/_container\$/,'');\n            innerText = innerText.toLowerCase();\n            ElementTextCache[cur_elem.id] = innerText;\n        } else {\n            innerText = ElementTextCache[cur_elem.id];\n        }\n        var tblParent = getTblParent(cur_elem);\n        allParentHeaders[tblParent.id] = tblParent;\n        if ( tblParent !== last_tbl_parent ) cur_tbl_match_count = 0;\n        if (innerText.match(searchText)) {\n            matchCount++;\n            cur_tbl_match_count++;\n            matchedParentUls[tblParent.id] = 1;\n            YAHOO.util.Dom.removeClass(cur_elem,'searchhide');\n\n            if ( cur_tbl_match_count % 2 ) {\n                DOM.addClass(cur_elem, 'tdshade1_noborder');\n                DOM.removeClass(cur_elem, 'tdshade2_noborder');\n            }\n            else {\n                DOM.addClass(cur_elem, 'tdshade2_noborder');\n                DOM.removeClass(cur_elem, 'tdshade1_noborder');\n            }\n        } else {\n            YAHOO.util.Dom.addClass(cur_elem,'searchhide');\n        }\n        last_tbl_parent = tblParent;\n    }\n\n    document.getElementById('gosearch').style.display=(matchCount == 0 ? '' : 'none');\n\n    for(var i in allParentHeaders) {\n        if (matchedParentUls[i]) {\n            YAHOO.util.Dom.removeClass(allParentHeaders[i],'searchhide');\n        } else {\n            YAHOO.util.Dom.addClass(allParentHeaders[i],'searchhide');\n        }\n    }\n\n";if (!($stash->get('this_is_ie6'))){$output .= '    adjust_scroll();
'}$output .= '}



function getTblParent(tagEl) {
    if (!tagEl.id) {
        tagEl.id = \'idgen\' + idgen++;
    }
    if (tblParentCache[tagEl.id]) { return tblParentCache[tagEl.id]; }

    var parent_row = YAHOO.util.Dom.getAncestorByTagName( tagEl, \'table\' ).rows[0];
    tblParentCache[tagEl.id] = parent_row;
    return parent_row;
}

function clearsearch() {
    var quickJumpEl = document.getElementById(\'quickjump\');
    quickJumpEl.value=\'\';
    searchpage(quickJumpEl);
    insearch=0;
}
/* Search Code Ends Here */

var EU = YAHOO.util.Event;


';$output .= $stash->get('extrascript');$output .= '

function init_tweaks () {
';if ($stash->get('make_tabs')){$output .= '    tweakTabs = new YAHOO.widget.TabView(\'tweaktabs\');

    tweakTabs.addTab(
        new YAHOO.widget.Tab( { label: \'All\', active: true } ),
        0
    );

    tweakTabs.on(\'beforeActiveTabChange\', function(e) {
            insearch=0;
            if (e.prevValue.get(\'label\') == "All") {
                clearsearch();
                setAllTabVisibility(tweakTabs,false);
            }

            });

    tweakTabs.on(\'activeTabChange\', function(e) {
            insearch=0;
            if (e.newValue.get(\'label\') == "All") {
                setAllTabVisibility(tweakTabs,true);
            }
            });
    setAllTabVisibility(tweakTabs,true);
'}$output .= '
    var alltweaksEl = YAHOO.util.Dom.get(\'alltweaks\');
    searchableElements = alltweaksEl.getElementsByTagName(\'tr\');

    checktweaks();
    var quickJumpEl = document.getElementById(\'quickjump\');

    var stop_propagation = function(e) {
        var key_code = YAHOO.util.Event.getCharCode(e);
        if ( key_code == 13 ) YAHOO.util.Event.preventDefault(e);
    };

    YAHOO.util.Event.addListener( quickJumpEl, \'keypress\', stop_propagation );
    YAHOO.util.Event.addListener( quickJumpEl, \'keydown\',  stop_propagation );

    ';if ($stash->get(['Whostmgr',0,'FORM',0,'find',0])){$output .= '

        quickJumpEl.value = ';$output .= $stash->get(['Whostmgr',0,'FORM',0,'find',0,'json',0]);$output .= ';
        searchpage(quickJumpEl);

    '}$output .= '

    try { quickJumpEl.focus(); } catch(e) {
        //love IE
    }

    // Reset the search focus after the navigation area finishes loading.
    // We wrap the call here in a setTimeout without a time so that
    // the javascript is executed on the next available cycle.
    window.addEventListener("content-container-init", function() {
        window.setTimeout(function() {
            quickJumpEl.focus();
        });
    });
    ';if ($stash->get('make_tabs')){$output .= "\n    var tabs = tweakTabs.get(\"tabs\");\n\n    var preTab = getQueryParamByName('active_tab') || false;\n    if(preTab){\n        var re = new RegExp(\"^tab_\" + preTab.trim() + \"\$\" , \"i\");\n        for(var i = 0; i < tabs.length; i++){\n            if(re.test(tabs[i].get(\"contentEl\").id) !== false){\n                tweakTabs.set('activeIndex', i);\n                break;\n            }\n        }\n    }\n    "}$output .= '
}

init_tweaks();


';if (!($stash->get('this_is_ie6')||!$stash->get('make_tabs'))){$output .= "//YAHOO.util.Dom.getRegion does not include margins\nfunction getRegionWithMargins( el ) {\n    el = DOM.get(el);\n\n    var get_float_from_style = function( style ) {\n        var raw_style = DOM.getStyle( el, style );\n        if ( !raw_style || !YAHOO.lang.isString(raw_style) ) {\n            return;\n        }\n\n        var match = raw_style.match( /(\\d+(?:\\.\\d+)?)([a-z]+)/ );\n        if ( !match ) return;\n\n        var unit = match[2];\n        var pixels;\n        if ( unit == 'em' ) {\n            if ( ! CPANEL._dummy_div ) {\n                var dummy_div = document.createElement('div');\n                CPANEL._dummy_div = dummy_div;\n\n                DOM.setStyle( dummy_div, 'position', 'absolute' );\n                DOM.setStyle( dummy_div, 'visibility', 'hidden' );\n                DOM.setStyle( dummy_div, 'height', '1px' );\n                document.body.appendChild( dummy_div );\n            }\n\n            DOM.setStyle( CPANEL._dummy_div, 'width', raw_style );\n            pixels = DOM.getRegion( CPANEL._dummy_div ).width;\n        }\n        else {\n            pixels = parseFloat( match[0] );\n        }\n\n        return pixels;\n    };\n\n    var base_region = DOM.getRegion(el);\n\n    var margin_top    = get_float_from_style( 'margin-top'    ) || 0;\n    var margin_right  = get_float_from_style( 'margin-right'  ) || 0;\n    var margin_bottom = get_float_from_style( 'margin-bottom' ) || 0;\n    var margin_left   = get_float_from_style( 'margin-left'   ) || 0;\n\n    var new_region = new YAHOO.util.Region(\n        base_region.top    - margin_top,\n        base_region.right  + margin_right,\n        base_region.bottom + margin_bottom,\n        base_region.left   - margin_left\n    );\n\n    return new_region;\n};\n\n\nvar scrolling_tabs = document.getElementById('scrolling_tabs');\nvar tabs_list = document.getElementById('yui_tabs');\n\nvar scroll_content_copy = tabs_list.cloneNode(true);\nYAHOO.util.Dom.setStyle( scroll_content_copy, 'position',   'absolute' );\nYAHOO.util.Dom.setStyle( scroll_content_copy, 'visibility', 'hidden'   );\nscrolling_tabs.appendChild( scroll_content_copy );\nvar scroll_width = YAHOO.util.Dom.getRegion( scroll_content_copy ).width;\nscroll_content_copy.parentNode.removeChild( scroll_content_copy );\n\nif ( 'addEventListener' in scrolling_tabs ) {\n    scrolling_tabs.addEventListener( 'DOMMouseScroll', function(e) {\n        if ( max_scroll > 0 ) {\n            scroll_by( e.detail );\n            blink_buttons_with_wheel( e.detail )\n            e.preventDefault(); e.stopPropagation();\n        }\n    }, false );\n    scrolling_tabs.addEventListener( 'mousewheel', function(e) {\n        if ( max_scroll > 0 ) {\n            var scroll_distance = e.wheelDelta / -40;\n            scroll_by( scroll_distance );\n            blink_buttons_with_wheel( scroll_distance )\n            e.preventDefault(); e.stopPropagation();\n        }\n    }, false );\n}\nelse {\n    scrolling_tabs.onmousewheel = function() {\n        if ( max_scroll > 0 ) {\n            var scroll_distance = window.event.wheelDelta / -20 * scale;\n            scroll_by( scroll_distance );\n            blink_buttons_with_wheel( scroll_distance )\n            return false;\n        }\n    };\n}\n\nvar scroll_button_class_remover = null;\nfunction blink_buttons_with_wheel( reported_delta ) {\n    if ( cur_pos <= 0 && reported_delta < 0 ) {\n        return false;\n    }\n    if ( cur_pos >= max_scroll && reported_delta > 0 ) {\n        return false;\n    }\n\n    var active_button = ( reported_delta > 0 )\n        ? right_scroll_button\n        : left_scroll_button\n    ;\n\n    DOM.addClass( active_button, 'scrolling' );\n\n    //wait to see when the scroll wheel stops moving\n    if ( ! scroll_button_class_remover ) {\n        var old_pos = -1;\n        scroll_button_class_remover = function() {\n            if ( old_pos == cur_pos ) {\n                DOM.removeClass( active_button, 'scrolling' );\n                scroll_button_class_remover = null;\n            }\n            else {\n                old_pos = cur_pos;\n                setTimeout( scroll_button_class_remover, 60 );\n            }\n        };\n        scroll_button_class_remover();\n    }\n}\n\nvar left_scroll_button = document.getElementById('left_scroll_button');\nvar right_scroll_button = document.getElementById('right_scroll_button');\n\nvar left_scroller_total_region = getRegionWithMargins( left_scroll_button );\nvar right_scroller_total_region = getRegionWithMargins( right_scroll_button );\n\nvar fixed_right_scroller_pos = left_scroller_total_region.width + scroll_width;\nvar find_area_threshold = fixed_right_scroller_pos + right_scroller_total_region.width;\n\nvar cur_pos = 0;\nvar scale = 1.5;\nvar max_scroll;\nfunction adjust_scroll() {\n    var find_total_region = getRegionWithMargins( 'find_container' );\n    var old_scroll = max_scroll;\n\n    max_scroll = scroll_width - YAHOO.util.Dom.getRegion( scrolling_tabs ).width + 1;\n\n    var difference = max_scroll - old_scroll;\n    if ( cur_pos > 0 && difference < 0 ) {\n        scroll_by( difference );\n    }\n    else if ( right_scroll_button_inactive ) {\n        right_scroll_button_activate();\n    }\n};\nadjust_scroll();\nwindow.onresize = adjust_scroll;\n\nvar right_scroll_button_inactive = false;\nvar right_scroll_button_activate = function() {\n    DOM.removeClass( right_scroll_button, 'inactive' );\n    right_scroll_button_inactive = false;\n}\nvar right_scroll_button_deactivate = function() {\n    DOM.addClass( right_scroll_button, 'inactive' );\n    right_scroll_button_inactive = true;\n}\n\nfunction scroll_by( pixel_increment, window_drag ) {\n    if ( cur_pos <= 0 ) {\n        if ( pixel_increment < 0 ) {\n            return false;\n        }\n        else if ( cur_pos + pixel_increment > 0 ) {\n            DOM.removeClass( left_scroll_button, 'inactive' );\n        }\n    }\n    if ( cur_pos >= max_scroll ) {\n        if ( pixel_increment > 0 ) {\n            return false;\n        }\n        else if ( cur_pos + pixel_increment < max_scroll ) {\n            right_scroll_button_activate();\n        }\n    }\n\n    var new_pos;\n    if ( cur_pos > 0 && cur_pos + pixel_increment <= 0 ) {\n        new_pos = 0;\n        DOM.addClass( left_scroll_button, 'inactive' );\n    } else if ( cur_pos < max_scroll && cur_pos + pixel_increment >= max_scroll ) {\n        new_pos = max_scroll;\n        right_scroll_button_deactivate();\n    }\n    else {\n        new_pos = cur_pos + pixel_increment;\n    }\n\n    YAHOO.util.Dom.setStyle( tabs_list, 'left', ( -1 * new_pos ) + 'px' );\n    cur_pos = new_pos;\n\n    return pixel_increment;\n}\n\nvar mousedown_scroll = 0;\nfunction start_scroll( scroll_left ) {\n    var old_pos = cur_pos;\n\n    mousedown_scroll = scroll_left ? -1 : 1;\n    var increment = mousedown_scroll * scale * 2;\n\n    var recursive_scroll = function() {\n        var ok_to_scroll = scroll_left ? (cur_pos > 0) : (cur_pos < max_scroll);\n        if ( mousedown_scroll != 0 && ok_to_scroll ) {\n            scroll_by( increment );\n            setTimeout( recursive_scroll, 8 );\n        }\n    };\n\n    recursive_scroll();\n\n}\nfunction stop_scroll() {\n    mousedown_scroll = 0;\n}\n\nleft_scroll_button.onmousedown = function() {\n    DOM.addClass( left_scroll_button, 'scrolling' );\n    start_scroll( true );\n};\nleft_scroll_button.onmouseout = function() {\n    DOM.removeClass( left_scroll_button, 'scrolling' );\n    stop_scroll();\n};\nleft_scroll_button.onmouseup = left_scroll_button.onmouseout;\n\nright_scroll_button.onmousedown = function() {\n    DOM.addClass( right_scroll_button, 'scrolling' );\n    start_scroll( false );\n};\nright_scroll_button.onmouseout = function() {\n    DOM.removeClass( right_scroll_button, 'scrolling' );\n    stop_scroll();\n};\nright_scroll_button.onmouseup = right_scroll_button.onmouseout;\n"}$output .= '
</script>
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});