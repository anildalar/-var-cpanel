Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/etc/icontact_templates/cPHulk/Login.html.tmpl',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '
';$output .= $context->process('include/colors.tmpl');$output .= $context->process('include/styles.tmpl');$output .= $context->process('include/blacklist_whitelist_links.tmpl');$output .= $context->process('include/icons.tmpl');$output .= do {my$output='';if ($stash->get(['NOTICE',0,'is_root',0])){if ($stash->get(['NOTICE',0,'is_local',0])){$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['get_icon',[{'icon'=>'local_network' }]]).' ' .$stash->get(['CPANEL',0,'locale',0,'maketext',['Successful [asis,root] Login from Local Machine' ]]))}elsif ($stash->get(['NOTICE',0,'known_netblock',0])){$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['get_icon',[{'icon'=>'known_network' }]]).' ' .$stash->get(['CPANEL',0,'locale',0,'maketext',['Successful [asis,root] Login from a Known Network' ]]))}else {$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['get_icon',[{'icon'=>'unknown_network' }]]).' ' .$stash->get(['CPANEL',0,'locale',0,'maketext',['Successful [asis,root] Login from an Unknown Network' ]]))}}else {if ($stash->get(['NOTICE',0,'is_local',0])){$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['get_icon',[{'icon'=>'local_network' }]]).' ' .$stash->get(['CPANEL',0,'locale',0,'maketext',['Successful Login as “[_1]” from Local Machine',$stash->get(['NOTICE',0,'user',0])]]))}elsif ($stash->get(['NOTICE',0,'known_netblock',0])){$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['get_icon',[{'icon'=>'known_network' }]]).' ' .$stash->get(['CPANEL',0,'locale',0,'maketext',['Successful Login as “[_1]” from a Known Network',$stash->get(['NOTICE',0,'user',0])]]))}else {$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['get_icon',[{'icon'=>'unknown_network' }]]).' ' .$stash->get(['CPANEL',0,'locale',0,'maketext',['Successful Login as “[_1]” from an Unknown Network',$stash->get(['NOTICE',0,'user',0])]]))}}$output .= '
';$stash->set('zebra_login',0);$output .= '

<table style="
    margin: 5px 10px;
    border: 2px solid ';$output .= $stash->get('medium_gray');$output .= ';
    padding: 0;
    max-width: ';$output .= $stash->get('content_width')- 20;$output .= 'px"
    cellpadding="5" cellspacing="0">
    <tbody>
        <tr style="background-color:';$output .= $stash->get('zebra_login')? $stash->get('light_gray'): $stash->get('white');$output .= '">
            ';$stash->set('zebra_login',!$stash->get('zebra_login'));$output .= '
            <th align="left">
                ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['Domain' ]]);$output .= ':
            </th>
            <td align="left">
                ';$output .= $stash->get(['NOTICE',0,'user_domain',0]);$output .= '
            </td>
        </tr>
    ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'report',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'item'}=$_tt_value;$output .= '
        <tr style="background-color:';$output .= $stash->get('zebra_login')? $stash->get('light_gray'): $stash->get('white');$output .= '">
            ';$stash->set('zebra_login',!$stash->get('zebra_login'));$output .= '
            <th align="left">
                ';$output .= $stash->get(['item',0,'name',0]);$output .= ':
            </th>
            <td align="left">
                ';$output .= $stash->get(['item',0,'value',0]);$output .= '

            </td>
        </tr>
    ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
    <tr style="background-color:';$output .= $stash->get('zebra_login')? $stash->get('light_gray'): $stash->get('white');$output .= '">
        ';$stash->set('zebra_login',!$stash->get('zebra_login'));$output .= '
        <th align="left">
            ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['Known Network †' ]]);$output .= ':
        </th>
        <td align="left">
            ';if ($stash->get(['NOTICE',0,'is_local',0])){$output .= '
               ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['Yes' ]]);$output .= '
               ';$output .= $stash->get(['get_icon',[{'icon'=>'local_network' }]]);$output .= '
            '}elsif ($stash->get(['NOTICE',0,'known_netblock',0])){$output .= '
               ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['Yes' ]]);$output .= '
               ';$output .= $stash->get(['get_icon',[{'icon'=>'known_network' }]]);$output .= '
            '}else {$output .= '
               ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['No' ]]);$output .= '
               ';$output .= $stash->get(['get_icon',[{'icon'=>'unknown_network' }]]);$output .= '
            '}$output .= '
        </td>
    </tr>
    </tbody>
</table>

<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['† A “Known Network” is an [output,abbr,IP,Internet Protocol] address range or netblock that contains an [output,abbr,IP,Internet Protocol] address from which a user successfully logged in previously.' ]]);$output .= '
</p>

';if ($stash->get(['NOTICE',0,'is_root',0])){$output .= '
    <p>
        ';$output .= $stash->get(['blacklist_whitelist_table',[{'blacklist_ips'=>$stash->get(['NOTICE',0,'blacklist_ips',0]),'whitelist_ips'=>$stash->get(['NOTICE',0,'whitelist_ips',0])}]]);$output .= '
    </p>

    <p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['To configure your [asis,Brute Force Protection] settings, use [asis,WHM]’s [_1] interface at: [output,url,_2,_2,target,_3]',$stash->get(['CPANEL',0,'locale',0,'maketext',['[asis,cPHulk] Brute Force Protection' ]]),$stash->get(['CPANEL',0,'assemble_whm_url',['scripts7/cphulk/config' ]]),'_blank' ]]);$output .= '
    </p>
'}$output .= '



';$context->include('wrapper/main.html.tmpl',{'content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});