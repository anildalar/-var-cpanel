Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/etc/icontact_templates/Market/SSLWebInstall.html.tmpl','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '
';$output .= $context->process('include/colors.tmpl');$output .= $context->process('include/styles.tmpl');$output .= $context->process('include/zebra_table.tmpl');$output .= $context->process('include/code_block.tmpl');$output .= do {my$output='';$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['CPANEL',0,'locale',0,'maketext',['[_1]: [asis,SSL] certificate installed!',$stash->get(['NOTICE',0,'vhost_name',0])]]));$output .= '

<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The system has retrieved and installed an [output,abbr,SSL,Secure Sockets Layer] certificate that you ordered from “[_1]” in order “[_2]”, order item “[_3]”.',$stash->get(['NOTICE',0,'provider_display_name',0,'html',0]),$stash->get(['NOTICE',0,'order_id',0,'html',0]),$stash->get(['NOTICE',0,'order_item_id',0,'html',0])]]);$output .= '    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The certificate is now active on the website for the following domain names:' ]]);$output .= '
</p>

<ul>
    ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'vhost_domains',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'d'}=$_tt_value;$output .= '        <li>
            <a href="https://';$output .= $stash->get(['d',0,'name',0,'html',0]);$output .= '">';$output .= $stash->get(['d',0,'name',0,'html',0]);$output .= '</a>
            ';if (!$stash->get(['d',0,'covered',0])){$output .= '
                ';$stash->set('not_every_domain_is_covered',1);$output .= '                &#x26d4;
            '}$output .= '
        </li>
    ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '</ul>

';if ($stash->get('not_every_domain_is_covered')){$output .= '<p>
';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['NOTE: “[_1]” marks domains that the newly-installed certificate does not include or secure. Visitors who access these domain names will see web browser security warnings.','&#x26d4;' ]]);$output .= '</p>
'}$output .= '
';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The certificate has the following properties:' ]]);$output .= '
';$stash->set('distinguished_name',sub {my$_tt_params=$_[0]if ref($_[0])eq 'HASH';my$output='';my$stash=$context->localise($_tt_params);eval {$output .= '    <dl class="distinguished-name" style="margin-bottom: 0">
        ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('parts');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'part'}=$_tt_value;$output .= '            <dt>';$output .= $stash->get(['part',0,0,0,'html',0]);$output .= '</dt>
            <dd>';$output .= $stash->get(['part',0,1,0,'html',0]);$output .= '</dd>
        ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '    </dl>'};$stash=$context->delocalise();die $@ if $@;return$output});$output .= '
';$stash->set('domains_list',sub {my$_tt_params=$_[0]if ref($_[0])eq 'HASH';my$output='';my$stash=$context->localise($_tt_params);eval {$output .= '    <ul class="domains-list" style="margin-bottom: 0">
        ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('domains');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'d'}=$_tt_value;$output .= '            <li>';$output .= $stash->get(['d',0,'html',0]);$output .= '</li>
        ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '    </ul>'};$stash=$context->delocalise();die $@ if $@;return$output});$output .= '
';$output .= $stash->get(['zebra_table',[{'boldfirst'=>1,'items'=>[[$stash->get(['CPANEL',0,'locale',0,'maketext',['Product Name:' ]]),$stash->get(['NOTICE',0,'product_name',0,'html',0])],[$stash->get(['CPANEL',0,'locale',0,'maketext',['Expiration:' ]]),$stash->get(['CPANEL',0,'locale',0,'datetime',[1 + $stash->get(['NOTICE',0,'certificate',0,'not_after',0]),'datetime_format_full' ]])],[$stash->get(['CPANEL',0,'locale',0,'maketext',['Domain Names:' ]]),$stash->get(['domains_list',[{'domains'=>$stash->get(['NOTICE',0,'certificate',0,'domains',0])}]])],[$stash->get(['CPANEL',0,'locale',0,'maketext',['Subject:' ]]),$stash->get(['distinguished_name',[{'parts'=>$stash->get(['NOTICE',0,'certificate',0,'subject_list',0])}]])],[$stash->get(['CPANEL',0,'locale',0,'maketext',['Issuer:' ]]),$stash->get(['distinguished_name',[{'parts'=>$stash->get(['NOTICE',0,'certificate',0,'issuer_list',0])}]])]]}]]);$output .= '
<p>';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The certificate’s [output,abbr,PEM,Privacy-Enhanced Mail] representation is included below:' ]]);$output .= '<br>';$output .= $stash->get(['code_block',[{'formatted_code'=>'<pre>' .$stash->get(['NOTICE',0,'certificate',0,'text',0]).'</pre>' }]]);$output .= '<br>
</p>

';$context->include('wrapper/main.html.tmpl',{'content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});