Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/etc/icontact_templates/AutoSSL/CertificateRenewalCoverage.html.tmpl',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '
';$output .= $context->process('include/colors.tmpl');$output .= $context->process('include/styles.tmpl');$output .= $context->process('include/zebra_table.tmpl');$output .= $context->process('include/code_block.tmpl');$output .= $context->process('include/certificate_info_extended.tmpl');$output .= $context->process('AutoSSL/includes/autossl_problems_table.tmpl');$output .= $context->process('SSL/includes/market_upgrade_options.tmpl');$stash->set('uncovered_domains',[]);$stash->set('covered_domains',{});do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'vhost_domains',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'vhost_domain'}=$_tt_value;if (!$stash->get(['vhost_domain',0,'covered',0])){$output .= $stash->get(['uncovered_domains',0,'push',[$stash->get('vhost_domain')]])}else {$stash->set('this_domain',$stash->get(['vhost_domain',0,'name',0]));$stash->set(['covered_domains',0,$stash->get('this_domain'),0],1)};($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};if ($stash->get(['covered_domains',0,'keys',0,'size',0])eq 1){$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['CPANEL',0,'locale',0,'maketext',['[_1]: Normally [asis,AutoSSL] would request a new certificate that would secure any new domains. However, the domain that the certificate currently secures just failed [output,abbr,DCV,Domain Control Validation]. That domain [output,strong,must] pass [asis,DCV] to enable AutoSSL to request a new certificate. This new certificate will secure all domains that pass [asis,DCV].',$stash->get(['NOTICE',0,'vhost_name',0])]]))}else {$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['CPANEL',0,'locale',0,'maketext',['[_1]: Normally [asis,AutoSSL] would replace the current certificate with one that secures any new domains. However, [numf,_2] of the website’s secured domains just failed [output,abbr,DCV,Domain Control Validation]. When all currently secured domains pass [asis,DCV], [asis,AutoSSL] will request a new certificate that includes all domains that pass [asis,DCV].',$stash->get(['NOTICE',0,'vhost_name',0]),$stash->get(['NOTICE',0,'old_dcv_failures',0,'size',0]),$stash->get(['covered_domains',0,'keys',0,'size',0])]]))}$output .= do {my$output='';$output .= '

';$output .= $stash->get(['autossl_problems_table',[{'autossl_problems'=>$stash->get(['NOTICE',0,'autossl_problems',0]),'autossl_provider'=>$stash->get(['NOTICE',0,'autossl_provider',0]),'ssl_tls_status_url'=>$stash->get(['NOTICE',0,'ssl_tls_status_url',0]),'autossl_filter_domains'=>$stash->get('covered_domains')}]]);$output .= '

<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['You can fix [numerate,_1,this problem,these problems] within [quant,_2,day,days] of the certificate expiry ([datetime,_3,datetime_format_medium] [asis,UTC]) or take other actions. If you do not, this certificate will automatically renew without [numerate,_4,this domain,these domains].',$stash->get(['NOTICE',0,'autossl_problems',0,'size',0]),$stash->get(['NOTICE',0,'must_replace_window_days',0]),1 + $stash->get(['NOTICE',0,'certificate',0,'not_after',0]),$stash->get(['uncovered_domains',0,'size',0])]]);$output .= '
</p>

<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The next time that the “[_1]” [asis,AutoSSL] provider attempts to renew the [asis,SSL] certificate, the system will attempt to add the following [numerate,_2,domain,domains] to that certificate:',$stash->get(['NOTICE',0,'autossl_provider',0]),$stash->get(['uncovered_domains',0,'size',0])]]);$output .= '
</p>

<ul>
    ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('uncovered_domains');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'d'}=$_tt_value;$output .= '        <li>
            <a href="https://';$output .= $stash->get(['d',0,'name',0,'html',0]);$output .= '">';$output .= $stash->get(['d',0,'name',0,'html',0]);$output .= '</a>
        </li>
    ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '</ul>

';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The certificate that is installed on this website contains the following properties:' ]]);$output .= $stash->get(['certificate_info_extended',[{'certificate'=>$stash->get(['NOTICE',0,'certificate',0])}]]);$output .= '

';$output .= $stash->get(['market_upgrade_options',[{'enabled_providers_count'=>$stash->get(['NOTICE',0,'enabled_providers_count',0]),'ssl_tls_wizard_url'=>$stash->get(['NOTICE',0,'ssl_tls_wizard_url',0]),'certificate'=>$stash->get(['NOTICE',0,'certificate',0])}]]);$output .= '


';$context->include('wrapper/main.html.tmpl',{'content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});