Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/etc/icontact_templates/AutoSSL/CertificateInstalledUncoveredDomains.html.tmpl',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '
';$output .= $context->process('include/colors.tmpl');$output .= $context->process('include/styles.tmpl');$output .= $context->process('include/zebra_table.tmpl');$output .= $context->process('AutoSSL/includes/autossl_problems_table.tmpl');$output .= $context->process('include/code_block.tmpl');$output .= do {my$output='';$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['CPANEL',0,'locale',0,'maketext',['[_1]: [asis,AutoSSL] certificate installed!',$stash->get(['NOTICE',0,'vhost_name',0])]]));$output .= '

<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['[asis,AutoSSL] has renewed “[_1]”’s Domain Validated (DV) [asis,SSL] certificate. The new certificate lacks [numf,_2] of the website’s domains:',$stash->get(['NOTICE',0,'vhost_name',0]),$stash->get(['NOTICE',0,'uncovered_domain_problems',0,'size',0])]]);$output .= '
</p>

';$output .= $stash->get(['autossl_problems_table_plain',[{'autossl_problems'=>$stash->get(['NOTICE',0,'uncovered_domain_problems',0])}]]);$output .= '

<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['If [numerate,_1,this domain does,these domains do] not need valid [asis,SSL], then you do not need to take any further action. However, if you want [asis,AutoSSL] to secure [numerate,_1,this domain,these domains], you must resolve the above [numerate,_1,problem,problems].',$stash->get(['NOTICE',0,'uncovered_domain_problems',0,'size',0])]]);$output .= '
</p>

';if ($stash->get(['NOTICE',0,'enabled_providers_count',0])){$output .= '
<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['To upgrade to an [output,abbr,EV,Extended Validation] or [output,abbr,OV,Organization Validated] certificate, navigate to the “[output,url,_1,SSL/TLS Wizard]” interface.',$stash->get(['NOTICE',0,'ssl_tls_wizard_url',0])]]);$output .= '
</p>
'}$output .= '

<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The certificate is now active on the website for the following domain names:' ]]);$output .= '
</p>

<ul>
    ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'vhost_domains',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'d'}=$_tt_value;$output .= '        <li>
            <a href="https://';$output .= $stash->get(['d',0,'name',0,'html',0]);$output .= '">';$output .= $stash->get(['d',0,'name',0,'html',0]);$output .= '</a>
            ';if ($stash->get(['d',0,'added',0])){$output .= '                (';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['new' ]]);$output .= ')
            '}elsif (!$stash->get(['d',0,'covered',0])){$output .= '
                ';$stash->set('not_every_domain_is_covered',1);$output .= '                &#x26d4;
            '}$output .= '
        </li>
    ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '</ul>

';if ($stash->get('not_every_domain_is_covered')){$output .= '<p>
';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['NOTE: “[_1]” marks domains that the newly-installed certificate does not include or secure. Visitors who access these domain names will see web browser security warnings.','&#x26d4;' ]]);$output .= '</p>
'}$output .= '
';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The certificate has the following properties:' ]]);$output .= '
';$stash->set('distinguished_name',sub {my$_tt_params=$_[0]if ref($_[0])eq 'HASH';my$output='';my$stash=$context->localise($_tt_params);eval {$output .= '    <table class="distinguished-name" style="margin-bottom: 0">
        ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('parts');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'part'}=$_tt_value;$output .= '            <tr>
                <td style="padding:3px;">';$output .= $stash->get(['part',0,0,0,'html',0]);$output .= '</td>
                <td style="padding:3px;">';$output .= $stash->get(['part',0,1,0,'html',0]);$output .= '</td>
            </tr>
        ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '    </table>'};$stash=$context->delocalise();die $@ if $@;return$output});$output .= '
';$stash->set('domains_list',sub {my$_tt_params=$_[0]if ref($_[0])eq 'HASH';my$output='';my$stash=$context->localise($_tt_params);eval {$output .= '    <table class="domains-list" style="margin-bottom: 0">
        ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('domains');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'d'}=$_tt_value;$output .= '            <tr>
                <td style="padding:3px;">';$output .= $stash->get(['d',0,'html',0]);$output .= '</td>
            </tr>
        ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '    </table>'};$stash=$context->delocalise();die $@ if $@;return$output});$output .= $stash->get(['zebra_table',[{'boldfirst'=>1,'items'=>[[$stash->get(['CPANEL',0,'locale',0,'maketext',['Expiration:' ]]),$stash->get(['CPANEL',0,'locale',0,'datetime',[1 + $stash->get(['NOTICE',0,'certificate',0,'not_after',0]),'datetime_format_full' ]])],[$stash->get(['CPANEL',0,'locale',0,'maketext',['Domain Names:' ]]),$stash->get(['domains_list',[{'domains'=>$stash->get(['NOTICE',0,'certificate',0,'domains',0])}]])],[$stash->get(['CPANEL',0,'locale',0,'maketext',['Subject:' ]]),$stash->get(['distinguished_name',[{'parts'=>$stash->get(['NOTICE',0,'certificate',0,'subject_list',0])}]])],[$stash->get(['CPANEL',0,'locale',0,'maketext',['Issuer:' ]]),$stash->get(['distinguished_name',[{'parts'=>$stash->get(['NOTICE',0,'certificate',0,'issuer_list',0])}]])]]}]]);$output .= '
<p>';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The certificate’s [output,abbr,PEM,Privacy-Enhanced Mail] representation is attached to this message.' ]]);$output .= '</p>

<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['Navigate to the “[output,url,_1,SSL/TLS Manager]” interface if you require the private key for this certificate.',$stash->get(['NOTICE',0,'ssl_tls_manager_url',0])]]);$output .= '
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The key ID for the private key is “[_1]”.',$stash->get(['NOTICE',0,'key_id',0])]]);$output .= '
</p>

';$context->include('wrapper/main.html.tmpl',{'content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});