Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/etc/icontact_templates/Check/PdnsConf.html.tmpl','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '
';$output .= $context->process('include/colors.tmpl');$output .= $context->process('include/styles.tmpl');$output .= $context->process('include/zebra_table.tmpl');$output .= do {my$output='';$stash->set(['NOTICE',0,'email_reason',0],'[migrate-pdns-conf] ' .$stash->get(['CPANEL',0,'locale',0,'maketext',['Updated [asis,PowerDNS] Configuration on “[_1]”.',$stash->get(['NOTICE',0,'host_server',0])]]));$output .= '

';if ($stash->get(['NOTICE',0,'removed',0,'size',0])){$stash->set('removed_table_title',$stash->get(['CPANEL',0,'locale',0,'maketext',['Disabled configuration directives' ]]));$stash->set('removed_table_items',[]);do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'removed',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'directive'}=$_tt_value;$output .= $stash->get(['removed_table_items',0,'push',[$stash->get('directive')]]);;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The system disabled the following invalid configuration directives:' ]]);$output .= '
</p>
<p style="padding:10px;">
';$output .= $stash->get(['zebra_table',[{'titles'=>$stash->get('removed_table_title'),'items'=>$stash->get('removed_table_items')}]]);$output .= '
</p>
'}$output .= '

';if ($stash->get(['NOTICE',0,'renamed',0,'size',0])){$output .= '
<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The system renamed the following configuration directives:' ]]);$output .= '
</p>
    ';$stash->set('renamed_table_titles',[$stash->get(['CPANEL',0,'locale',0,'maketext',['Old' ]]),$stash->get(['CPANEL',0,'locale',0,'maketext',['New' ]])]);$stash->set('renamed_table_items',[]);do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'renamed',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'directive_pair'}=$_tt_value;$stash->set('table_item',[]);do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['directive_pair',0,'pairs',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR2: while (!$_tt_error){$stash->{'pair'}=$_tt_value;$output .= $stash->get(['table_item',0,'push',[$stash->get(['pair',0,'key',0])]]);$output .= $stash->get(['table_item',0,'push',[$stash->get(['pair',0,'value',0])]]);;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= $stash->get(['renamed_table_items',0,'push',[$stash->get('table_item')]]);;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
<p style="padding:10px;">
';$output .= $stash->get(['zebra_table',[{'titles'=>$stash->get('renamed_table_titles'),'items'=>$stash->get('renamed_table_items')}]]);$output .= '
</p>
'}$output .= '

';if ($stash->get(['NOTICE',0,'manual',0,'size',0])){$output .= '
<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The system disabled the following configuration directives and each requires administrator intervention:' ]]);$output .= '
</p>
    ';$stash->set('manual_table_title',$stash->get(['CPANEL',0,'locale',0,'maketext',['Configuration directives requiring manual intervention' ]]));$stash->set('manual_table_items',[]);do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'manual',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'directive'}=$_tt_value;$output .= $stash->get(['manual_table_items',0,'push',[$stash->get('directive')]]);;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
<p style="padding:10px;">
';$output .= $stash->get(['zebra_table',[{'titles'=>$stash->get('manual_table_title'),'items'=>$stash->get('manual_table_items')}]]);$output .= '
</p>
'}$output .= '

';if ($stash->get(['NOTICE',0,'enabled',0,'size',0])){$output .= '
<p>
    ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The system added the following configuration directives:' ]]);$output .= '
</p>
    ';$stash->set('enabled_table_titles',[$stash->get(['CPANEL',0,'locale',0,'maketext',['Directive' ]]),$stash->get(['CPANEL',0,'locale',0,'maketext',['Value' ]])]);$stash->set('enabled_table_items',[]);do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'enabled',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'directive_pair'}=$_tt_value;$stash->set('table_item',[]);do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['directive_pair',0,'pairs',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR2: while (!$_tt_error){$stash->{'pair'}=$_tt_value;$output .= $stash->get(['table_item',0,'push',[$stash->get(['pair',0,'key',0])]]);$output .= $stash->get(['table_item',0,'push',[$stash->get(['pair',0,'value',0])]]);;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= $stash->get(['enabled_table_items',0,'push',[$stash->get('table_item')]]);;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
<p style="padding:10px;">
';$output .= $stash->get(['zebra_table',[{'titles'=>$stash->get('enabled_table_titles'),'items'=>$stash->get('enabled_table_items')}]]);$output .= '
</p>
'}$output .= '

';$context->include('wrapper/main.html.tmpl',{'content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});