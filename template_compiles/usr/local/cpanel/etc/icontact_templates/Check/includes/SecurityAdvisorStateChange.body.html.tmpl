Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/etc/icontact_templates/Check/includes/SecurityAdvisorStateChange.body.html.tmpl',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= $context->process('include/colors.tmpl');$output .= $context->process('include/styles.tmpl');$output .= $context->process('include/zebra_table.tmpl');$output .= $context->process('include/icons.tmpl');$stash->set(['NOTICE',0,'table_titles',0],[$stash->get(['CPANEL',0,'locale',0,'maketext',['Type' ]]),$stash->get(['CPANEL',0,'locale',0,'maketext',['Module' ]]),$stash->get(['CPANEL',0,'locale',0,'maketext',['Advice' ]])]);$stash->set(['NOTICE',0,'table_items',0],[]);$stash->set('high_text',$stash->get(['get_icon',[{'icon'=>'error' }]]).' ' .$stash->get(['CPANEL',0,'locale',0,'maketext',['High' ]]));$stash->set('medium_text',$stash->get(['get_icon',[{'icon'=>'warn' }]]).' ' .$stash->get(['CPANEL',0,'locale',0,'maketext',['Medium' ]]));$stash->set('info_text',$stash->get(['CPANEL',0,'locale',0,'maketext',['Info' ]]));$stash->set('high_table_items',[]);$stash->set('medium_table_items',[]);$stash->set('info_table_items',[]);do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'notices',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'module'}=$_tt_value;$stash->set('module_split',($stash->get(['module',0,'key',0,'split',['::' ]])));$stash->set('module_name',$stash->get(['module_split',0,'pop',0]));do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['module',0,'value',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR2: while (!$_tt_error){$stash->{'advice'}=$_tt_value;$stash->set('notice_text',$stash->get(['advice',0,'text',0]).' ' .$stash->get(['advice',0,'suggestion',0]));if ($stash->get(['advice',0,'type',0])eq 8){$output .= $stash->get(['high_table_items',0,'push',[[$stash->get('high_text'),$stash->get('module_name'),$stash->get('notice_text')]]])}elsif ($stash->get(['advice',0,'type',0])eq 4){$output .= $stash->get(['medium_table_items',0,'push',[[$stash->get('medium_text'),$stash->get('module_name'),$stash->get('notice_text')]]])}else {$output .= $stash->get(['info_table_items',0,'push',[[$stash->get('info_text'),$stash->get('module_name'),$stash->get('notice_text')]]])};($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$stash->set('table_import',$stash->get(['NOTICE',0,'table_items',0,'import',[$stash->get('high_table_items'),$stash->get('medium_table_items'),$stash->get('info_table_items')]]));$output .= '
    ';$output .= $stash->get(['zebra_table',[{'titles'=>$stash->get(['NOTICE',0,'table_titles',0]),'items'=>$stash->get(['NOTICE',0,'table_items',0])}]]);$output .= '

    <p>
        ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['In order to resolve these security concerns, log in to [asis,WHM] and navigate to the “[_1]” interface.',$stash->get(['CPANEL',0,'locale',0,'maketext',['Security Advisor' ]])]]);$output .= '
        <a href="';$output .= $stash->get(['NOTICE',0,'security_advisor_url',0]);$output .= '">';$output .= $stash->get(['NOTICE',0,'security_advisor_url',0]);$output .= '</a>
    </p>


'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});