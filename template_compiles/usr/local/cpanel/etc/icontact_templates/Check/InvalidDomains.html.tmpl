Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/etc/icontact_templates/Check/InvalidDomains.html.tmpl','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '
';$output .= $context->process('include/colors.tmpl');$output .= $context->process('include/styles.tmpl');$stash->set('code_block_width',$stash->get('content_width')- 20);$output .= do {my$output='';$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['CPANEL',0,'locale',0,'maketext',['The system has detected invalid domains.' ]]));$output .= '

<p>';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['Below is a list of invalid domains, organized by owner and then by individual user.' ]]);$output .= '</p>

<table style="border: 2px solid ';$output .= $stash->get('medium_gray');$output .= '; margin: 5px 10px; padding:0;" width="';$output .= $stash->get('code_block_width');$output .= 'px" cellpadding="0" cellspacing="0">
    <tr>
        <th style="border-bottom: 2px solid ';$output .= $stash->get('medium_gray');$output .= '; padding: 5px; background-color: ';$output .= $stash->get('light_gray');$output .= '" align="left">';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['Owner:' ]]);$output .= '        </th>
        <th style="border-bottom: 2px solid ';$output .= $stash->get('medium_gray');$output .= '; padding: 5px; background-color: ';$output .= $stash->get('light_gray');$output .= '" align="left">';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['User:' ]]);$output .= '        </th>
        <th style="border-bottom: 2px solid ';$output .= $stash->get('medium_gray');$output .= '; padding: 5px; background-color: ';$output .= $stash->get('light_gray');$output .= '" align="left">';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['Invalid Domain(s):' ]]);$output .= '        </th>
    </tr>
    ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'invalid_domains',0,'keys',0,'sort',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'owner'}=$_tt_value;$output .= '
        ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'invalid_domains',0,$stash->get('owner'),0,'keys',0,'sort',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR2: while (!$_tt_error){$stash->{'user'}=$_tt_value;$output .= '
        <tr style="vertical-align:top;">
            ';if ($stash->get(['loop',0,'first',0])){$output .= '
            <td style="border: 1px solid ';$output .= $stash->get('medium_gray');$output .= ';padding: 5px; word-wrap: break-word; word-break: break-all;font-weight:bold;" rowspan="';$output .= $stash->get(['NOTICE',0,'invalid_domains',0,$stash->get('owner'),0,'keys',0,'size',0]);$output .= '">';$output .= $stash->get('owner');$output .= '            </td>
            '}$output .= '
            <td style="border: 1px solid ';$output .= $stash->get('medium_gray');$output .= ';padding: 5px; word-wrap: break-word; word-break: break-all;">';$output .= $stash->get('user');$output .= '</td>
            <td style="border: 1px solid ';$output .= $stash->get('medium_gray');$output .= ';padding: 5px; word-wrap: break-word; word-break: break-all;">
                ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'invalid_domains',0,$stash->get('owner'),0,$stash->get('user'),0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR3: while (!$_tt_error){$stash->{'domain'}=$_tt_value;$output .= '
                    ';$output .= $stash->get('domain');$output .= '<br />
                ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
            </td>
        </tr>
        ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
    ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '

</table>

<p>';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['Invalid domains may adversely affect the [output,abbr,HTTP,Hypertext Transfer Protocol], [output,abbr,DNS,Domain Name System], and mail services.' ]]);$output .= '</p>
<p>';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['You can remove these domains with the [asis,cPanel] or [asis,WHM] interfaces.' ]]);$output .= '</p>


';$context->include('wrapper/main.html.tmpl',{'content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});