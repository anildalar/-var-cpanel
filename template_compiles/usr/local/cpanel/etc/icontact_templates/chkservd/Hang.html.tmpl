Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/etc/icontact_templates/chkservd/Hang.html.tmpl','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= $context->process('include/colors.tmpl');$output .= $context->process('include/styles.tmpl');$output .= $context->process('include/system_info_views.html.tmpl');$output .= $context->process('include/system_info_table.tmpl');$stash->set(['NOTICE',0,'service_name',0],'chkservd');$stash->set(['NOTICE',0,'notification_type',0],'hang');$stash->set(['NOTICE',0,'show_chkservd_version',0],1);$output .= '
';$output .= $context->process('include/colors.tmpl');$output .= $context->process('include/styles.tmpl');$output .= $context->process('include/code_block.tmpl');$output .= $context->process('include/code_inline.tmpl');$output .= do {my$output='';$stash->set(['NOTICE',0,'email_reason',0],$stash->get(['CPANEL',0,'locale',0,'maketext',['The [asis,chkservd] process has become non-responsive.' ]]));$output .= '
    <p>
        ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['The [asis,chkservd] subprocess with [output,abbr,PID,process ID] “[_1]” ran for “[_2]”. The system terminated this sub-process when it exceeded the time allowed between checks, which is “[_3]”. To determine why, check the “[_4]” and “[_5]” files.',$stash->get(['NOTICE',0,'child_pid',0]),$stash->get(['split_time_view',0,'print',[$stash->get(['NOTICE',0,'child_run_time',0])]]),$stash->get(['split_time_view',0,'print',[$stash->get(['NOTICE',0,'check_interval',0])]]),$stash->get(['code_inline',[{'term'=>$stash->get(['NOTICE',0,'cpanel_chkservd_log_path',0])}]]),$stash->get(['code_inline',[{'term'=>$stash->get(['NOTICE',0,'cpanel_tailwatchd_log_path',0])}]])]]);$output .= '
    </p>
    <p>
        ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['You likely received this notification as a symptom of a larger problem. If your server is experiencing a high load, we recommend that you investigate the cause. If you continue to receive this notification, it is likely that your system is unable to handle demand or there is a misconfiguration that delays restarts.' ]]);$output .= '
    </p>
    <p>
        ';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['If you are sure that no misconfigurations exist, you should consider gradually increasing the following options in [asis,WHM]’s “[_1]” feature: “[_2]”, “[_3]”, or both.',$stash->get(['CPANEL',0,'locale',0,'maketext',['Tweak Settings' ]]),'The number of times ChkServd allows a previous check to complete before termination','The number of seconds between chkservd service checks' ]]);$output .= '
        (<a href="';$output .= $stash->get(['NOTICE',0,'chkservd_tweaksetting_url',0]);$output .= '">';$output .= $stash->get(['NOTICE',0,'chkservd_tweaksetting_url',0]);$output .= '</a>)
    </p>

    <p>
        ';$output .= $stash->get('system_info_table');$output .= '
    </p>

    <p>';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['Configure [asis,chkservd]' ]]);$output .= ':<br>
        <a href="';$output .= $stash->get(['NOTICE',0,'chkservd_tweaksetting_url',0]);$output .= '">';$output .= $stash->get(['NOTICE',0,'chkservd_tweaksetting_url',0]);$output .= '</a>
    </p>
    <p>';$output .= $stash->get(['CPANEL',0,'locale',0,'maketext',['Disable [output,abbr,HTML,Hypertext Markup Language] notifications' ]]);$output .= ':<br>
        <a href="';$output .= $stash->get(['NOTICE',0,'chkservd_plaintext_notify_tweaksettings_url',0]);$output .= '">';$output .= $stash->get(['NOTICE',0,'chkservd_plaintext_notify_tweaksettings_url',0]);$output .= '</a>
    </p>

    <p>
        ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['NOTICE',0,'log_preview',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'log'}=$_tt_value;$output .= '
            ';$stash->set('loop_index',$stash->get(['loop',0,'index',0]));$output .= '
            ';$output .= $stash->get(['code_block',[{'formatted_code'=>$stash->get('log'),'title'=>$stash->get(['CPANEL',0,'locale',0,'maketext',['Preview of “[_1]”',$stash->get(['NOTICE',0,'log_preview_name',0,$stash->get('loop_index'),0])]])}]]);$output .= '
        ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
    </p>

';$context->include('wrapper/main.html.tmpl',{'content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});