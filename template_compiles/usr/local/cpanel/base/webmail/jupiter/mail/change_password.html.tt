Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/base/webmail/jupiter/mail/change_password.html.tt','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set(['CPANEL',0,'CPVAR',0,'dprefix',0],'../');$stash->set('auth_user',$stash->get(['ExpVar',0,'expand',['$authuser' ]]));if (($stash->get(['ExpVar',0,'expand',['$appname' ]])eq 'webmail')){$stash->set('auth_user_info',$stash->get(['auth_user',0,'split',['@' ]]));if (!$stash->get(['FORM',0,'item',['email' ]])){$stash->set(['FORM',0,'email',0],$stash->get(['auth_user_info',0,0,0]))}if (!$stash->get(['FORM',0,'item',['domain' ]])){$stash->set(['FORM',0,'domain',0],$stash->get(['auth_user_info',0,1,0]))}}$output .= $stash->get(['Api2',0,'pre_exec',['PasswdStrength','get_required_strength' ]]);$stash->set('required_strength_resp',$stash->get(['Api2',0,'exec',['PasswdStrength','get_required_strength',{'app'=>'pop' }]]));$output .= $stash->get(['Api2',0,'post_exec',['PasswdStrength','get_required_strength' ]]);if ($stash->get(['required_strength_resp',0,'size',0])){$stash->set('required_strength',$stash->get(['required_strength_resp',0,0,0,'strength',0]))}$stash->set('email',$stash->get(['FORM',0,'item',['email' ]]));$stash->set('domain',$stash->get(['FORM',0,'item',['domain' ]]));$stash->set('email_account',$stash->get('email').'@' .$stash->get('domain'));$output .= '

';$stash->set('css_code_block',do {my$output='';$output .= $context->process('css_block');$output});$output .= '
';$stash->set('js_code_block',do {my$output='';$output .= $context->process('js_block');$output});$output .= '

';$output .= do {my$output='';$output .= '
<p id="chooseWebmail">
    ';$output .= $stash->get(['locale',0,'maketext',['Enter a new password for this account.' ]]);$output .= '
</p>

';$stash->set('external_auth_modules',$stash->get(['execute',['ExternalAuthentication','configured_modules' ],'data',0]));$stash->set('configured_providers',$stash->get(['execute',['ExternalAuthentication','get_authn_links' ],'data',0]));$output .= '

';if ($stash->get(['external_auth_modules',0,'size',0])&& $stash->get('external_auth_modules')){$output .= '
    <div class="body-content">
        <div class="section">
            <h2>
                ';$output .= $stash->get(['locale',0,'maketext',['Change Password' ]]);$output .= '
            </h2>
            <div>
                ';$output .= $context->process('change_password_form');$output .= '
            </div>
        </div>
        <div class="section">
            <h2>
                ';$output .= $stash->get(['locale',0,'maketext',['External Authentication' ]]);$output .= '
            </h2>
            <div>
                ';$output .= $context->process('manage_external_auth.tmpl');$output .= '
           </div>
        </div>
        <div growl></div>
    </div>

    <script type="text/javascript">
        CPANEL.namespace("CPANEL.PAGE");
        CPANEL.PAGE.external_auth_modules = ';$output .= $stash->get(['external_auth_modules',0,'json',0]);$output .= ';
        CPANEL.PAGE.configured_providers  = ';$output .= $stash->get(['configured_providers',0,'json',0]);$output .= ';
    </script>
'}else {$output .= '
    <div class="body-content">
        ';$output .= $context->process('change_password_form');$output .= '
    </div>
'}$output .= '

';$stash->set('JSON',$context->plugin('JSON'));$stash->set('requirejs_url_base','/webmail/' .$stash->get(['CPANEL',0,'CPDATA',0,'RS',0]));$output .= '

<script>
    var PAGE = window.PAGE || {};
    PAGE = {
        THEME_PATH : ';$output .= $stash->get(['requirejs_url_base',0,'json',0]);$output .= ',
    };
</script>

';$context->include('_assets/master.html.tt',{'app_key'=>'change_password','page_title'=>$stash->get(['locale',0,'maketext',['Password [output,amp] Security' ]]),'page_styles'=>$stash->get('css_code_block'),'page_js'=>$stash->get('js_code_block'),'page_scripts'=>$stash->get(['CPANEL',0,'is_debug_mode_enabled',0])? ['libraries/handlebars/handlebars.js' ]: ['libraries/handlebars/handlebars.min.js' ],'content',$output })};$output .= '

';$output .= '

';$output .= '

';$output .= '

';$output .= $context->process('_assets/cjt2_header_include.tt');$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{'change_password_form'=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '
    ';if ($stash->get('email_account')eq $stash->get('auth_user')){$output .= '
    <div id="changePasswordNotice">
    </div>
    <section id="changePasswordSection">
        <div class="form-group">
            <label for="txtPassword">';$output .= $stash->get(['locale',0,'maketext',['New Password' ]]);$output .= '</label>
            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <input type="password" id="txtPassword" class="form-control" />
                </div>
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <span id="txtPassword_error"></span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label for="txtPasswordAgain">';$output .= $stash->get(['locale',0,'maketext',['Confirm New Password' ]]);$output .= '</label>
            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <input type="password" id="txtPasswordAgain" class="form-control" />
                </div>
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <span id="txtPasswordAgain_error"></span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label id="lblPasswordStrength">
                ';$output .= $stash->get(['locale',0,'maketext',['Password Strength' ]]);$output .= '
                <span id="why_strong_passwords_link" class="glyphicon glyphicon-info-sign"></span>
            </label>
            ';$output .= $context->include('_assets/why_strong_passwords.html.tt');$output .= '
            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <div id="password_strength" class="password_strength"></div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <input id="create_strong_password" type="button" class="btn btn-default" value="';$output .= $stash->get(['locale',0,'maketext',['Password Generator' ]]);$output .= '" tabindex="-1" />
                </div>
            </div>
        </div>
        <div class="form-group">
            <input type="button" class="btn btn-primary" value="';$output .= $stash->get(['locale',0,'maketext',['Save' ]]);$output .= '" id="btnChangePassword" />
        </div>
    </section>

    <script id="successNotice" type="text/x-handlebars-template">
        <div class="alert alert-success alert-dismissable">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <span class="glyphicon glyphicon-ok-sign"></span>
            <div class="alert-message">
                <strong>';$output .= $stash->get(['locale',0,'maketext',['Success:' ]]);$output .= '</strong>
                {{message}}
            </div>
        </div>
    </script>

    <script id="errorNotice" type="text/x-handlebars-template">
        <div class="alert alert-danger">
            <span class="glyphicon glyphicon-remove-sign"></span>
            <div class="alert-message">
                <strong>';$output .= $stash->get(['locale',0,'maketext',['Error:' ]]);$output .= '</strong>
                {{message}}
            </div>
        </div>
    </script>
    '}else {$output .= '
        <div class="alert alert-danger">
            <span class="glyphicon glyphicon-remove-sign"></span>
            <div ng-non-bindable class="alert-message">
                <strong>';$output .= $stash->get(['locale',0,'maketext',['Error:' ]]);$output .= '</strong>
                 ';$output .= $stash->get(['locale',0,'maketext',['The system experienced an error when it attempted to save the new password for the following account: [_1].',$stash->get('email_account')]]);$output .= '
            </div>
        </div>
    '}$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},'css_block'=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= "\n    <style>\n        .external-auth-icon {\n            display: inline-block;\n            width: 35px;\n            height: 35px;\n            margin: 3px 10px 3px 0;\n            vertical-align: middle;\n            border: 1px solid #FFF;\n            background-size: 75% 75%;\n            background-position: center;\n            background-repeat: no-repeat;\n        }\n\n        html[dir=\"rtl\"] .external-auth-icon {\n            margin: 3px 0 3px 10px;\n        }\n\n        .table .provider-username {\n            padding-left: 55px;\n        }\n\n        html[dir=\"rtl\"] .table .provider-username {\n            padding-right: 55px;\n        }\n\n        \@media (max-width: 667px) {\n            .external-auth-icon {\n                width: 25px;\n                height: 25px;\n            }\n\n            .table .provider-username {\n                padding-left: 47px;\n            }\n\n            html[dir=\"rtl\"] .table .provider-username {\n                padding-right: 47px;\n            }\n        }\n    </style>\n"}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},'js_block'=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '
    <script type="text/javascript">
    (function(){
        var REQUIRED_PASSWORD_STRENGTH = parseInt(\'';$output .= $stash->get('required_strength');$output .= '\', 10) || 5;
        var Handlebars = window.Handlebars;

        var change_password_success_template = Handlebars.compile(DOM.get("successNotice").text.trim());
        var change_password_error_template = Handlebars.compile(DOM.get("errorNotice").text.trim());
        var notice = YAHOO.util.Dom.get("changePasswordNotice");

        function changePassword() {
            // create the API variables
            var password = YAHOO.util.Dom.get("txtPassword").value;

            var callback = {
                success: _success,
                failure: _failure
            };

            CPANEL.api({
                version: 3,
                module: "Email",
                func: "passwd_pop",
                data: {
                    email: ';$output .= $stash->get(['email',0,'json',0]);$output .= ',
                    domain: ';$output .= $stash->get(['domain',0,'json',0]);$output .= ',
                    password: password
                },
                callback: callback
            });


            // callback functions
            function _success(o) {
                var result = o.cpanel_raw;

                if (result.messages) {
                    var successMessage = result.messages.join(" ");
                    notice.innerHTML =  change_password_success_template({
                         message: "';$output .= $stash->get(['locale',0,'maketext',['You successfully changed your password.' ]]);$output .= '" + " " + successMessage
                    });
                } else {
                    notice.innerHTML =  change_password_success_template({
                         message: "';$output .= $stash->get(['locale',0,'maketext',['You successfully changed your password.' ]]);$output .= '"
                    });
                }
                clearForm();
            }

            function _failure(o) {
                var result = o.cpanel_raw,
                    errorContent = "";

                if (result.errors) {
                    errorContent = result.errors.join(" ");
                    notice.innerHTML = change_password_error_template({
                        message: "';$output .= $stash->get(['locale',0,'maketext',['The system experienced an error when it attempted to save the new password.' ]]);$output .= '" + " " + errorContent
                    });
                } else {
                    notice.innerHTML = change_password_error_template({
                        message: "';$output .= $stash->get(['locale',0,'maketext',['The system experienced an error when it attempted to save the new password.' ]]);$output .= '"
                    });
                }
                clearForm();
            }

            function clearForm() {
                YAHOO.util.Dom.get("txtPassword").value = "";
                YAHOO.util.Dom.get("txtPasswordAgain").value = "";
            }

        }

        var init_page = function() {
            var password_validators = CPANEL.password.setup("txtPassword", "txtPasswordAgain", "password_strength", REQUIRED_PASSWORD_STRENGTH, "create_strong_password", "why_strong_passwords_link", "why_strong_passwords_text");

            CPANEL.validate.attach_to_form("btnChangePassword", [password_validators[0], password_validators[1]], changePassword);

            YAHOO.util.Dom.get("txtPassword").focus();
        };
        YAHOO.util.Event.onDOMReady(init_page);
    })()
    </script>
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},},});