Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/base/frontend/jupiter/stats/webalizerftp_landing.html.tt',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set(['CPANEL',0,'CPVAR',0,'dprefix',0],'../');$stash->set('listwebalizer',$stash->get(['execute',['Stats','list_sites',{'engine'=>'webalizer','traffic'=>'ftp' }]]));$output .= '
%]

';$output .= do {my$output='';$output .= '
<div class="body-content">
    <p id="descWebalizerFTP" class="description">
        ';$output .= $stash->get(['locale',0,'maketext',['Webalizer FTP is a complex stats program that produces a variety of charts and graphs about who has visited your site using FTP protocol.' ]]);$output .= '
    </p>
    ';if ($stash->get(['listwebalizer',0,'data',0,'list',0,'size',0])){$stash->set('item',$stash->get(['listwebalizer',0,'data',0,'item',[0 ]]));$stash->set('alt',$stash->get(['locale',0,'maketext',['View the Webalizer FTP statistics for “[_1]”.',$stash->get(['CPANEL',0,'CPDATA',0,'DNS',0])],'remove',['"' ]]));$output .= '
    <p>
        <a id="lnkViewWebalizerFTP" alt="';$output .= $stash->get('alt');$output .= '" title="';$output .= $stash->get('alt');$output .= '" href="';$output .= $stash->get(['CPANEL',0,'ENV',0,'cp_security_token',0]).$stash->get(['item',0,'path',0]);$output .= '" target="_blank">
            <span id="imgWebalizerFTP" class="glyphicon glyphicon-search"></span>&nbsp;
            ';$output .= $stash->get(['locale',0,'maketext',['Click here to view Webalizer FTP stats for “[_1]”.',$stash->get(['CPANEL',0,'CPDATA',0,'DNS',0])]]);$output .= '
        </a>
    </p>
    '}else {$output .= '
        ';if ($stash->get(['listwebalizer',0,'errors',0,'size',0])){$output .= '
            ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['listwebalizer',0,'errors',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'error'}=$_tt_value;$output .= '
                <div class="alert alert-danger" role="alert">
                    <span class="glyphicon glyphicon-remove-sign" aria-hidden="true"></span>
                    <div class="alert-message">
                        <strong class="alert-title">
                            ';$output .= $stash->get(['locale',0,'maketext',['Error:' ]]);$output .= '
                        </strong>
                        <span class="alert-body">
                                <span id="error-';$output .= $stash->get(['loop',0,'index',0]);$output .= '">
                                    ';$output .= $stash->get(['error',0,'html',0]);$output .= '
                                </span>
                            </span>
                    </div>
                </div>
            ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
        '}else {$output .= '
            <div class="alert alert-info" role="alert">
                <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
                <div class="alert-message">
                    <strong class="alert-title">
                        ';$output .= $stash->get(['locale',0,'maketext',['Notice:' ]]);$output .= '
                    </strong>
                    <span class="alert-body">
                      ';$output .= $stash->get(['locale',0,'maketext',['There are no [asis,Webalizer FTP] stats available.' ]]);$output .= '
                    </span>
                </div>
            </div>
        '}$output .= '
    '}$output .= '

</div>
';$context->include('_assets/master.html.tt',{'app_key'=>'webalizer_ftp','content',$output })}}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});