Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/base/frontend/jupiter/psql/deldb.html.tt',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set(['CPANEL',0,'CPVAR',0,'dprefix',0],'../');$output .= '

';$output .= do {my$output='';$stash->set('del_db',$stash->get(['execute',['Postgresql','delete_database',{'name'=>$stash->get(['RAW_FORM',0,'db',0])}]]));$output .= '<div class="body-content">

    ';if ($stash->get(['del_db',0,'status',0])){$output .= '
    <div id="deldbSuccess" class="alert alert-success">
        <span id="deldbSuccessImg" class="glyphicon glyphicon-ok-sign"></span>
        <span id="deldbSuccessMsg" class="text">
            ';$output .= $stash->get(['locale',0,'maketext',['You have deleted the database “[_1]”.',$stash->get(['FORM',0,'db',0])]]);$output .= '
        </span>
    </div>
    '}else {$output .= '
    <div id="deldbError" class="alert alert-danger">
        <span id="deldbErrorImg" class="glyphicon glyphicon-exclamation-sign"></span>
        <span id="deldbErrorMsg" class="text">
            ';$output .= $stash->get(['locale',0,'maketext',['The system failed to delete the database “[_1]” because of an error:',$stash->get(['FORM',0,'db',0])]]);$output .= '
            ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['del_db',0,'errors',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'q'}=$_tt_value;$output .= '
                ';$output .= $stash->get(['q',0,'html',0]);$output .= '
            ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
        </span>
    </div>
    '}$output .= '

    ';$output .= $context->include('_assets/return_link.html.tt',{'return_location'=>'index.html','return_link_text'=>$stash->get(['locale',0,'maketext',['Go Back' ]])});$output .= '

</div>
';$context->include('_assets/master.html.tt',{'app_key'=>'postgresql_databases','content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});