Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/base/frontend/jupiter/backup/dofullbackup-include.html.tt','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {do {my$_tt_result=$stash->get(['FORM',0,'dest',0]);my$_tt_match;SWITCH: {$_tt_match='homedir';$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){$stash->set('response',$stash->get(['execute',['Backup','fullbackup_to_homedir',{'email'=>$stash->get(['RAW_FORM',0,'email',0])}]]));last SWITCH}$_tt_match='ftp';$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){$stash->set('response',$stash->get(['execute',['Backup','fullbackup_to_ftp',{'variant'=>'active','email'=>$stash->get(['RAW_FORM',0,'email',0]),'host'=>$stash->get(['RAW_FORM',0,'server',0]),'port'=>$stash->get(['RAW_FORM',0,'port',0]),'username'=>$stash->get(['RAW_FORM',0,'user',0]),'password'=>$stash->get(['RAW_FORM',0,'pass',0]),'directory'=>$stash->get(['RAW_FORM',0,'rdir',0])}]]));last SWITCH}$_tt_match='passiveftp';$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){$stash->set('response',$stash->get(['execute',['Backup','fullbackup_to_ftp',{'variant'=>'passive','email'=>$stash->get(['RAW_FORM',0,'email',0]),'host'=>$stash->get(['RAW_FORM',0,'server',0]),'port'=>$stash->get(['RAW_FORM',0,'port',0]),'username'=>$stash->get(['RAW_FORM',0,'user',0]),'password'=>$stash->get(['RAW_FORM',0,'pass',0]),'directory'=>$stash->get(['RAW_FORM',0,'rdir',0])}]]));last SWITCH}$_tt_match='scp';$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){$stash->set('response',$stash->get(['execute',['Backup','fullbackup_to_scp_with_password',{'email'=>$stash->get(['RAW_FORM',0,'email',0]),'host'=>$stash->get(['RAW_FORM',0,'server',0]),'port'=>$stash->get(['RAW_FORM',0,'port',0]),'username'=>$stash->get(['RAW_FORM',0,'user',0]),'password'=>$stash->get(['RAW_FORM',0,'pass',0]),'directory'=>$stash->get(['RAW_FORM',0,'rdir',0])}]]));last SWITCH}}};if ($stash->get(['response',0,'status',0])){$output .= '
    <div id="backupSuccess" class="alert alert-info">
        <span id="backupSuccessImg" class="glyphicon glyphicon-info-sign"></span>
        <div id="backupSuccessMsg" class="alert-message">
            ';$output .= $stash->get(['locale',0,'maketext',['Full Backup in Progress …' ]]);$output .= '
            <div>
                ';if ($stash->get(['FORM',0,'email',0])){$output .= '
                    ';$output .= $stash->get(['locale',0,'maketext',['Once the full backup of your account has been completed, you will receive an email at the address you specified, “[_1]”.',$stash->get(['FORM',0,'email',0])]]);$output .= '
                '}else {$output .= '
                    ';$output .= $stash->get(['locale',0,'maketext',['Per your request, no notification will be sent upon backup completion.' ]]);$output .= '
                '}$output .= '
            </div>
        </div>
    </div>
'}else {$output .= '
    <div id="backupFailure" class="alert alert-danger">
        <span id="backupFailureImg" class="glyphicon glyphicon-remove-sign"></span>
        <div id="backupFailureMsg" class="alert-message">
            <strong>';$output .= $stash->get(['locale',0,'maketext',['Error:' ]]);$output .= '</strong>
            ';if ($stash->get(['FORM',0,'dest',0])eq 'homedir'){$output .= '
            ';$output .= $stash->get(['locale',0,'maketext',['The system failed to create the requested backup.' ]]);$output .= '
            '}else {$output .= '
            ';$output .= $stash->get(['locale',0,'maketext',['The system failed to create or deliver the requested backup.' ]]);$output .= '
            '}$output .= '
            ';if ($stash->get(['response',0,'errors',0,'size',0])> 0){$output .= '
            <ul>
                ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['response',0,'errors',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'error'}=$_tt_value;$output .= '
                <li>';$output .= $stash->get(['error',0,'html',0]);$output .= '</li>
                ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
            </ul>
            '}$output .= '

        </div>
    </div>
'}$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});