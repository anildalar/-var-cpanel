Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/base/frontend/jupiter/ssl/deletekeyconfirm.html.tt','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set(['CPANEL',0,'CPVAR',0,'dprefix',0],'../');$stash->set('certs',$stash->get(['execute',['SSL','find_certificates_for_key',{'friendly_name'=>$stash->get(['RAW_FORM',['name' ]]),'api.sort_column'=>'subject.commonName' }],'data',0]));$stash->set('csrs',$stash->get(['execute',['SSL','find_csrs_for_key',{'friendly_name'=>$stash->get(['RAW_FORM',['name' ]]),'api.sort_column'=>'commonName' }],'data',0]));$stash->set('ref',$stash->get(['FORM',0,'ref',0])|| '');$stash->set('safe_name',$stash->get(['RAW_FORM',['name' ],'html',0]));$output .= '
';$output .= do {my$output='';$output .= '<div class="body-content">
    <h2 id="hdrDelete">
        ';$output .= $stash->get(['locale',0,'maketext',['Delete Private Key' ]]);$output .= '
    </h2>

    <form action="deletekey.html" method="post">
        <input id="hidKeyname" type="hidden" name="keyname" value="';$output .= $stash->get(['FORM',0,'name',0]);$output .= '">
        ';if ($stash->get('ref')){$output .= '            <input id="hidRef" type="hidden" name="ref" value="';$output .= $stash->get(['FORM',0,'ref',0]);$output .= '">
        '}$output .= '
        <p>
            ';$output .= $stash->get(['locale',0,'maketext',['Are you sure you want to delete the private key “[_1]”?',$stash->get('safe_name')]]);$output .= '
        </p>
        ';if ($stash->get(['certs',0,'size',0])|| $stash->get(['csrs',0,'size',0])){$output .= '
            <p>
                ';$output .= $stash->get(['locale',0,'maketext',['The following resources depend on this key. If you want to keep any of them, uncheck the corresponding checkbox(es) below. When you delete a key, certificates and certificate signing requests that are associated with them cannot be used unless you provide the key again.' ]]);$output .= '
            </p>

            ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('certs');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'item'}=$_tt_value;$output .= '                ';if ($stash->get(['item',0,'subject.commonName',0])eq $stash->get(['item',0,'friendly_name',0])){$output .= '                    ';$stash->set('label',$stash->get(['locale',0,'maketext',['Certificate “[_1]”[comment,common name of certificate]',$stash->get(['item',0,'subject.commonName',0,'html',0])]]));$output .= '                '}else {$output .= '                    ';$stash->set('label',$stash->get(['locale',0,'maketext',['Certificate “[_1]”[comment,common name of certificate] - “[_2]”[comment,friendly name of certificate when it is different than the common name]',$stash->get(['item',0,'subject.commonName',0,'html',0]),$stash->get(['item',0,'friendly_name',0,'html',0])]]));$output .= '                '}$output .= '                <div class="form-group">
                    <div class="checkbox">
                        <label id="lbl';$output .= $stash->get(['item',0,'friendly_name',0,'html',0]);$output .= '">
                            <input type="checkbox" checked name="delete_cert-';$output .= $stash->get(['item',0,'friendly_name',0,'html',0]);$output .= '" value="1" id="delete_cert-';$output .= $stash->get(['item',0,'friendly_name',0,'html',0]);$output .= '" />
                            ';$output .= $stash->get('label');$output .= '
                        </label>
                    </div>
                </div>
            ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '            ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('csrs');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'item'}=$_tt_value;$output .= '                ';if ($stash->get(['item',0,'commonName',0])eq $stash->get(['item',0,'friendly_name',0])){$output .= '                    ';$stash->set('label',$stash->get(['locale',0,'maketext',['[output,acronym,CSR,Certificate Signing Request]: [output,strong,_1]',$stash->get(['item',0,'commonName',0,'html',0])]]));$output .= '                '}else {$output .= '                    ';$stash->set('label',$stash->get(['locale',0,'maketext',['[output,acronym,CSR,Certificate Signing Request]: [output,strong,_1] - [_2]',$stash->get(['item',0,'commonName',0,'html',0]),$stash->get(['item',0,'friendly_name',0,'html',0])]]));$output .= '                '}$output .= '                <div class="form-group">
                    <div class="checkbox">
                        <label id="lbl';$output .= $stash->get(['item',0,'friendly_name',0,'html',0]);$output .= '">
                            <input type="checkbox" checked name="delete_csr-';$output .= $stash->get(['item',0,'friendly_name',0,'html',0]);$output .= '" value="1" id="delete_csr-';$output .= $stash->get(['item',0,'friendly_name',0,'html',0]);$output .= '" />
                            ';$output .= $stash->get('label');$output .= '
                        </label>
                    </div>
                </div>
            ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
        '}$output .= '

        <div class="form-group">
            <input id="btnDelete" class="btn btn-primary" type="submit" title="';$output .= $stash->get(['locale',0,'maketext',['Yes, delete this key.' ]]);$output .= '" value="';$output .= $stash->get(['locale',0,'maketext',['Delete Key' ]]);$output .= '">
            <a id="lnkCancel" class="btn btn-link" href="keys.html';if ($stash->get('ref')){$output .= '?ref=';$output .= do {my$output='';my$_tt_filter=$context->filter('uri')|| $context->throw($context->error);$output .= $stash->get('ref');&$_tt_filter($output)}}$output .= '">';$output .= $stash->get(['locale',0,'maketext',['Cancel' ]]);$output .= '</a>
        </div>
    </form>

    <ul class="list-inline text-center">';if ($stash->get('ref')){do {my$_tt_result=$stash->get('ref');my$_tt_match;SWITCH: {$_tt_match='csrs';$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){$output .= '            <li>
                ';$output .= $context->include('_assets/return_link.html.tt',{'id_prefix'=>'lnkCSR','return_location'=>'csrs.html?selkey=' .$stash->get(['generate_key',0,'data',0,'id',0]).'','return_link_text'=>$stash->get(['locale',0,'maketext',['Return to SSL Certificate Signing Requests' ]])});$output .= '
            </li>';last SWITCH}$_tt_match='crts';$_tt_match=[$_tt_match ]unless ref$_tt_match eq 'ARRAY';if (grep(/^\Q$_tt_result\E$/,@$_tt_match)){$output .= '            <li>
                ';$output .= $context->include('_assets/return_link.html.tt',{'id_prefix'=>'lnkCRT','return_location'=>'crts.html?selkey=' .$stash->get(['generate_key',0,'data',0,'id',0]).'','return_link_text'=>$stash->get(['locale',0,'maketext',['Return to SSL Certificates' ]])});$output .= '
            </li>';last SWITCH}}}}$output .= '        <li>
        ';if ($stash->get('ref')){$output .= '
            ';$output .= $context->include('_assets/return_link.html.tt',{'return_location'=>'keys.html?ref=' .$stash->get(['ref',0,'uri',0]).'','return_link_text'=>$stash->get(['locale',0,'maketext',['Go Back' ]])});$output .= '
        '}else {$output .= '
            ';$output .= $context->include('_assets/return_link.html.tt',{'return_location'=>'keys.html','return_link_text'=>$stash->get(['locale',0,'maketext',['Go Back' ]])});$output .= '
        '}$output .= '
        </li>
    </ul>
</div>
';$context->include('_assets/master.html.tt',{'app_key'=>'ssl_tls','content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});