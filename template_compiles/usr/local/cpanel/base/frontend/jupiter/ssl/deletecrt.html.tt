Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/base/frontend/jupiter/ssl/deletecrt.html.tt',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set('host',$stash->get(['RAW_FORM',['id' ]]));$stash->set('host_not_set',($stash->get('host')eq ''));if (!$stash->get('host_not_set')){$stash->set('delete_cert',$stash->get(['execute',['SSL','delete_cert',{'id'=>$stash->get(['RAW_FORM',['id' ]])}]]))}$stash->set('failed',$stash->get(['delete_cert',0,'status',0])eq 0);$stash->set(['CPANEL',0,'CPVAR',0,'dprefix',0],'../');$output .= '

';$output .= do {my$output='';$output .= '<div class="body-content">
    <h2 id="hdrDelete">
        ';$output .= $stash->get(['locale',0,'maketext',['Delete Certificate' ]]);$output .= '
    </h2>

    ';if ($stash->get('host_not_set')){$output .= '
        <div id="noidError" class="alert alert-danger">
            <span id="noidErrorImg" class="glyphicon glyphicon-remove-sign"></span>
            <div id="noidErrorMsg" class="alert-message">
                ';$output .= $stash->get(['locale',0,'maketext',['You did not provide the “[_1]” in the request.','id' ]]);$output .= '
            </div>
        </div>
    '}elsif (!$stash->get('failed')){$output .= '
        <div id="deleteSuccess" class="alert alert-success">
            <span id="deleteSuccessImg" class="glyphicon glyphicon-ok-sign"></span>
            <div id="deleteSuccessMsg" class="alert-message">
                ';$output .= $stash->get(['locale',0,'maketext',['The certificate “[_1]” has been deleted.',$stash->get(['FORM',0,'id',0])]]);$output .= '
            </div>
        </div>
    '}else {$output .= '
        <div id="deleteError" class="alert alert-danger">
            <span id="deleteErrorImg" class="glyphicon glyphicon-remove-sign"></span>
            <div id="deleteErrorMsg" class="alert-message">
                ';$output .= $stash->get(['locale',0,'maketext',['Failed to delete the certificate “[_1]”. The certificate may not exist on the server or you do not have permission to access it.',$stash->get(['FORM',0,'id',0])]]);$output .= '
                ';if ($stash->get(['delete_cert',0,'errors_as_string',0])){$output .= '
                    ';$output .= do {my$output='';my$_tt_filter=$context->filter('html')|| $context->throw($context->error);$output .= $stash->get(['delete_cert',0,'errors_as_string',0]);&$_tt_filter($output)};$output .= '
                '}$output .= '
            </div>
        </div>
    '}$output .= '

    ';$output .= $context->include('_assets/return_link.html.tt',{'return_location'=>'crts.html','return_link_text'=>$stash->get(['locale',0,'maketext',['Go Back' ]])});$output .= '
</div>
';$context->include('_assets/master.html.tt',{'app_key'=>'ssl_tls','content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});