Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/base/frontend/jupiter/sharedjs/zone_editor/recordTemplates/naptr.ptt','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '<div>
    <div class="record_element first_inner_record block-view" ng-class="{ \'has-error\': manage.field_has_error(manage.add_zr_form_{{zone_rec._id}}, \'record_order_{{zone_rec._id}}\') }">
        <div class="record_subelement subelement_label">
            <label for="record_order_{{zone_rec._id}}" class="control-label">';$output .= $stash->get(['locale',0,'maketext',['Order' ]]);$output .= '</label>
            <span
                uib-tooltip="';$output .= $stash->get(['locale',0,'maketext',['A 16-bit unsigned integer that specifies the order that the NAPTR records process. Low numbers process before high numbers.' ]]);$output .= '"
                class="fas fa-info-circle">
            </span>
        </div>
        <div class="record_subelement subelement_input">
            <input type="text"
                class="form-control"
                id="record_order_{{zone_rec._id}}"
                name="record_order_{{zone_rec._id}}"
                ng-model="zone_rec.order"
                required
                positive-integer
                num-less-than-equal="65535"
                maxlength="5"
                placeholder="';$output .= $stash->get(['locale',0,'maketext',['Order Number' ]]);$output .= '">
        </div>
    </div>
    <div class="record_element">
        <div class="record_subelement subelement_input block-view">
            <ul validation-container field-name="record_order_{{zone_rec._id}}">
                <li validation-item
                    field-name="record_order_{{zone_rec._id}}"
                    validation-name="required">';$output .= $stash->get(['locale',0,'maketext',['This field is required.' ]]);$output .= '
                </li>
            </ul>
        </div>
    </div>
    <div class="record_element block-view" ng-class="{ \'has-error\': manage.field_has_error(manage.add_zr_form_{{zone_rec._id}}, \'record_preference_{{zone_rec._id}}\') }">
        <div class="record_subelement subelement_label">
            <label for="record_preference_{{zone_rec._id}}" class="control-label">';$output .= $stash->get(['locale',0,'maketext',['Preference' ]]);$output .= '</label>
            <span
                uib-tooltip="';$output .= $stash->get(['locale',0,'maketext',['A 16-bit unsigned integer that specifies the order that the NAPTR records with equal “Order” values process. Low numbers process before high numbers.' ]]);$output .= '"
                class="fas fa-info-circle"
            >
            </span>
        </div>
        <div class="record_subelement subelement_input">
            <input type="text"
                class="form-control"
                id="record_preference_{{zone_rec._id}}"
                name="record_preference_{{zone_rec._id}}"
                ng-model="zone_rec.preference"
                required
                positive-integer
                num-less-than-equal="65535"
                maxlength="5"
                placeholder="';$output .= $stash->get(['locale',0,'maketext',['Preference Number' ]]);$output .= '">
        </div>
    </div>
    <div class="record_element">
        <div class="record_subelement subelement_input block-view">
            <ul validation-container field-name="record_preference_{{zone_rec._id}}">
                <li validation-item
                    field-name="record_preference_{{zone_rec._id}}"
                    validation-name="required">';$output .= $stash->get(['locale',0,'maketext',['This field is required.' ]]);$output .= '
                </li>
            </ul>
        </div>
    </div>
    <div class="record_element block-view" ng-class="{ \'has-error\': manage.field_has_error(manage.add_zr_form_{{zone_rec._id}}, \'record_flag_{{zone_rec._id}}\') }">
        <div class="record_subelement subelement_label">
            <label for="record_flag_{{zone_rec._id}}" class="control-label">';$output .= $stash->get(['locale',0,'maketext',['Flags' ]]);$output .= '</label>
            <span
                uib-tooltip="';$output .= $stash->get(['locale',0,'maketext',['A flag that controls how NAPTR uses the query output. Usually a flag is a case insensitive single character from the set ~[A-Z 0-9~]. Supported flags include: S, A, U and P.' ]]);$output .= "\"\n                class=\"fas fa-info-circle\"\n            >\n            </span>\n        </div>\n        <div class=\"record_subelement subelement_input\">\n            <input type=\"text\"\n                class=\"form-control\"\n                id=\"record_flag_{{zone_rec._id}}\"\n                name=\"record_flag_{{zone_rec._id}}\"\n                ng-pattern=\"/^[A-Z0-9]*\$/i\"\n                ng-model=\"zone_rec.flags\"\n                maxlength=255\n                character-string-validator\n                placeholder=\"";$output .= $stash->get(['locale',0,'maketext',['Flags' ]]);$output .= '">
        </div>
    </div>
    <div class="record_element">
        <div class="record_subelement subelement_input block-view">
            <ul validation-container field-name="record_flag_{{zone_rec._id}}">
                <li validation-item
                    field-name="record_flag_{{zone_rec._id}}"
                    validation-name="pattern">';$output .= $stash->get(['locale',0,'maketext',['A valid flag may contain a case insensitive letter (a-z) or a digit (0-9).' ]]);$output .= '
                </li>
            </ul>
        </div>
    </div>
    <div class="record_element block-view" ng-class="{ \'has-error\': manage.field_has_error(manage.add_zr_form_{{zone_rec._id}}, \'record_service_{{zone_rec._id}}\') }">
        <div class="record_subelement subelement_label">
            <label for="record_service_{{zone_rec._id}}" class="control-label">';$output .= $stash->get(['locale',0,'maketext',['Service' ]]);$output .= '</label>
            <span
                uib-tooltip="';$output .= $stash->get(['locale',0,'maketext',['A string that specifies the protocol and service available on the rewrite path. Service field format: service_field = ~[~[protocol~] *(‘+’ rs)~].' ]]);$output .= '"
                class="fas fa-info-circle"
            >
            </span>
        </div>
        <div class="record_subelement subelement_input">
            <input type="text"
                class="form-control"
                id="record_service_{{zone_rec._id}}"
                name="record_service_{{zone_rec._id}}"
                ng-model="zone_rec.service"
                service-validator
                maxlength=255
                character-string-validator
                placeholder="';$output .= $stash->get(['locale',0,'maketext',['Service' ]]);$output .= '">
        </div>
    </div>
    <div class="record_element">
        <div class="record_subelement subelement_input block-view">
            <ul validation-container field-name="record_service_{{zone_rec._id}}">
                <li validation-item
                    field-name="record_service_{{zone_rec._id}}"
                    validation-name="naptrservice">
                </li>
            </ul>
        </div>
    </div>
    <div class="record_element block-view" ng-class="{ \'has-error\': manage.field_has_error(manage.add_zr_form_{{zone_rec._id}}, \'record_regexp_{{zone_rec._id}}\') }">
        <div class="record_subelement subelement_label">
            <label for="record_regexp_{{zone_rec._id}}" class="control-label">';$output .= $stash->get(['locale',0,'maketext',['Regexp' ]]);$output .= '</label>
            <span
                uib-tooltip="';$output .= $stash->get(['locale',0,'maketext',['A string that contains the regex expression to find the next domain lookup.' ]]);$output .= '"
                class="fas fa-info-circle"
            >
            </span>
        </div>
        <div class="record_subelement subelement_input">
            <input type="text"
                class="form-control"
                id="record_regexp_{{zone_rec._id}}"
                name="record_regexp_{{zone_rec._id}}"
                ng-model="zone_rec.regexp"
                naptr-regex-validator
                maxlength=255
                character-string-validator
                placeholder="';$output .= $stash->get(['locale',0,'maketext',['Regexp' ]]);$output .= '">
        </div>
    </div>
    <div class="record_element">
        <div class="record_subelement subelement_input block-view">
            <ul validation-container field-name="record_regexp_{{zone_rec._id}}">
                <li validation-item
                    field-name="record_regexp_{{zone_rec._id}}"
                    validation-name="naptrRegex">
                </li>
            </ul>
        </div>
    </div>
    <div class="record_element block-view" ng-class="{ \'has-error\': manage.field_has_error(manage.add_zr_form_{{zone_rec._id}}, \'record_replacement_{{zone_rec._id}}\') }">
        <div class="record_subelement subelement_label">
            <label for="record_replacement_{{zone_rec._id}}" class="control-label">';$output .= $stash->get(['locale',0,'maketext',['Replacement' ]]);$output .= '</label>
            <span
                uib-tooltip="';$output .= $stash->get(['locale',0,'maketext',['The next name to query depending on the value of the “Flag” field. Must be a fully qualified domain-name.' ]]);$output .= '"
                class="fas fa-info-circle"
            >
            </span>
        </div>
        <div class="record_subelement subelement_input">
            <input type="text"
                class="form-control"
                id="record_replacement_{{zone_rec._id}}"
                name="record_replacement_{{zone_rec._id}}"
                domain-name
                ng-model="zone_rec.replacement"
                placeholder="';$output .= $stash->get(['locale',0,'maketext',['Hostname or qualified domain name[comment,placeholder text]' ]]);$output .= '">
        </div>
    </div>
    <div class="record_element">
        <div class="record_subelement subelement_input block-view">
            <ul validation-container field-name="record_replacement_{{zone_rec._id}}">
                <li validation-item
                    field-name="record_replacement_{{zone_rec._id}}"
                    validation-name="replacement">
                </li>
            </ul>
        </div>
    </div>
</div>
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});