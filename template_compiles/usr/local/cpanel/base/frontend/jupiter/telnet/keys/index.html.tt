Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/base/frontend/jupiter/telnet/keys/index.html.tt','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set(['CPANEL',0,'CPVAR',0,'dprefix',0],'../../');$output .= '
';$output .= $stash->get(['Api2',0,'pre_exec',['SSH','listkeys' ]]);$stash->set('listkeys',$stash->get(['Api2',0,'exec',['SSH','listkeys',{'types'=>'pub' }]]));$output .= $stash->get(['Api2',0,'post_exec',['SSH','listkeys' ]]);$output .= $stash->get(['Api2',0,'pre_exec',['SSH','listkeys' ]]);$stash->set('list_priv_keys',$stash->get(['Api2',0,'exec',['SSH','listkeys',{'types'=>'priv' }]]));$output .= $stash->get(['Api2',0,'post_exec',['SSH','listkeys' ]]);$output .= '

';$output .= do {my$output='';$output .= '<div class="body-content">
    <h2 id="hdrKeys">
        ';$output .= $stash->get(['locale',0,'maketext',['Manage SSH Keys' ]]);$output .= '
    </h2>

    <a id="lnkGenerateKey" href="addkey.html" class="btn btn-primary">
        <span class="glyphicon glyphicon-plus"></span>
        ';$output .= $stash->get(['locale',0,'maketext',['Generate a New Key' ]]);$output .= '
    </a>
    <a id="lnkImportKey" href="importkey.html" class="btn btn-primary">
        <span class="glyphicon glyphicon-import"></span>
        ';$output .= $stash->get(['locale',0,'maketext',['Import Key' ]]);$output .= '
    </a>

    <div class="section">
        <h2 id="hdrKeyDescs">
            ';$output .= $stash->get(['locale',0,'maketext',['Key Descriptions' ]]);$output .= '
        </h2>
        <p id="descKeyPair" class="description">
            ';$output .= $stash->get(['locale',0,'maketext',['The public and private key are similar to a puzzle. They are created together to use during the login/authentication process. The public key resides on the server (the remote location). The private key resides locally on your computer/server. When you attempt to login to a server, the public and private key are compared. If they match, then you will be allowed to login to the server location.' ]]);$output .= '
        </p>
        <p id="descClients" class="description">
            ** ';$output .= $stash->get(['locale',0,'maketext',['You can download the private/public keys here and import into [output,url,_1,PuTTY,target,_2] (or other SSH clients) if you prefer using something else for SSH connections. Or, if you have been using PuTTY, you can import the public/private keys by clicking on Import Key. You can also download your key in PuTTYâ€™s ppk format under View/Download.','https://go.cpanel.net/putty','_blank' ]]);$output .= '
        </p>
    </div>
    <div class="section">
        <h2 id="hdrPubKeys">
            ';$output .= $stash->get(['locale',0,'maketext',['Public Keys' ]]);$output .= '
        </h2>
        <table id="pubkeytbl" class="sortable table table-striped">
        <thead>
            <tr>
                <th class="cell" scope="col">
                    ';$output .= $stash->get(['locale',0,'maketext',['Name' ]]);$output .= '
                </th>
                <th class="cell" scope="col">
                    ';$output .= $stash->get(['locale',0,'maketext',['Authorization Status' ]]);$output .= '
                </th>
                <th class="cell" scope="col" nonsortable="true">
                    ';$output .= $stash->get(['locale',0,'maketext',['Actions' ]]);$output .= '
                </th>
            </tr>
        </thead>
        <tbody>
            ';if ($stash->get(['listkeys',0,'size',0])){$output .= '
               ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('listkeys');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'keys'}=$_tt_value;$output .= '
                <tr>
                    <td>
                        ';$output .= $stash->get(['keys',0,'name',0,'html',0]);$output .= '
                    </td>
                    <td>
                        ';$output .= $stash->get(['keys',0,'authstatus',0,'html',0]);$output .= '
                    </td>
                    <td>
                        <a class="btn btn-link" href="delkey.html?key=';$output .= do {my$output='';my$_tt_filter=$context->filter('uri')|| $context->throw($context->error);$output .= $stash->get(['keys',0,'name',0]);&$_tt_filter($output)};$output .= '&pub=1">
                            <span class="glyphicon glyphicon-trash"></span>
                            ';$output .= $stash->get(['locale',0,'maketext',['Delete' ]]);$output .= '
                        </a>
                        <a class="btn btn-link" href="editkey.html?key=';$output .= do {my$output='';my$_tt_filter=$context->filter('uri')|| $context->throw($context->error);$output .= $stash->get(['keys',0,'name',0]);&$_tt_filter($output)};$output .= '&pub=1">
                            <span class="fas fa-download"></span>
                            ';$output .= $stash->get(['locale',0,'maketext',['View/Download' ]]);$output .= '
                        </a>
                        <a class="btn btn-link" href="authkey.html?key=';$output .= do {my$output='';my$_tt_filter=$context->filter('uri')|| $context->throw($context->error);$output .= $stash->get(['keys',0,'key',0]);&$_tt_filter($output)};$output .= '&pub=1">
                            <span class="fas fa-wrench"></span>
                            ';$output .= $stash->get(['locale',0,'maketext',['Manage' ]]);$output .= '
                        </a>
                    </td>
                </tr>
                ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
            '}else {$output .= '
            <tr>
                <td colspan="3">
                    ';$output .= $stash->get(['locale',0,'maketext',['No Public Keys installed.' ]]);$output .= '
                </td>
            </tr>
            '}$output .= '
        </tbody>
        </table>
        <p id="authorizeInformationMsg">
            ';$output .= $stash->get(['locale',0,'maketext',['[output,strong,NOTE]: If you authorize a key that is identical to other keys, those keys may also become authorized.' ]]);$output .= '
        </p>
    </div>
    <div class="section">
        <h2 id="hdrPrivKeys">
            ';$output .= $stash->get(['locale',0,'maketext',['Private Keys' ]]);$output .= '
        </h2>
        <table id="privkeytbl" class="sortable table table-striped">
            <thead>
                <tr>
                    <th class="cell" scope="col">
                        ';$output .= $stash->get(['locale',0,'maketext',['Name' ]]);$output .= '
                    </th>
                    <th class="cell" scope="col" nonsortable="true">
                        ';$output .= $stash->get(['locale',0,'maketext',['Actions' ]]);$output .= '
                    </th>
                </tr>
            </thead>
            <tbody>
                ';if ($stash->get(['list_priv_keys',0,'size',0])){$output .= '
                   ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('list_priv_keys');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'priv_keys'}=$_tt_value;$output .= '
                    <tr>
                        <td>
                            ';$output .= $stash->get(['priv_keys',0,'name',0,'html',0]);$output .= '
                        </td>
                        <td>
                            <a class="btn btn-link" href="delkey.html?key=';$output .= do {my$output='';my$_tt_filter=$context->filter('uri')|| $context->throw($context->error);$output .= $stash->get(['priv_keys',0,'name',0]);&$_tt_filter($output)};$output .= '">
                                <span class="glyphicon glyphicon-trash"></span>
                                ';$output .= $stash->get(['locale',0,'maketext',['Delete' ]]);$output .= '
                            </a>
                            <a class="btn btn-link" href="editkey.html?key=';$output .= do {my$output='';my$_tt_filter=$context->filter('uri')|| $context->throw($context->error);$output .= $stash->get(['priv_keys',0,'name',0]);&$_tt_filter($output)};$output .= '">
                                <span class="fas fa-download"></span>
                                ';$output .= $stash->get(['locale',0,'maketext',['View/Download' ]]);$output .= '
                            </a>
                        </td>
                    </tr>
                    ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
                '}else {$output .= '
                    <tr>
                        <td colspan="2">
                            ';$output .= $stash->get(['locale',0,'maketext',['No Private Keys installed.' ]]);$output .= '
                        </td>
                    </tr>
                '}$output .= '
            </tbody>
        </table>
    </div>

    ';$output .= $context->include('_assets/return_link.html.tt',{'return_location'=>'../index.html','return_link_text'=>$stash->get(['locale',0,'maketext',['Go Back' ]])});$output .= '
</div>
';$context->include('_assets/master.html.tt',{'app_key'=>'ssh_access','content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});