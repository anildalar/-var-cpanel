Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/base/frontend/jupiter/telnet/index.html.tt','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set(['CPANEL',0,'CPVAR',0,'dprefix',0],'../');$output .= '
';$stash->set('has_valid_shell',$stash->get(['ExpVar',0,'expand',['$hasvalidshell' ]]));$stash->set('has_ssh_feature',$stash->get(['CPANEL',0,'feature',['ssh' ]]));$output .= '


';$output .= do {my$output='';$output .= '<div class="body-content">
    <p id="descSsh1" data-testid="textSshDescription1">
        ';$output .= $stash->get(['locale',0,'maketext',['SSH allows secure file transfer and remote logins over the internet. Your connection via SSH is encrypted allowing the secure connection. In this section you can manage your SSH keys to allow automation when logging in via SSH. Using public key authentication is an alternative to password authentication. Since the private key must be held to authenticate, it is virtually impossible to brute force. You can import existing keys, generate new keys, as well as [output,url,_1,manage]/delete keys.','keys/index.html' ]]);$output .= '
    </p>
    <p id="descSsh2" data-testid="textSshDescription2">
        ';$output .= $stash->get(['locale',0,'maketext',['SSH (Secure Shell) is a program to log into another computer/server over a network securely. It provides strong authentication and secure communications over insecure channels. Your login, commands, text are all encrypted when using ssh.' ]]);$output .= '
    </p>

    <div class="section">
        <h2 id="hdrManageSshKeys">
            ';$output .= $stash->get(['locale',0,'maketext',['Manage SSH Keys' ]]);$output .= '
        </h2>
        <p id="descManageSshKeys" class="description">
            ';$output .= $stash->get(['locale',0,'maketext',['The public and private key are similar to a puzzle. They are created together to use during the login/authentication process. The public key resides on the server (the remote location). The private key resides locally on your computer/server. When you attempt to login to a server, the public and private key are compared. If they “match”, then you will be allowed to login to the server location.' ]]);$output .= '
        </p>
        <a id="lnkManageSshKeys" href="keys/index.html" class="btn btn-primary">';$output .= $stash->get(['locale',0,'maketext',['Manage SSH Keys' ]]);$output .= '</a>
    </div>
</div>
';$context->include('_assets/master.html.tt',{'app_key'=>'ssh_access','feature'=>'ssh','content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});