Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/base/frontend/jupiter/telnet/keys/authkey.html.tt',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set(['CPANEL',0,'CPVAR',0,'dprefix',0],'../../');$output .= '
';$output .= $stash->get(['Api2',0,'pre_exec',['SSH','listkeys' ]]);$stash->set('list_keys',$stash->get(['Api2',0,'exec',['SSH','listkeys',{'keys'=>$stash->get(['FORM',0,'key',0])}]]));$output .= $stash->get(['Api2',0,'post_exec',['SSH','listkeys' ]]);$output .= '

';$output .= do {my$output='';$output .= '<div class="body-content">

    <form action="doauthkey.html" method="post">
        <input id="hidKey" type="hidden" name="key" value="';$output .= $stash->get(['FORM',0,'key',0]);$output .= '" />
        ';if ($stash->get(['list_keys',0,'size',0])){$output .= '
            ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('list_keys');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'key'}=$_tt_value;$output .= '
                <p>
                   ';$output .= $stash->get(['locale',0,'maketext',['The key with the name “[_1]” is currently “[output,strong,_2]” for use when connecting to this account.',$stash->get(['key',0,'name',0,'html',0]),$stash->get(['key',0,'authstatus',0,'html',0])]]);$output .= '
                </p>
                <div class="form-group">
                    <input type="submit" class="btn btn-primary" name="action" value="';$output .= $stash->get(['key',0,'authaction',0,'html',0]);$output .= '">
                </div>
            ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
        '}$output .= '
    </form>

    ';$output .= $context->include('_assets/return_link.html.tt',{'return_location'=>'index.html','return_link_text'=>$stash->get(['locale',0,'maketext',['Go Back' ]])});$output .= '
</div>
';$context->include('_assets/master.html.tt',{'app_key'=>'ssh_access','feature'=>'ssh','content',$output })};$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});