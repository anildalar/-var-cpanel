Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/base/frontend/jupiter/mail/spam/views/advancedSettings.ptt',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '<div id="advancedSection">
	<div class="section">
		<form id="requiredScoreForm" name="requiredScoreForm" cp-form-waiting="updateTestingScores()" class="form layout-medium">
		    <div class="form-group">
		        <div class="row">
		            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
		                <toggle-label-info
		                     for="spamTestingScores"
		                     label-text="';$output .= $stash->get(['locale',0,'maketext',['Spam Testing Scores' ]]);$output .= '"
		                     label-id="spamTestingScoresLabel"
		                     info-icon-id="spamTestingScoresLabel_icon"
		                     info-block-id="spamTestingScoresLabel_info"
                             show-info-block="true">
		                     ';$output .= $stash->get(['locale',0,'maketext',['Select a “symbolic_test_name” and enter a score. If the test returns true, the system adds this score to an email’s calculated spam score.' ]]);$output .= '
		                     ';$output .= $stash->get(['locale',0,'maketext',['You only need to provide one value per test. cPanel systems always enable the “Bayesian” and “network” tests, and the score that you enter applies to this condition.' ]]);$output .= '
		                     ';$output .= $stash->get(['locale',0,'maketext',['A test score of zero disables that test.' ]]);$output .= '
		                </toggle-label-info>
		            </div>
		        </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                        <callout callout-type="warning" callout-heading="';$output .= $stash->get(['locale',0,'maketext',['Sensitive Content Warning:' ]]);$output .= '">
                            ';$output .= $stash->get(['locale',0,'maketext',['[output,em,Warning]: Certain spam score testing keywords may offend some users. Proceed with caution.' ]]);$output .= '
                        </callout>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12">
        		        <multi-field-editor
                            id="testingScoresMFE"
                            add-new-label="';$output .= $stash->get(['locale',0,'maketext',['Add A New “[_1]” Item','scores' ]]);$output .= "\"\n                            ng-model=\"workingPreferences.score\">\n                                <multi-field-editor-item\n                                    ng-repeat=\"(key,value) in workingPreferences.score track by \$index\"\n                                    label=\"scores\"\n                                    label-for=\"testingScoresMFE_item_{{ :: key }}_field_input\"\n                                    index=\"key\"\n                                    id=\"testingScoresMFE_item_{{ :: key }}\" >\n                                        <score-field\n                                            score-types=\"symbolicTestNames\"\n                                            id=\"testingScoresMFE_item_{{ :: key }}_field\"\n                                            ng-model=\"workingPreferences.score[key]\"></score-field>\n                                </multi-field-editor-item>\n                        </multi-field-editor>\n                    </div>\n                </div>\n		    </div>\n		    <div class=\"form-group\">\n		    	<button id=\"btnUpdateSpamScore\"\n		    		type=\"submit\"\n		    		class=\"btn btn-primary\"\n		    		ng-disabled=\"checkPristine('score') || requiredScoreForm.\$invalid\"\n		    		>";$output .= $stash->get(['locale',0,'maketext',['Update Scoring Options' ]]);$output .= '</button>
		    </div>
		</form>
	</div>
</div>
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});