Template::Document->new({METADATA=>{'modtime'=>'1728930269','name'=>'/usr/local/cpanel/base/frontend/jupiter/mail/filters/userfilters.html.tt',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set(['CPANEL',0,'CPVAR',0,'dprefix',0],'../../');$stash->set('email_acct',$stash->get(['execute',['Email','account_name',{'account'=>$stash->get(['FORM',0,'account',0]),'display'=>'0' }],'data',0]));$output .= $stash->get(['Api2',0,'pre_exec',['StatsBar','stat' ]]);$stash->set('api2_result_StatsBar_stat',$stash->get(['Api2',0,'exec',['StatsBar','stat',{'warnings'=>'1','infinitylang'=>'true','warninglevel'=>'80','display'=>'emailfilters' }]]));$output .= $stash->get(['Api2',0,'post_exec',['StatsBar','stat' ]]);$output .= $stash->get(['Api2',0,'pre_exec',['Email','filterlist' ]]);$stash->set('api2_result_Email_filterlist',$stash->get(['Api2',0,'exec',['Email','filterlist',{'account'=>$stash->get(['FORM',0,'account',0])}]]));$output .= $stash->get(['Api2',0,'post_exec',['Email','filterlist' ]]);$output .= '

';if ($stash->get(['FORM',0,'account',0])ne '' || $stash->get('email_acct')ne ''){$stash->set('app_name','email_filters')}else {$stash->set('app_name','global_email_filters')}$output .= '

';if ($stash->get(['api2_result_Email_filterlist',0,'size',0])){$stash->set('js_code',do {my$output='';$output .= $context->process('js_block');$output})}else {$stash->set('js_code','')}$output .= '
';$stash->set('css_code',do {my$output='';$output .= $context->process('css_block');$output});$output .= '
';$output .= do {my$output='';$output .= '

';$output .= $context->include('_assets/_ajaxapp_header.html.tt');$output .= '

<div class="body-content">
    ';if ($stash->get('email_acct')){$output .= '
    <h2 id="hdrEditFilters">';$output .= $stash->get(['locale',0,'maketext',['Edit Filters for “[_1]”',$stash->get('email_acct')]]);$output .= '</h2>
    <p id="descEditFilters">';$output .= $stash->get(['locale',0,'maketext',['Create and manage email filters for your main email account. Rules will be processed in the order shown below, from the top down. For more information, read the [output,url,_1,documentation,target,_2,id,_3].','//go.cpanel.net/UserFilters','_blank','lnkUserFiltersDocumentation' ]]);$output .= '</p>
    '}else {$output .= '
    <h2 id="hdrEditFilters">';$output .= $stash->get(['locale',0,'maketext',['Edit Filters for “All Mail on your Account”' ]]);$output .= '</h2>
    <p id="descEditFilters">';$output .= $stash->get(['locale',0,'maketext',['Create and manage email filters for your main email account. Rules will be processed in the order shown below, from the top down. For more information, read the [output,url,_1,documentation,target,_2,id,_3].','//go.cpanel.net/GlobalFilters','_blank','lnkGlobalFiltersDocumentation' ]]);$output .= '</p>
    '}$output .= '

    <div class="section">
        <h2 id="hdrCreateFilter">';$output .= $stash->get(['locale',0,'maketext',['Create Filter' ]]);$output .= '</h2>
        <a id="btnCreateFilter" href="editfilter.html?account=';$output .= $stash->get(['RAW_FORM',0,'account',0,'uri',0]);$output .= '&amp;filtername=" class="btn btn-primary">';$output .= $stash->get(['locale',0,'maketext',['Create a New Filter' ]]);$output .= '</a>
    </div>

    ';if ($stash->get(['api2_result_StatsBar_stat',0,'size',0])){$stash->set('hashref',$stash->get(['api2_result_StatsBar_stat',0,0,0]));$output .= '
        <div class="section">
            <p class="caution">';$output .= $stash->get(['locale',0,'maketext',['[output,strong,Warning]: You currently use [numf,_1] out of [numf,_2]',$stash->get(['hashref',0,'count',0]),$stash->get(['hashref',0,'max',0])]]);$output .= '</p>
        </div>
    '}$output .= '

    ';if ($stash->get(['api2_result_Email_filterlist',0,'size',0])){$output .= '        <h2 id="hdrCurrentFilters">';$output .= $stash->get(['locale',0,'maketext',['Current Filters' ]]);$output .= '</h2>
        <div class="section" id="filter_container">
            ';if ($stash->get(['api2_result_Email_filterlist',0,'size',0])){do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('api2_result_Email_filterlist');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'hashref'}=$_tt_value;$output .= '
                <div class="filter_wrapper">
                    <div class="filter" id="';$output .= $stash->get(['hashref',0,'filtername',0,'html',0]);$output .= '-filter" title="';$output .= $stash->get(['locale',0,'maketext',['Drag to reorder.' ]]);$output .= '">
                        <div class="arrows">
                            <ul class="move">
                                <li class="up"><a href="#" onclick="move_up(this); return false"></a></li>
                                <li class="down"><a href="#" onclick="move_down(this); return false"></a></li>
                            </ul>
                        </div>
                        <div class="filter-title">';$output .= $stash->get(['hashref',0,'filtername',0,'html',0]);$output .= '</div>
                        <div class="actions">
                            <a class="btn btn-link" href="editfilter.html?account=';$output .= $stash->get(['FORM',0,'account',0]);$output .= '&filtername=';$output .= $stash->get(['hashref',0,'filtername',0,'uri',0]);$output .= '">
                                <span class="glyphicon glyphicon-pencil"></span>
                                ';$output .= $stash->get(['locale',0,'maketext',['Edit' ]]);$output .= '
                            </a>
                            <a class="btn btn-link" href="delfilter.html?account=';$output .= $stash->get(['FORM',0,'account',0]);$output .= '&filtername=';$output .= $stash->get(['hashref',0,'filtername',0,'uri',0]);$output .= '">
                                <span class="glyphicon glyphicon-trash"></span>
                                ';$output .= $stash->get(['locale',0,'maketext',['Delete' ]]);$output .= '
                            </a>
                        </div>
                        <div class="arrows2">
                            <ul class="move">
                                <li class="up"><a href="#" onclick="move_up(this); return false"></a></li>
                                <li class="down"><a href="#" onclick="move_down(this); return false"></a></li>
                            </ul>
                        </div>
                        <div class="clear"></div>
                    </div>
                </div>
                ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
            '}$output .= '
        </div>

        <div class="section" id="filtertest">
            <h2 id="hdrFilterTest">';$output .= $stash->get(['locale',0,'maketext',['Filter Test' ]]);$output .= '</h2>
            <p id="descFilterTest">';$output .= $stash->get(['locale',0,'maketext',['Enter a complete email message (including headers) below to see how the system will process it with the current filters in place.' ]]);$output .= '</p>

            <form action="filtertest.html" method="post">
                <div class="form-group">
                    <input id="hidFilterTestDomain" type="hidden" name="domain" value="';$output .= $stash->get(['FORM',0,'domain',0]);$output .= '" />
                    <input id="hidFilterTestAccount" type="hidden" name="account" value="';$output .= $stash->get(['FORM',0,'account',0]);$output .= "\" />\n\n                    <textarea id=\"txtFilterTestMessage\" name=\"test_msg\" class=\"form-control\" rows=\"10\" cols=\"55\">\nTo: test\@localhost\nFrom: test\@localhost\nSubject: test\n\n";$output .= $stash->get(['locale',0,'maketext',['This is a test message.' ]]);$output .= '
                    </textarea>
                </div>

                <div class="form-group">
                    <input id="btnFilterTest" type="submit" value="';$output .= $stash->get(['locale',0,'maketext',['Test Filter' ]]);$output .= '" class="btn btn-primary" />
                </div>
            </form>
        </div>
    '}$output .= '
    ';if ($stash->get(['FORM',0,'account',0])){$output .= '
        ';$output .= $context->include('_assets/return_link.html.tt',{'return_location'=>'managefilters.html','return_link_text'=>$stash->get(['locale',0,'maketext',['Go Back' ]])});$output .= '
    '}else {$output .= '
        ';$output .= $context->include('_assets/return_link.html.tt',{'return_location'=>'../../index.html','return_link_text'=>$stash->get(['locale',0,'maketext',['Go Back' ]])});$output .= '
    '}$output .= '

    ';$output .= $context->include('_assets/_ajaxapp_footer.html.tt');$output .= '

</div>
';$context->include('_assets/master.html.tt',{'app_key'=>$stash->get('app_name'),'page_js'=>$stash->get('js_code'),'page_styles'=>$stash->get('css_code'),'content',$output })};$output .= '

';$output .= '
';$output .= '
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{'css_block'=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '
<style type="text/css">
.filter {
   cursor:move;
   border-bottom: 1px solid #dadada;
   padding: 5px;
   text-align: center;
   zoom: 1;
}
#ygddfdiv .filter {
    opacity: 0.5;
}

ul.move {
    list-style: none;
    margin:0px;
    padding:0px;
}

ul.move li.up {
    background: transparent url(../../images/uparrow1.png) top left no-repeat;
    width: 7px;
    height: 20px;
    padding-bottom: 3px;
    margin-bottom: 3px;
    border-width: 0 0 1px 0;
    border-bottom: 1px dotted #999;
    -webkit-padding-start: 0px !important;
    padding-top:0px !important;
    margin-top:0px !important;
}
ul.move li.up:hover {
    background: url(../../images/uparrow2.png) top left no-repeat;
    }
ul.move li.down {
    background: transparent url(../../images/down-arrow1.png) top left no-repeat;
    width: 7px;
    height: 10px;
}
ul.move li.down:hover {
    background: url(../../images/down-arrow2.png) top left no-repeat;
    width:7px;
    height:10px;
}

ul, menu, dir {
    -webkit-padding-start: 0px !important;
}

ul.move li a {
    display: block;
    width: 7px;
    height: 9px;
    text-indent: -9999px;
}
.arrows {
    float:left;
    width:10px;
}
.arrows2 {
    float:right;
    width:10px;
}
.filter-title {
    float:left;
    padding-left:10px;
    text-align:left;
    text-shadow: 0 1px 0 #fff;
    padding-top:3px;
}
.actions {
    float:right;
    width:150px;
    padding-top:3px;
}
.actions a {
    padding-left:5px;
    display:inline-block;
}
.actions a.delete {

}
.clear {
    height: 0;  /* IE */
    clear:both;
}
</style>
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},'js_block'=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$output .= '
<script>
    var dditem = function() {
        dditem.superclass.constructor.apply(this,arguments);
    };

    var MAILBOX = ';$output .= $stash->get(['RAW_FORM',0,'account',0,'json',0])|| 'null';$output .= ";\n\n    function get_order() {\n        var filter_els = DOM.getElementsByClassName( \"filter\", \"div\", \"filter_container\" );\n        return filter_els.map( function(el,index) {\n            if ((index + 1) % 2 !== 0) {\n                el.classList.add(\"stripe-even\");\n                el.classList.remove(\"stripe-odd\");\n            } else {\n                el.classList.add(\"stripe-odd\");\n                el.classList.remove(\"stripe-even\");\n            }\n            return el.id.replace(/-filter\$/,\"\");\n        } );\n    }\n\n    var saved_notice = null;\n    function save_order() {\n        var api_vars = { mailbox: MAILBOX };\n        var filter_els = DOM.getElementsByClassName( \"filter\", \"div\", \"filter_container\" );\n        filter_els.forEach( function(el,idx) {\n            var filter_name = el.id.replace(/-filter\$/,\"\");\n            api_vars[\"filter\"+idx] = filter_name;\n        } );\n\n        if (saved_notice && !DOM.inDocument(saved_notice.element)) {\n            saved_notice = null;\n        }\n        var success = function() {\n            old_order_joined = get_order().join();\n            saved_notice = new CPANEL.ajax.Dynamic_Notice( {\n                level: \"success\",\n                content: \"";$output .= $stash->get(['locale',0,'maketext',['Filter order saved.' ]]);$output .= '",
                replaces: saved_notice
            } );
            YAHOO.util.DragDropMgr.unlock();
        };

        YAHOO.util.DragDropMgr.lock();

        CPANEL.api( {
            module:   "Email",
            func:     "reorderfilters",
            data:     api_vars,
            callback: CPANEL.ajax.build_callback( success, null, {
                on_error: function() { YAHOO.util.DragDropMgr.unlock() }
            } )
        } );
    }

    var old_order_joined = get_order().join();
    function order_changed() {
        var new_order_joined = get_order().join();
        return new_order_joined !== old_order_joined;
    }

    YAHOO.extend( dditem, CPANEL.dragdrop.DDItem, {
        endDrag: function() {
            CPANEL.dragdrop.DDItem.prototype.endDrag.apply(this,arguments);
            if ( order_changed() ) {
                save_order();
            }
        }
    } );

    var containers = CPANEL.dragdrop.containers( "filter_container", undefined, {
        item_constructor: dditem
    } );

    var save_timeout = null;
    function queue_save() {
        clearTimeout(save_timeout);
        save_timeout = setTimeout( save_order, 500 );
    }

    function move_up(link) {
        var wrapper = DOM.getAncestorByClassName(link,"filter_wrapper");
        var previous_wrapper = DOM.getPreviousSibling(wrapper);
        if (previous_wrapper) {
            wrapper.parentNode.insertBefore(wrapper,previous_wrapper);
            link.focus();
            queue_save();
        }
    }
    function move_down(link) {
        var wrapper = DOM.getAncestorByClassName(link,"filter_wrapper");
        var next_wrapper = DOM.getNextSibling(wrapper);
        if (next_wrapper) {
            var next_next = DOM.getNextSibling(next_wrapper);
            if (next_next) {
                wrapper.parentNode.insertBefore(wrapper,next_next);
            }
            else {
                wrapper.parentNode.appendChild(wrapper);
            }

            link.focus();
            queue_save();
        }
    }
    </script>
'}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},},});