Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/base/frontend/jupiter/sql/addb.html.tt','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set(['CPANEL',0,'CPVAR',0,'dprefix',0],'../');$stash->set('full_db',($stash->get(['ExpVar',0,'expand',['$dbownerprefix' ]]).$stash->get(['RAW_FORM',0,'db',0])));if ($stash->get(['CPANEL',0,'CPDATA',0,'item',['DEMO' ]])){$stash->set('adddb','')}else {$stash->set('adddb',$stash->get(['execute',['Mysql','create_database',{'name'=>$stash->get('full_db')}]]))}$output .= '

';$output .= do {my$output='';$output .= '<div class="body-content">
    ';if ($stash->get(['CPANEL',0,'CPDATA',0,'item',['DEMO' ]])){$output .= '
    <div id="addbWarningMsg" class="alert alert-warning">
        <span id="addbWarningImg" class="glyphicon glyphicon-exclamation-sign"></span>
        ';$output .= $stash->get(['locale',0,'maketext',['This feature is disabled in demo mode.' ]]);$output .= '
    </div>
    '}else {$output .= '
        ';if ($stash->get(['adddb',0,'status',0])){$output .= '
        <script>YAHOO.util.Connect.asyncRequest( "POST", \'';$output .= $stash->get('cp_security_token');$output .= '/3rdparty/phpMyAdmin/clearcache.php\', null, null);</script>
        <div id="addbSuccessMsg" class="alert alert-success">
            <span id="addbSuccessImg" class="glyphicon glyphicon-ok-sign"></span>
            ';$output .= $stash->get(['locale',0,'maketext',['Added the database “[_1]”.',$stash->get(['full_db',0,'html',0])]]);$output .= '
        </div>
        '}else {$output .= '
        <div id="addbErrorMsg" class="alert alert-danger">
            <span id="addbErrorImg" class="glyphicon glyphicon-remove-sign"></span>
            ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['adddb',0,'errors',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'q'}=$_tt_value;$output .= '
                ';$output .= $stash->get(['q',0,'html',0]);$output .= '
            ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
        </div>
        '}$output .= '
    '}$output .= '

    ';$output .= $context->include('_assets/return_link.html.tt',{'return_location'=>'index.html','return_link_text'=>$stash->get(['locale',0,'maketext',['Go Back' ]])});$output .= '
</div>
';$context->include('_assets/master.html.tt',{'app_key'=>'mysql_databases','content',$output })}}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});