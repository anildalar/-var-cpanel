Template::Document->new({METADATA=>{'name'=>'/usr/local/cpanel/base/frontend/jupiter/sql/deluserconfirm.html.tt','modtime'=>'1728930269',},BLOCK=>sub {my$context=shift || die "template sub called without context\n";my$stash=$context->stash;my$output='';my$_tt_error;eval {BLOCK: {$stash->set(['CPANEL',0,'CPVAR',0,'dprefix',0],'../');$stash->set('routines',$stash->get(['execute',['Mysql','list_routines',{'database_user'=>$stash->get(['FORM',0,'user',0])}]]));$stash->set('errors',[]);if ($stash->get(['routines',0,'status',0])eq 0){$stash->set('error',$stash->get(['errors',0,'merge',[$stash->get(['routines',0,'errors',0])]]))}$output .= '

';$output .= do {my$output='';$output .= '
<div class="body-content">
    <h2 id="hdrDeleteUser">
        ';$output .= $stash->get(['locale',0,'maketext',['Delete Database Users' ]]);$output .= '
    </h2>
    <p id="descRoutines">
        ';if ($stash->get(['errors',0,'size',0])> 0){do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get('errors');unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'error'}=$_tt_value;$output .= '
                <div class="alert alert-danger" role="alert">
                    <span class=\'glyphicon glyphicon-remove-sign\' aria-hidden="true"></span>
                    <div class=\'alert-message\'>
                        <strong class="alert-title">
                            ';$output .= $stash->get(['locale',0,'maketext',['Error:' ]]);$output .= '
                        </strong>
                        <span class="alert-body">
                            <span id="error-';$output .= $stash->get(['loop',0,'index',0]);$output .= '">
                                ';$output .= $stash->get(['error',0,'html',0]);$output .= '
                            </span>
                        </span>
                    </div>
                </div>
        ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
        '}elsif ($stash->get(['routines',0,'data',0,'size',0])> 0){$output .= '
            <div class="alert alert-warning" role="alert">
                <span class=\'glyphicon glyphicon-exclamation-sign\' aria-hidden="true"></span>
                <div class=\'alert-message\'>
                    <strong class="alert-title">
                        ';$output .= $stash->get(['locale',0,'maketext',['Warning:' ]]);$output .= '
                    </strong>
                    <span class="alert-body">
                        <span id="warning-private-stored-procedures">
                            ';$output .= $stash->get(['locale',0,'maketext',['Deleting “[_1]” also makes these procedures inaccessible. Your application may no longer function correctly.',$stash->get(['FORM',0,'user',0])]]);$output .= '
                        </span>
                        <p>
                            <ul>
                            ';do {my ($_tt_value,$_tt_error,$_tt_oldloop);my$_tt_list=$stash->get(['routines',0,'data',0]);unless (UNIVERSAL::isa($_tt_list,'Template::Iterator')){$_tt_list=Template::Config->iterator($_tt_list)|| die$Template::Config::ERROR,"\n"}($_tt_value,$_tt_error)=$_tt_list->get_first();eval {$_tt_oldloop=$stash->get('loop')};$stash->set('loop',$_tt_list);eval {FOR1: while (!$_tt_error){$stash->{'routine'}=$_tt_value;$output .= '
                                <li>';$output .= $stash->get(['routine',0,'html',0]);$output .= '</li>
                            ';;($_tt_value,$_tt_error)=$_tt_list->get_next()}};$stash->set('loop',$_tt_oldloop);die $@ if $@;$_tt_error=0 if$_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;die$_tt_error if$_tt_error};$output .= '
                            </ul>
                        </p>
                    </span>
                </div>
            </div>
        '}$output .= '
    </p>

    <p id="descDeleteUser">
        ';$output .= $stash->get(['locale',0,'maketext',['Are you sure you wish to permanently remove user “[_1]”?',$stash->get(['FORM',0,'user',0])]]);$output .= '
    </p>

    <p>
        <a id="btnDeleteUser"
           class="btn btn-primary"
           href="deluser.html?user=';$output .= do {my$output='';my$_tt_filter=$context->filter('html')|| $context->throw($context->error);$output .= do {my$output='';my$_tt_filter=$context->filter('uri')|| $context->throw($context->error);$output .= $stash->get(['RAW_FORM',0,'user',0]);&$_tt_filter($output)};&$_tt_filter($output)};$output .= '">
            ';$output .= $stash->get(['locale',0,'maketext',['Delete User' ]]);$output .= '
        </a>
        <a id="btnCancel"
           class="btn btn-link"
           href="index.html">
           ';$output .= $stash->get(['locale',0,'maketext',['Cancel' ]]);$output .= '
        </a>
    </p>

    ';$output .= $context->include('_assets/return_link.html.tt',{'return_location'=>'index.html','return_link_text'=>$stash->get(['locale',0,'maketext',['Go Back' ]])});$output .= '

</div>

';$context->include('_assets/master.html.tt',{'app_key'=>'mysql_databases','content',$output })}}};if ($@){$_tt_error=$context->catch($@,\$output);die$_tt_error unless$_tt_error->type eq 'return'}return$output},DEFBLOCKS=>{},});